ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"MotorISR.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MotorISR_Interrupt,"ax",%progbits
  20              		.align	2
  21              		.global	MotorISR_Interrupt
  22              		.thumb
  23              		.thumb_func
  24              		.type	MotorISR_Interrupt, %function
  25              	MotorISR_Interrupt:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC5\\MotorISR.c"
   1:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/MotorISR.c **** * File Name: MotorISR.c  
   3:Generated_Source\PSoC5/MotorISR.c **** * Version 1.71
   4:Generated_Source\PSoC5/MotorISR.c **** *
   5:Generated_Source\PSoC5/MotorISR.c **** *  Description:
   6:Generated_Source\PSoC5/MotorISR.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/MotorISR.c **** *
   8:Generated_Source\PSoC5/MotorISR.c **** *
   9:Generated_Source\PSoC5/MotorISR.c **** *  Note:
  10:Generated_Source\PSoC5/MotorISR.c **** *
  11:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
  12:Generated_Source\PSoC5/MotorISR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/MotorISR.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/MotorISR.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/MotorISR.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/MotorISR.c **** 
  18:Generated_Source\PSoC5/MotorISR.c **** 
  19:Generated_Source\PSoC5/MotorISR.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/MotorISR.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/MotorISR.c **** #include <MotorISR.h>
  22:Generated_Source\PSoC5/MotorISR.c **** #include "cyapicallbacks.h"
  23:Generated_Source\PSoC5/MotorISR.c **** 
  24:Generated_Source\PSoC5/MotorISR.c **** #if !defined(MotorISR__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/MotorISR.c **** 
  26:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/MotorISR.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/MotorISR.c **** /* `#START MotorISR_intc` */
  30:Generated_Source\PSoC5/MotorISR.c ****     #include "MotorTimer.h"
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 2


  31:Generated_Source\PSoC5/MotorISR.c ****     #include "Motor.h"
  32:Generated_Source\PSoC5/MotorISR.c ****     #include "UART.h"
  33:Generated_Source\PSoC5/MotorISR.c ****     #include "stdio.h"
  34:Generated_Source\PSoC5/MotorISR.c ****     volatile char mFlag;
  35:Generated_Source\PSoC5/MotorISR.c **** /* `#END` */
  36:Generated_Source\PSoC5/MotorISR.c **** 
  37:Generated_Source\PSoC5/MotorISR.c **** #ifndef CYINT_IRQ_BASE
  38:Generated_Source\PSoC5/MotorISR.c **** #define CYINT_IRQ_BASE      16
  39:Generated_Source\PSoC5/MotorISR.c **** #endif /* CYINT_IRQ_BASE */
  40:Generated_Source\PSoC5/MotorISR.c **** #ifndef CYINT_VECT_TABLE
  41:Generated_Source\PSoC5/MotorISR.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  42:Generated_Source\PSoC5/MotorISR.c **** #endif /* CYINT_VECT_TABLE */
  43:Generated_Source\PSoC5/MotorISR.c **** 
  44:Generated_Source\PSoC5/MotorISR.c **** /* Declared in startup, used to set unused interrupts to. */
  45:Generated_Source\PSoC5/MotorISR.c **** CY_ISR_PROTO(IntDefaultHandler);
  46:Generated_Source\PSoC5/MotorISR.c **** 
  47:Generated_Source\PSoC5/MotorISR.c **** 
  48:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
  49:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_Start
  50:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
  51:Generated_Source\PSoC5/MotorISR.c **** *
  52:Generated_Source\PSoC5/MotorISR.c **** * Summary:
  53:Generated_Source\PSoC5/MotorISR.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  54:Generated_Source\PSoC5/MotorISR.c **** *  sets the default interrupt vector, sets the priority from the value in the
  55:Generated_Source\PSoC5/MotorISR.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  56:Generated_Source\PSoC5/MotorISR.c **** *  interrupt controller.
  57:Generated_Source\PSoC5/MotorISR.c **** *
  58:Generated_Source\PSoC5/MotorISR.c **** * Parameters:  
  59:Generated_Source\PSoC5/MotorISR.c **** *   None
  60:Generated_Source\PSoC5/MotorISR.c **** *
  61:Generated_Source\PSoC5/MotorISR.c **** * Return:
  62:Generated_Source\PSoC5/MotorISR.c **** *   None
  63:Generated_Source\PSoC5/MotorISR.c **** *
  64:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
  65:Generated_Source\PSoC5/MotorISR.c **** void MotorISR_Start(void)
  66:Generated_Source\PSoC5/MotorISR.c **** {
  67:Generated_Source\PSoC5/MotorISR.c ****     /* For all we know the interrupt is active. */
  68:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_Disable();
  69:Generated_Source\PSoC5/MotorISR.c **** 
  70:Generated_Source\PSoC5/MotorISR.c ****     /* Set the ISR to point to the MotorISR Interrupt. */
  71:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_SetVector(&MotorISR_Interrupt);
  72:Generated_Source\PSoC5/MotorISR.c **** 
  73:Generated_Source\PSoC5/MotorISR.c ****     /* Set the priority. */
  74:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_SetPriority((uint8)MotorISR_INTC_PRIOR_NUMBER);
  75:Generated_Source\PSoC5/MotorISR.c **** 
  76:Generated_Source\PSoC5/MotorISR.c ****     /* Enable it. */
  77:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_Enable();
  78:Generated_Source\PSoC5/MotorISR.c **** }
  79:Generated_Source\PSoC5/MotorISR.c **** 
  80:Generated_Source\PSoC5/MotorISR.c **** 
  81:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
  82:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_StartEx
  83:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
  84:Generated_Source\PSoC5/MotorISR.c **** *
  85:Generated_Source\PSoC5/MotorISR.c **** * Summary:
  86:Generated_Source\PSoC5/MotorISR.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  87:Generated_Source\PSoC5/MotorISR.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 3


  88:Generated_Source\PSoC5/MotorISR.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  89:Generated_Source\PSoC5/MotorISR.c **** *  the interrupt to the interrupt controller.
  90:Generated_Source\PSoC5/MotorISR.c **** *  
  91:Generated_Source\PSoC5/MotorISR.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  92:Generated_Source\PSoC5/MotorISR.c **** *  used to provide consistent definition across compilers:
  93:Generated_Source\PSoC5/MotorISR.c **** *  
  94:Generated_Source\PSoC5/MotorISR.c **** *  Function definition example:
  95:Generated_Source\PSoC5/MotorISR.c **** *   CY_ISR(MyISR)
  96:Generated_Source\PSoC5/MotorISR.c **** *   {
  97:Generated_Source\PSoC5/MotorISR.c **** *   }
  98:Generated_Source\PSoC5/MotorISR.c **** *   Function prototype example:
  99:Generated_Source\PSoC5/MotorISR.c **** *   CY_ISR_PROTO(MyISR);
 100:Generated_Source\PSoC5/MotorISR.c **** *
 101:Generated_Source\PSoC5/MotorISR.c **** * Parameters:  
 102:Generated_Source\PSoC5/MotorISR.c **** *   address: Address of the ISR to set in the interrupt vector table.
 103:Generated_Source\PSoC5/MotorISR.c **** *
 104:Generated_Source\PSoC5/MotorISR.c **** * Return:
 105:Generated_Source\PSoC5/MotorISR.c **** *   None
 106:Generated_Source\PSoC5/MotorISR.c **** *
 107:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/MotorISR.c **** void MotorISR_StartEx(cyisraddress address)
 109:Generated_Source\PSoC5/MotorISR.c **** {
 110:Generated_Source\PSoC5/MotorISR.c ****     /* For all we know the interrupt is active. */
 111:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_Disable();
 112:Generated_Source\PSoC5/MotorISR.c **** 
 113:Generated_Source\PSoC5/MotorISR.c ****     /* Set the ISR to point to the MotorISR Interrupt. */
 114:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_SetVector(address);
 115:Generated_Source\PSoC5/MotorISR.c **** 
 116:Generated_Source\PSoC5/MotorISR.c ****     /* Set the priority. */
 117:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_SetPriority((uint8)MotorISR_INTC_PRIOR_NUMBER);
 118:Generated_Source\PSoC5/MotorISR.c **** 
 119:Generated_Source\PSoC5/MotorISR.c ****     /* Enable it. */
 120:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_Enable();
 121:Generated_Source\PSoC5/MotorISR.c **** }
 122:Generated_Source\PSoC5/MotorISR.c **** 
 123:Generated_Source\PSoC5/MotorISR.c **** 
 124:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 125:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_Stop
 126:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 127:Generated_Source\PSoC5/MotorISR.c **** *
 128:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 129:Generated_Source\PSoC5/MotorISR.c **** *   Disables and removes the interrupt.
 130:Generated_Source\PSoC5/MotorISR.c **** *
 131:Generated_Source\PSoC5/MotorISR.c **** * Parameters:  
 132:Generated_Source\PSoC5/MotorISR.c **** *   None
 133:Generated_Source\PSoC5/MotorISR.c **** *
 134:Generated_Source\PSoC5/MotorISR.c **** * Return:
 135:Generated_Source\PSoC5/MotorISR.c **** *   None
 136:Generated_Source\PSoC5/MotorISR.c **** *
 137:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 138:Generated_Source\PSoC5/MotorISR.c **** void MotorISR_Stop(void)
 139:Generated_Source\PSoC5/MotorISR.c **** {
 140:Generated_Source\PSoC5/MotorISR.c ****     /* Disable this interrupt. */
 141:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_Disable();
 142:Generated_Source\PSoC5/MotorISR.c **** 
 143:Generated_Source\PSoC5/MotorISR.c ****     /* Set the ISR to point to the passive one. */
 144:Generated_Source\PSoC5/MotorISR.c ****     MotorISR_SetVector(&IntDefaultHandler);
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 4


 145:Generated_Source\PSoC5/MotorISR.c **** }
 146:Generated_Source\PSoC5/MotorISR.c **** 
 147:Generated_Source\PSoC5/MotorISR.c **** 
 148:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 149:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_Interrupt
 150:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 151:Generated_Source\PSoC5/MotorISR.c **** *
 152:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 153:Generated_Source\PSoC5/MotorISR.c **** *   The default Interrupt Service Routine for MotorISR.
 154:Generated_Source\PSoC5/MotorISR.c **** *
 155:Generated_Source\PSoC5/MotorISR.c **** *   Add custom code between the coments to keep the next version of this file
 156:Generated_Source\PSoC5/MotorISR.c **** *   from over writting your code.
 157:Generated_Source\PSoC5/MotorISR.c **** *
 158:Generated_Source\PSoC5/MotorISR.c **** * Parameters:  
 159:Generated_Source\PSoC5/MotorISR.c **** *
 160:Generated_Source\PSoC5/MotorISR.c **** * Return:
 161:Generated_Source\PSoC5/MotorISR.c **** *   None
 162:Generated_Source\PSoC5/MotorISR.c **** *
 163:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 164:Generated_Source\PSoC5/MotorISR.c **** CY_ISR(MotorISR_Interrupt)
 165:Generated_Source\PSoC5/MotorISR.c **** {
  28              		.loc 1 165 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 166:Generated_Source\PSoC5/MotorISR.c ****     #ifdef MotorISR_INTERRUPT_INTERRUPT_CALLBACK
 167:Generated_Source\PSoC5/MotorISR.c ****         MotorISR_Interrupt_InterruptCallback();
 168:Generated_Source\PSoC5/MotorISR.c ****     #endif /* MotorISR_INTERRUPT_INTERRUPT_CALLBACK */ 
 169:Generated_Source\PSoC5/MotorISR.c **** 
 170:Generated_Source\PSoC5/MotorISR.c ****     /*  Place your Interrupt code here. */
 171:Generated_Source\PSoC5/MotorISR.c ****     /* `#START MotorISR_Interrupt` */
 172:Generated_Source\PSoC5/MotorISR.c ****     char a[1];
 173:Generated_Source\PSoC5/MotorISR.c ****         if(mFlag == 'f')
  36              		.loc 1 173 0
  37 0002 224B     		ldr	r3, .L11
  38 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  39 0006 DBB2     		uxtb	r3, r3
  40 0008 662B     		cmp	r3, #102
  41 000a 1BD1     		bne	.L2
 174:Generated_Source\PSoC5/MotorISR.c ****         {
 175:Generated_Source\PSoC5/MotorISR.c ****             if(Motor_Read() == 0xA)
  42              		.loc 1 175 0
  43 000c FFF7FEFF 		bl	Motor_Read
  44              	.LVL0:
  45 0010 0A28     		cmp	r0, #10
  46 0012 03D1     		bne	.L3
 176:Generated_Source\PSoC5/MotorISR.c ****             {
 177:Generated_Source\PSoC5/MotorISR.c ****                 Motor_Write(0x9);
  47              		.loc 1 177 0
  48 0014 0920     		movs	r0, #9
  49 0016 FFF7FEFF 		bl	Motor_Write
  50              	.LVL1:
  51 001a 33E0     		b	.L4
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 5


  52              	.L3:
 178:Generated_Source\PSoC5/MotorISR.c ****             }
 179:Generated_Source\PSoC5/MotorISR.c ****             else if(Motor_Read() == 0x9)
  53              		.loc 1 179 0
  54 001c FFF7FEFF 		bl	Motor_Read
  55              	.LVL2:
  56 0020 0928     		cmp	r0, #9
  57 0022 03D1     		bne	.L5
 180:Generated_Source\PSoC5/MotorISR.c ****             {
 181:Generated_Source\PSoC5/MotorISR.c ****                 Motor_Write(0x5);   
  58              		.loc 1 181 0
  59 0024 0520     		movs	r0, #5
  60 0026 FFF7FEFF 		bl	Motor_Write
  61              	.LVL3:
  62 002a 2BE0     		b	.L4
  63              	.L5:
 182:Generated_Source\PSoC5/MotorISR.c ****             }
 183:Generated_Source\PSoC5/MotorISR.c ****             else if(Motor_Read() == 0x5)
  64              		.loc 1 183 0
  65 002c FFF7FEFF 		bl	Motor_Read
  66              	.LVL4:
  67 0030 0528     		cmp	r0, #5
  68 0032 03D1     		bne	.L6
 184:Generated_Source\PSoC5/MotorISR.c ****             {
 185:Generated_Source\PSoC5/MotorISR.c ****                 Motor_Write(0x6);   
  69              		.loc 1 185 0
  70 0034 0620     		movs	r0, #6
  71 0036 FFF7FEFF 		bl	Motor_Write
  72              	.LVL5:
  73 003a 23E0     		b	.L4
  74              	.L6:
 186:Generated_Source\PSoC5/MotorISR.c ****             }
 187:Generated_Source\PSoC5/MotorISR.c ****             else
 188:Generated_Source\PSoC5/MotorISR.c ****             {
 189:Generated_Source\PSoC5/MotorISR.c ****                 Motor_Write(0xA);
  75              		.loc 1 189 0
  76 003c 0A20     		movs	r0, #10
  77 003e FFF7FEFF 		bl	Motor_Write
  78              	.LVL6:
  79 0042 1FE0     		b	.L4
  80              	.L2:
 190:Generated_Source\PSoC5/MotorISR.c ****             }
 191:Generated_Source\PSoC5/MotorISR.c ****         }
 192:Generated_Source\PSoC5/MotorISR.c ****         else if(mFlag == 'b')
  81              		.loc 1 192 0
  82 0044 114B     		ldr	r3, .L11
  83 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  84 0048 DBB2     		uxtb	r3, r3
  85 004a 622B     		cmp	r3, #98
  86 004c 1AD1     		bne	.L4
 193:Generated_Source\PSoC5/MotorISR.c ****         {
 194:Generated_Source\PSoC5/MotorISR.c ****             if(Motor_Read() == 0xA)
  87              		.loc 1 194 0
  88 004e FFF7FEFF 		bl	Motor_Read
  89              	.LVL7:
  90 0052 0A28     		cmp	r0, #10
  91 0054 03D1     		bne	.L7
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 6


 195:Generated_Source\PSoC5/MotorISR.c ****             {
 196:Generated_Source\PSoC5/MotorISR.c ****                 Motor_Write(0x6);
  92              		.loc 1 196 0
  93 0056 0620     		movs	r0, #6
  94 0058 FFF7FEFF 		bl	Motor_Write
  95              	.LVL8:
  96 005c 12E0     		b	.L4
  97              	.L7:
 197:Generated_Source\PSoC5/MotorISR.c ****             }
 198:Generated_Source\PSoC5/MotorISR.c ****             else if(Motor_Read() == 0x6)
  98              		.loc 1 198 0
  99 005e FFF7FEFF 		bl	Motor_Read
 100              	.LVL9:
 101 0062 0628     		cmp	r0, #6
 102 0064 03D1     		bne	.L8
 199:Generated_Source\PSoC5/MotorISR.c ****             {
 200:Generated_Source\PSoC5/MotorISR.c ****                 Motor_Write(0x5);   
 103              		.loc 1 200 0
 104 0066 0520     		movs	r0, #5
 105 0068 FFF7FEFF 		bl	Motor_Write
 106              	.LVL10:
 107 006c 0AE0     		b	.L4
 108              	.L8:
 201:Generated_Source\PSoC5/MotorISR.c ****             }
 202:Generated_Source\PSoC5/MotorISR.c ****             else if(Motor_Read() == 0x5)
 109              		.loc 1 202 0
 110 006e FFF7FEFF 		bl	Motor_Read
 111              	.LVL11:
 112 0072 0528     		cmp	r0, #5
 113 0074 03D1     		bne	.L9
 203:Generated_Source\PSoC5/MotorISR.c ****             {
 204:Generated_Source\PSoC5/MotorISR.c ****                 Motor_Write(0x9);   
 114              		.loc 1 204 0
 115 0076 0920     		movs	r0, #9
 116 0078 FFF7FEFF 		bl	Motor_Write
 117              	.LVL12:
 118 007c 02E0     		b	.L4
 119              	.L9:
 205:Generated_Source\PSoC5/MotorISR.c ****             }
 206:Generated_Source\PSoC5/MotorISR.c ****             else
 207:Generated_Source\PSoC5/MotorISR.c ****             {
 208:Generated_Source\PSoC5/MotorISR.c ****                 Motor_Write(0xA);   
 120              		.loc 1 208 0
 121 007e 0A20     		movs	r0, #10
 122 0080 FFF7FEFF 		bl	Motor_Write
 123              	.LVL13:
 124              	.L4:
 209:Generated_Source\PSoC5/MotorISR.c ****             }
 210:Generated_Source\PSoC5/MotorISR.c ****         }
 211:Generated_Source\PSoC5/MotorISR.c ****         MotorTimer_ReadStatusRegister();
 125              		.loc 1 211 0
 126 0084 FFF7FEFF 		bl	MotorTimer_ReadStatusRegister
 127              	.LVL14:
 128 0088 08BD     		pop	{r3, pc}
 129              	.L12:
 130 008a 00BF     		.align	2
 131              	.L11:
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 7


 132 008c 00000000 		.word	mFlag
 133              		.cfi_endproc
 134              	.LFE4:
 135              		.size	MotorISR_Interrupt, .-MotorISR_Interrupt
 136              		.section	.text.MotorISR_SetVector,"ax",%progbits
 137              		.align	2
 138              		.global	MotorISR_SetVector
 139              		.thumb
 140              		.thumb_func
 141              		.type	MotorISR_SetVector, %function
 142              	MotorISR_SetVector:
 143              	.LFB5:
 212:Generated_Source\PSoC5/MotorISR.c ****     /* `#END` */
 213:Generated_Source\PSoC5/MotorISR.c **** }
 214:Generated_Source\PSoC5/MotorISR.c **** 
 215:Generated_Source\PSoC5/MotorISR.c **** 
 216:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 217:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_SetVector
 218:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 219:Generated_Source\PSoC5/MotorISR.c **** *
 220:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 221:Generated_Source\PSoC5/MotorISR.c **** *   Change the ISR vector for the Interrupt. Note calling MotorISR_Start
 222:Generated_Source\PSoC5/MotorISR.c **** *   will override any effect this method would have had. To set the vector 
 223:Generated_Source\PSoC5/MotorISR.c **** *   before the component has been started use MotorISR_StartEx instead.
 224:Generated_Source\PSoC5/MotorISR.c **** * 
 225:Generated_Source\PSoC5/MotorISR.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 226:Generated_Source\PSoC5/MotorISR.c **** *   used to provide consistent definition across compilers:
 227:Generated_Source\PSoC5/MotorISR.c **** *
 228:Generated_Source\PSoC5/MotorISR.c **** *   Function definition example:
 229:Generated_Source\PSoC5/MotorISR.c **** *   CY_ISR(MyISR)
 230:Generated_Source\PSoC5/MotorISR.c **** *   {
 231:Generated_Source\PSoC5/MotorISR.c **** *   }
 232:Generated_Source\PSoC5/MotorISR.c **** *
 233:Generated_Source\PSoC5/MotorISR.c **** *   Function prototype example:
 234:Generated_Source\PSoC5/MotorISR.c **** *     CY_ISR_PROTO(MyISR);
 235:Generated_Source\PSoC5/MotorISR.c **** *
 236:Generated_Source\PSoC5/MotorISR.c **** * Parameters:
 237:Generated_Source\PSoC5/MotorISR.c **** *   address: Address of the ISR to set in the interrupt vector table.
 238:Generated_Source\PSoC5/MotorISR.c **** *
 239:Generated_Source\PSoC5/MotorISR.c **** * Return:
 240:Generated_Source\PSoC5/MotorISR.c **** *   None
 241:Generated_Source\PSoC5/MotorISR.c **** *
 242:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 243:Generated_Source\PSoC5/MotorISR.c **** void MotorISR_SetVector(cyisraddress address)
 244:Generated_Source\PSoC5/MotorISR.c **** {
 144              		.loc 1 244 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149              	.LVL15:
 245:Generated_Source\PSoC5/MotorISR.c ****     cyisraddress * ramVectorTable;
 246:Generated_Source\PSoC5/MotorISR.c **** 
 247:Generated_Source\PSoC5/MotorISR.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 150              		.loc 1 247 0
 151 0000 024B     		ldr	r3, .L14
 152 0002 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 8


 153              	.LVL16:
 248:Generated_Source\PSoC5/MotorISR.c **** 
 249:Generated_Source\PSoC5/MotorISR.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)MotorISR__INTC_NUMBER] = address;
 154              		.loc 1 249 0
 155 0004 C3F88400 		str	r0, [r3, #132]
 156 0008 7047     		bx	lr
 157              	.L15:
 158 000a 00BF     		.align	2
 159              	.L14:
 160 000c 08ED00E0 		.word	-536810232
 161              		.cfi_endproc
 162              	.LFE5:
 163              		.size	MotorISR_SetVector, .-MotorISR_SetVector
 164              		.section	.text.MotorISR_GetVector,"ax",%progbits
 165              		.align	2
 166              		.global	MotorISR_GetVector
 167              		.thumb
 168              		.thumb_func
 169              		.type	MotorISR_GetVector, %function
 170              	MotorISR_GetVector:
 171              	.LFB6:
 250:Generated_Source\PSoC5/MotorISR.c **** }
 251:Generated_Source\PSoC5/MotorISR.c **** 
 252:Generated_Source\PSoC5/MotorISR.c **** 
 253:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 254:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_GetVector
 255:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 256:Generated_Source\PSoC5/MotorISR.c **** *
 257:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 258:Generated_Source\PSoC5/MotorISR.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 259:Generated_Source\PSoC5/MotorISR.c **** *
 260:Generated_Source\PSoC5/MotorISR.c **** * Parameters:
 261:Generated_Source\PSoC5/MotorISR.c **** *   None
 262:Generated_Source\PSoC5/MotorISR.c **** *
 263:Generated_Source\PSoC5/MotorISR.c **** * Return:
 264:Generated_Source\PSoC5/MotorISR.c **** *   Address of the ISR in the interrupt vector table.
 265:Generated_Source\PSoC5/MotorISR.c **** *
 266:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 267:Generated_Source\PSoC5/MotorISR.c **** cyisraddress MotorISR_GetVector(void)
 268:Generated_Source\PSoC5/MotorISR.c **** {
 172              		.loc 1 268 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 269:Generated_Source\PSoC5/MotorISR.c ****     cyisraddress * ramVectorTable;
 270:Generated_Source\PSoC5/MotorISR.c **** 
 271:Generated_Source\PSoC5/MotorISR.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 177              		.loc 1 271 0
 178 0000 024B     		ldr	r3, .L17
 179 0002 1B68     		ldr	r3, [r3]
 180              	.LVL17:
 272:Generated_Source\PSoC5/MotorISR.c **** 
 273:Generated_Source\PSoC5/MotorISR.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)MotorISR__INTC_NUMBER];
 274:Generated_Source\PSoC5/MotorISR.c **** }
 181              		.loc 1 274 0
 182 0004 D3F88400 		ldr	r0, [r3, #132]
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 9


 183 0008 7047     		bx	lr
 184              	.L18:
 185 000a 00BF     		.align	2
 186              	.L17:
 187 000c 08ED00E0 		.word	-536810232
 188              		.cfi_endproc
 189              	.LFE6:
 190              		.size	MotorISR_GetVector, .-MotorISR_GetVector
 191              		.section	.text.MotorISR_SetPriority,"ax",%progbits
 192              		.align	2
 193              		.global	MotorISR_SetPriority
 194              		.thumb
 195              		.thumb_func
 196              		.type	MotorISR_SetPriority, %function
 197              	MotorISR_SetPriority:
 198              	.LFB7:
 275:Generated_Source\PSoC5/MotorISR.c **** 
 276:Generated_Source\PSoC5/MotorISR.c **** 
 277:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 278:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_SetPriority
 279:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 280:Generated_Source\PSoC5/MotorISR.c **** *
 281:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 282:Generated_Source\PSoC5/MotorISR.c **** *   Sets the Priority of the Interrupt. 
 283:Generated_Source\PSoC5/MotorISR.c **** *
 284:Generated_Source\PSoC5/MotorISR.c **** *   Note calling MotorISR_Start or MotorISR_StartEx will 
 285:Generated_Source\PSoC5/MotorISR.c **** *   override any effect this API would have had. This API should only be called
 286:Generated_Source\PSoC5/MotorISR.c **** *   after MotorISR_Start or MotorISR_StartEx has been called. 
 287:Generated_Source\PSoC5/MotorISR.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 288:Generated_Source\PSoC5/MotorISR.c **** *   Interrupt Editor.
 289:Generated_Source\PSoC5/MotorISR.c **** *
 290:Generated_Source\PSoC5/MotorISR.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 291:Generated_Source\PSoC5/MotorISR.c **** *
 292:Generated_Source\PSoC5/MotorISR.c **** * Parameters:
 293:Generated_Source\PSoC5/MotorISR.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 294:Generated_Source\PSoC5/MotorISR.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 295:Generated_Source\PSoC5/MotorISR.c **** *             PSoC 4: Priority is from 0 to 3.
 296:Generated_Source\PSoC5/MotorISR.c **** *
 297:Generated_Source\PSoC5/MotorISR.c **** * Return:
 298:Generated_Source\PSoC5/MotorISR.c **** *   None
 299:Generated_Source\PSoC5/MotorISR.c **** *
 300:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 301:Generated_Source\PSoC5/MotorISR.c **** void MotorISR_SetPriority(uint8 priority)
 302:Generated_Source\PSoC5/MotorISR.c **** {
 199              		.loc 1 302 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204              	.LVL18:
 303:Generated_Source\PSoC5/MotorISR.c ****     *MotorISR_INTC_PRIOR = priority << 5;
 205              		.loc 1 303 0
 206 0000 4001     		lsls	r0, r0, #5
 207              	.LVL19:
 208 0002 C0B2     		uxtb	r0, r0
 209 0004 014B     		ldr	r3, .L20
 210 0006 1870     		strb	r0, [r3]
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 10


 211 0008 7047     		bx	lr
 212              	.L21:
 213 000a 00BF     		.align	2
 214              	.L20:
 215 000c 11E400E0 		.word	-536812527
 216              		.cfi_endproc
 217              	.LFE7:
 218              		.size	MotorISR_SetPriority, .-MotorISR_SetPriority
 219              		.section	.text.MotorISR_GetPriority,"ax",%progbits
 220              		.align	2
 221              		.global	MotorISR_GetPriority
 222              		.thumb
 223              		.thumb_func
 224              		.type	MotorISR_GetPriority, %function
 225              	MotorISR_GetPriority:
 226              	.LFB8:
 304:Generated_Source\PSoC5/MotorISR.c **** }
 305:Generated_Source\PSoC5/MotorISR.c **** 
 306:Generated_Source\PSoC5/MotorISR.c **** 
 307:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 308:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_GetPriority
 309:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 310:Generated_Source\PSoC5/MotorISR.c **** *
 311:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 312:Generated_Source\PSoC5/MotorISR.c **** *   Gets the Priority of the Interrupt.
 313:Generated_Source\PSoC5/MotorISR.c **** *
 314:Generated_Source\PSoC5/MotorISR.c **** * Parameters:
 315:Generated_Source\PSoC5/MotorISR.c **** *   None
 316:Generated_Source\PSoC5/MotorISR.c **** *
 317:Generated_Source\PSoC5/MotorISR.c **** * Return:
 318:Generated_Source\PSoC5/MotorISR.c **** *   Priority of the interrupt, 0 being the highest priority
 319:Generated_Source\PSoC5/MotorISR.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 320:Generated_Source\PSoC5/MotorISR.c **** *    PSoC 4: Priority is from 0 to 3.
 321:Generated_Source\PSoC5/MotorISR.c **** *
 322:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 323:Generated_Source\PSoC5/MotorISR.c **** uint8 MotorISR_GetPriority(void)
 324:Generated_Source\PSoC5/MotorISR.c **** {
 227              		.loc 1 324 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 325:Generated_Source\PSoC5/MotorISR.c ****     uint8 priority;
 326:Generated_Source\PSoC5/MotorISR.c **** 
 327:Generated_Source\PSoC5/MotorISR.c **** 
 328:Generated_Source\PSoC5/MotorISR.c ****     priority = *MotorISR_INTC_PRIOR >> 5;
 232              		.loc 1 328 0
 233 0000 014B     		ldr	r3, .L23
 234 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 235              	.LVL20:
 329:Generated_Source\PSoC5/MotorISR.c **** 
 330:Generated_Source\PSoC5/MotorISR.c ****     return priority;
 331:Generated_Source\PSoC5/MotorISR.c **** }
 236              		.loc 1 331 0
 237 0004 4009     		lsrs	r0, r0, #5
 238              	.LVL21:
 239 0006 7047     		bx	lr
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 11


 240              	.L24:
 241              		.align	2
 242              	.L23:
 243 0008 11E400E0 		.word	-536812527
 244              		.cfi_endproc
 245              	.LFE8:
 246              		.size	MotorISR_GetPriority, .-MotorISR_GetPriority
 247              		.section	.text.MotorISR_Enable,"ax",%progbits
 248              		.align	2
 249              		.global	MotorISR_Enable
 250              		.thumb
 251              		.thumb_func
 252              		.type	MotorISR_Enable, %function
 253              	MotorISR_Enable:
 254              	.LFB9:
 332:Generated_Source\PSoC5/MotorISR.c **** 
 333:Generated_Source\PSoC5/MotorISR.c **** 
 334:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_Enable
 336:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 337:Generated_Source\PSoC5/MotorISR.c **** *
 338:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 339:Generated_Source\PSoC5/MotorISR.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 340:Generated_Source\PSoC5/MotorISR.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 341:Generated_Source\PSoC5/MotorISR.c **** *   function, which sets the vector and the priority, has been called.
 342:Generated_Source\PSoC5/MotorISR.c **** *
 343:Generated_Source\PSoC5/MotorISR.c **** * Parameters:
 344:Generated_Source\PSoC5/MotorISR.c **** *   None
 345:Generated_Source\PSoC5/MotorISR.c **** *
 346:Generated_Source\PSoC5/MotorISR.c **** * Return:
 347:Generated_Source\PSoC5/MotorISR.c **** *   None
 348:Generated_Source\PSoC5/MotorISR.c **** *
 349:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 350:Generated_Source\PSoC5/MotorISR.c **** void MotorISR_Enable(void)
 351:Generated_Source\PSoC5/MotorISR.c **** {
 255              		.loc 1 351 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 352:Generated_Source\PSoC5/MotorISR.c ****     /* Enable the general interrupt. */
 353:Generated_Source\PSoC5/MotorISR.c ****     *MotorISR_INTC_SET_EN = MotorISR__INTC_MASK;
 260              		.loc 1 353 0
 261 0000 4FF40032 		mov	r2, #131072
 262 0004 014B     		ldr	r3, .L26
 263 0006 1A60     		str	r2, [r3]
 264 0008 7047     		bx	lr
 265              	.L27:
 266 000a 00BF     		.align	2
 267              	.L26:
 268 000c 00E100E0 		.word	-536813312
 269              		.cfi_endproc
 270              	.LFE9:
 271              		.size	MotorISR_Enable, .-MotorISR_Enable
 272              		.section	.text.MotorISR_GetState,"ax",%progbits
 273              		.align	2
 274              		.global	MotorISR_GetState
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 12


 275              		.thumb
 276              		.thumb_func
 277              		.type	MotorISR_GetState, %function
 278              	MotorISR_GetState:
 279              	.LFB10:
 354:Generated_Source\PSoC5/MotorISR.c **** }
 355:Generated_Source\PSoC5/MotorISR.c **** 
 356:Generated_Source\PSoC5/MotorISR.c **** 
 357:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 358:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_GetState
 359:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 360:Generated_Source\PSoC5/MotorISR.c **** *
 361:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 362:Generated_Source\PSoC5/MotorISR.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 363:Generated_Source\PSoC5/MotorISR.c **** *
 364:Generated_Source\PSoC5/MotorISR.c **** * Parameters:
 365:Generated_Source\PSoC5/MotorISR.c **** *   None
 366:Generated_Source\PSoC5/MotorISR.c **** *
 367:Generated_Source\PSoC5/MotorISR.c **** * Return:
 368:Generated_Source\PSoC5/MotorISR.c **** *   1 if enabled, 0 if disabled.
 369:Generated_Source\PSoC5/MotorISR.c **** *
 370:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 371:Generated_Source\PSoC5/MotorISR.c **** uint8 MotorISR_GetState(void)
 372:Generated_Source\PSoC5/MotorISR.c **** {
 280              		.loc 1 372 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 373:Generated_Source\PSoC5/MotorISR.c ****     /* Get the state of the general interrupt. */
 374:Generated_Source\PSoC5/MotorISR.c ****     return ((*MotorISR_INTC_SET_EN & (uint32)MotorISR__INTC_MASK) != 0u) ? 1u:0u;
 285              		.loc 1 374 0
 286 0000 044B     		ldr	r3, .L31
 287 0002 1B68     		ldr	r3, [r3]
 288 0004 13F4003F 		tst	r3, #131072
 289 0008 01D0     		beq	.L30
 290 000a 0120     		movs	r0, #1
 291 000c 7047     		bx	lr
 292              	.L30:
 293 000e 0020     		movs	r0, #0
 375:Generated_Source\PSoC5/MotorISR.c **** }
 294              		.loc 1 375 0
 295 0010 7047     		bx	lr
 296              	.L32:
 297 0012 00BF     		.align	2
 298              	.L31:
 299 0014 00E100E0 		.word	-536813312
 300              		.cfi_endproc
 301              	.LFE10:
 302              		.size	MotorISR_GetState, .-MotorISR_GetState
 303              		.section	.text.MotorISR_Disable,"ax",%progbits
 304              		.align	2
 305              		.global	MotorISR_Disable
 306              		.thumb
 307              		.thumb_func
 308              		.type	MotorISR_Disable, %function
 309              	MotorISR_Disable:
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 13


 310              	.LFB11:
 376:Generated_Source\PSoC5/MotorISR.c **** 
 377:Generated_Source\PSoC5/MotorISR.c **** 
 378:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 379:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_Disable
 380:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 381:Generated_Source\PSoC5/MotorISR.c **** *
 382:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 383:Generated_Source\PSoC5/MotorISR.c **** *   Disables the Interrupt in the interrupt controller.
 384:Generated_Source\PSoC5/MotorISR.c **** *
 385:Generated_Source\PSoC5/MotorISR.c **** * Parameters:
 386:Generated_Source\PSoC5/MotorISR.c **** *   None
 387:Generated_Source\PSoC5/MotorISR.c **** *
 388:Generated_Source\PSoC5/MotorISR.c **** * Return:
 389:Generated_Source\PSoC5/MotorISR.c **** *   None
 390:Generated_Source\PSoC5/MotorISR.c **** *
 391:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 392:Generated_Source\PSoC5/MotorISR.c **** void MotorISR_Disable(void)
 393:Generated_Source\PSoC5/MotorISR.c **** {
 311              		.loc 1 393 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 394:Generated_Source\PSoC5/MotorISR.c ****     /* Disable the general interrupt. */
 395:Generated_Source\PSoC5/MotorISR.c ****     *MotorISR_INTC_CLR_EN = MotorISR__INTC_MASK;
 316              		.loc 1 395 0
 317 0000 4FF40032 		mov	r2, #131072
 318 0004 014B     		ldr	r3, .L34
 319 0006 1A60     		str	r2, [r3]
 320 0008 7047     		bx	lr
 321              	.L35:
 322 000a 00BF     		.align	2
 323              	.L34:
 324 000c 80E100E0 		.word	-536813184
 325              		.cfi_endproc
 326              	.LFE11:
 327              		.size	MotorISR_Disable, .-MotorISR_Disable
 328              		.section	.text.MotorISR_Start,"ax",%progbits
 329              		.align	2
 330              		.global	MotorISR_Start
 331              		.thumb
 332              		.thumb_func
 333              		.type	MotorISR_Start, %function
 334              	MotorISR_Start:
 335              	.LFB1:
  66:Generated_Source\PSoC5/MotorISR.c ****     /* For all we know the interrupt is active. */
 336              		.loc 1 66 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 08B5     		push	{r3, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 3, -8
 343              		.cfi_offset 14, -4
  68:Generated_Source\PSoC5/MotorISR.c **** 
 344              		.loc 1 68 0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 14


 345 0002 FFF7FEFF 		bl	MotorISR_Disable
 346              	.LVL22:
  71:Generated_Source\PSoC5/MotorISR.c **** 
 347              		.loc 1 71 0
 348 0006 0448     		ldr	r0, .L38
 349 0008 FFF7FEFF 		bl	MotorISR_SetVector
 350              	.LVL23:
  74:Generated_Source\PSoC5/MotorISR.c **** 
 351              		.loc 1 74 0
 352 000c 0020     		movs	r0, #0
 353 000e FFF7FEFF 		bl	MotorISR_SetPriority
 354              	.LVL24:
  77:Generated_Source\PSoC5/MotorISR.c **** }
 355              		.loc 1 77 0
 356 0012 FFF7FEFF 		bl	MotorISR_Enable
 357              	.LVL25:
 358 0016 08BD     		pop	{r3, pc}
 359              	.L39:
 360              		.align	2
 361              	.L38:
 362 0018 00000000 		.word	MotorISR_Interrupt
 363              		.cfi_endproc
 364              	.LFE1:
 365              		.size	MotorISR_Start, .-MotorISR_Start
 366              		.section	.text.MotorISR_StartEx,"ax",%progbits
 367              		.align	2
 368              		.global	MotorISR_StartEx
 369              		.thumb
 370              		.thumb_func
 371              		.type	MotorISR_StartEx, %function
 372              	MotorISR_StartEx:
 373              	.LFB2:
 109:Generated_Source\PSoC5/MotorISR.c ****     /* For all we know the interrupt is active. */
 374              		.loc 1 109 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              	.LVL26:
 379 0000 10B5     		push	{r4, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 4, -8
 382              		.cfi_offset 14, -4
 383 0002 0446     		mov	r4, r0
 111:Generated_Source\PSoC5/MotorISR.c **** 
 384              		.loc 1 111 0
 385 0004 FFF7FEFF 		bl	MotorISR_Disable
 386              	.LVL27:
 114:Generated_Source\PSoC5/MotorISR.c **** 
 387              		.loc 1 114 0
 388 0008 2046     		mov	r0, r4
 389 000a FFF7FEFF 		bl	MotorISR_SetVector
 390              	.LVL28:
 117:Generated_Source\PSoC5/MotorISR.c **** 
 391              		.loc 1 117 0
 392 000e 0020     		movs	r0, #0
 393 0010 FFF7FEFF 		bl	MotorISR_SetPriority
 394              	.LVL29:
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 15


 120:Generated_Source\PSoC5/MotorISR.c **** }
 395              		.loc 1 120 0
 396 0014 FFF7FEFF 		bl	MotorISR_Enable
 397              	.LVL30:
 398 0018 10BD     		pop	{r4, pc}
 399              		.cfi_endproc
 400              	.LFE2:
 401              		.size	MotorISR_StartEx, .-MotorISR_StartEx
 402 001a 00BF     		.section	.text.MotorISR_Stop,"ax",%progbits
 403              		.align	2
 404              		.global	MotorISR_Stop
 405              		.thumb
 406              		.thumb_func
 407              		.type	MotorISR_Stop, %function
 408              	MotorISR_Stop:
 409              	.LFB3:
 139:Generated_Source\PSoC5/MotorISR.c ****     /* Disable this interrupt. */
 410              		.loc 1 139 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414 0000 08B5     		push	{r3, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 3, -8
 417              		.cfi_offset 14, -4
 141:Generated_Source\PSoC5/MotorISR.c **** 
 418              		.loc 1 141 0
 419 0002 FFF7FEFF 		bl	MotorISR_Disable
 420              	.LVL31:
 144:Generated_Source\PSoC5/MotorISR.c **** }
 421              		.loc 1 144 0
 422 0006 0248     		ldr	r0, .L44
 423 0008 FFF7FEFF 		bl	MotorISR_SetVector
 424              	.LVL32:
 425 000c 08BD     		pop	{r3, pc}
 426              	.L45:
 427 000e 00BF     		.align	2
 428              	.L44:
 429 0010 00000000 		.word	IntDefaultHandler
 430              		.cfi_endproc
 431              	.LFE3:
 432              		.size	MotorISR_Stop, .-MotorISR_Stop
 433              		.section	.text.MotorISR_SetPending,"ax",%progbits
 434              		.align	2
 435              		.global	MotorISR_SetPending
 436              		.thumb
 437              		.thumb_func
 438              		.type	MotorISR_SetPending, %function
 439              	MotorISR_SetPending:
 440              	.LFB12:
 396:Generated_Source\PSoC5/MotorISR.c **** }
 397:Generated_Source\PSoC5/MotorISR.c **** 
 398:Generated_Source\PSoC5/MotorISR.c **** 
 399:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 400:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_SetPending
 401:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 402:Generated_Source\PSoC5/MotorISR.c **** *
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 16


 403:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 404:Generated_Source\PSoC5/MotorISR.c **** *   Causes the Interrupt to enter the pending state, a software method of
 405:Generated_Source\PSoC5/MotorISR.c **** *   generating the interrupt.
 406:Generated_Source\PSoC5/MotorISR.c **** *
 407:Generated_Source\PSoC5/MotorISR.c **** * Parameters:
 408:Generated_Source\PSoC5/MotorISR.c **** *   None
 409:Generated_Source\PSoC5/MotorISR.c **** *
 410:Generated_Source\PSoC5/MotorISR.c **** * Return:
 411:Generated_Source\PSoC5/MotorISR.c **** *   None
 412:Generated_Source\PSoC5/MotorISR.c **** *
 413:Generated_Source\PSoC5/MotorISR.c **** * Side Effects:
 414:Generated_Source\PSoC5/MotorISR.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 415:Generated_Source\PSoC5/MotorISR.c **** *   entered (depending on the priority of this interrupt and other pending 
 416:Generated_Source\PSoC5/MotorISR.c **** *   interrupts).
 417:Generated_Source\PSoC5/MotorISR.c **** *
 418:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 419:Generated_Source\PSoC5/MotorISR.c **** void MotorISR_SetPending(void)
 420:Generated_Source\PSoC5/MotorISR.c **** {
 441              		.loc 1 420 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 421:Generated_Source\PSoC5/MotorISR.c ****     *MotorISR_INTC_SET_PD = MotorISR__INTC_MASK;
 446              		.loc 1 421 0
 447 0000 4FF40032 		mov	r2, #131072
 448 0004 014B     		ldr	r3, .L47
 449 0006 1A60     		str	r2, [r3]
 450 0008 7047     		bx	lr
 451              	.L48:
 452 000a 00BF     		.align	2
 453              	.L47:
 454 000c 00E200E0 		.word	-536813056
 455              		.cfi_endproc
 456              	.LFE12:
 457              		.size	MotorISR_SetPending, .-MotorISR_SetPending
 458              		.section	.text.MotorISR_ClearPending,"ax",%progbits
 459              		.align	2
 460              		.global	MotorISR_ClearPending
 461              		.thumb
 462              		.thumb_func
 463              		.type	MotorISR_ClearPending, %function
 464              	MotorISR_ClearPending:
 465              	.LFB13:
 422:Generated_Source\PSoC5/MotorISR.c **** }
 423:Generated_Source\PSoC5/MotorISR.c **** 
 424:Generated_Source\PSoC5/MotorISR.c **** 
 425:Generated_Source\PSoC5/MotorISR.c **** /*******************************************************************************
 426:Generated_Source\PSoC5/MotorISR.c **** * Function Name: MotorISR_ClearPending
 427:Generated_Source\PSoC5/MotorISR.c **** ********************************************************************************
 428:Generated_Source\PSoC5/MotorISR.c **** *
 429:Generated_Source\PSoC5/MotorISR.c **** * Summary:
 430:Generated_Source\PSoC5/MotorISR.c **** *   Clears a pending interrupt in the interrupt controller.
 431:Generated_Source\PSoC5/MotorISR.c **** *
 432:Generated_Source\PSoC5/MotorISR.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 433:Generated_Source\PSoC5/MotorISR.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 434:Generated_Source\PSoC5/MotorISR.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 17


 435:Generated_Source\PSoC5/MotorISR.c **** *   pending state even though the interrupt itself is cleared using this API.
 436:Generated_Source\PSoC5/MotorISR.c **** *
 437:Generated_Source\PSoC5/MotorISR.c **** * Parameters:
 438:Generated_Source\PSoC5/MotorISR.c **** *   None
 439:Generated_Source\PSoC5/MotorISR.c **** *
 440:Generated_Source\PSoC5/MotorISR.c **** * Return:
 441:Generated_Source\PSoC5/MotorISR.c **** *   None
 442:Generated_Source\PSoC5/MotorISR.c **** *
 443:Generated_Source\PSoC5/MotorISR.c **** *******************************************************************************/
 444:Generated_Source\PSoC5/MotorISR.c **** void MotorISR_ClearPending(void)
 445:Generated_Source\PSoC5/MotorISR.c **** {
 466              		.loc 1 445 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 446:Generated_Source\PSoC5/MotorISR.c ****     *MotorISR_INTC_CLR_PD = MotorISR__INTC_MASK;
 471              		.loc 1 446 0
 472 0000 4FF40032 		mov	r2, #131072
 473 0004 014B     		ldr	r3, .L50
 474 0006 1A60     		str	r2, [r3]
 475 0008 7047     		bx	lr
 476              	.L51:
 477 000a 00BF     		.align	2
 478              	.L50:
 479 000c 80E200E0 		.word	-536812928
 480              		.cfi_endproc
 481              	.LFE13:
 482              		.size	MotorISR_ClearPending, .-MotorISR_ClearPending
 483              		.comm	mFlag,1,1
 484              		.text
 485              	.Letext0:
 486              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 487              		.file 3 "Generated_Source\\PSoC5\\Motor.h"
 488              		.file 4 "Generated_Source\\PSoC5\\MotorTimer.h"
 489              		.section	.debug_info,"",%progbits
 490              	.Ldebug_info0:
 491 0000 FC030000 		.4byte	0x3fc
 492 0004 0400     		.2byte	0x4
 493 0006 00000000 		.4byte	.Ldebug_abbrev0
 494 000a 04       		.byte	0x4
 495 000b 01       		.uleb128 0x1
 496 000c B3000000 		.4byte	.LASF37
 497 0010 0C       		.byte	0xc
 498 0011 29000000 		.4byte	.LASF38
 499 0015 9F010000 		.4byte	.LASF39
 500 0019 00000000 		.4byte	.Ldebug_ranges0+0
 501 001d 00000000 		.4byte	0
 502 0021 00000000 		.4byte	.Ldebug_line0
 503 0025 02       		.uleb128 0x2
 504 0026 04       		.byte	0x4
 505 0027 05       		.byte	0x5
 506 0028 696E7400 		.ascii	"int\000"
 507 002c 03       		.uleb128 0x3
 508 002d 04       		.byte	0x4
 509 002e 07       		.byte	0x7
 510 002f DE010000 		.4byte	.LASF0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 18


 511 0033 03       		.uleb128 0x3
 512 0034 08       		.byte	0x8
 513 0035 05       		.byte	0x5
 514 0036 31020000 		.4byte	.LASF1
 515 003a 03       		.uleb128 0x3
 516 003b 08       		.byte	0x8
 517 003c 04       		.byte	0x4
 518 003d 86020000 		.4byte	.LASF2
 519 0041 03       		.uleb128 0x3
 520 0042 01       		.byte	0x1
 521 0043 06       		.byte	0x6
 522 0044 92020000 		.4byte	.LASF3
 523 0048 03       		.uleb128 0x3
 524 0049 01       		.byte	0x1
 525 004a 08       		.byte	0x8
 526 004b A5000000 		.4byte	.LASF4
 527 004f 03       		.uleb128 0x3
 528 0050 02       		.byte	0x2
 529 0051 05       		.byte	0x5
 530 0052 59020000 		.4byte	.LASF5
 531 0056 03       		.uleb128 0x3
 532 0057 02       		.byte	0x2
 533 0058 07       		.byte	0x7
 534 0059 4B000000 		.4byte	.LASF6
 535 005d 03       		.uleb128 0x3
 536 005e 04       		.byte	0x4
 537 005f 05       		.byte	0x5
 538 0060 71020000 		.4byte	.LASF7
 539 0064 03       		.uleb128 0x3
 540 0065 04       		.byte	0x4
 541 0066 07       		.byte	0x7
 542 0067 46010000 		.4byte	.LASF8
 543 006b 03       		.uleb128 0x3
 544 006c 08       		.byte	0x8
 545 006d 07       		.byte	0x7
 546 006e F3010000 		.4byte	.LASF9
 547 0072 03       		.uleb128 0x3
 548 0073 04       		.byte	0x4
 549 0074 07       		.byte	0x7
 550 0075 17020000 		.4byte	.LASF10
 551 0079 03       		.uleb128 0x3
 552 007a 01       		.byte	0x1
 553 007b 08       		.byte	0x8
 554 007c 3F020000 		.4byte	.LASF11
 555 0080 04       		.uleb128 0x4
 556 0081 04       		.byte	0x4
 557 0082 86000000 		.4byte	0x86
 558 0086 05       		.uleb128 0x5
 559 0087 06       		.uleb128 0x6
 560 0088 58010000 		.4byte	.LASF12
 561 008c 02       		.byte	0x2
 562 008d E701     		.2byte	0x1e7
 563 008f 48000000 		.4byte	0x48
 564 0093 06       		.uleb128 0x6
 565 0094 D7010000 		.4byte	.LASF13
 566 0098 02       		.byte	0x2
 567 0099 E901     		.2byte	0x1e9
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 19


 568 009b 64000000 		.4byte	0x64
 569 009f 03       		.uleb128 0x3
 570 00a0 04       		.byte	0x4
 571 00a1 04       		.byte	0x4
 572 00a2 7E000000 		.4byte	.LASF14
 573 00a6 03       		.uleb128 0x3
 574 00a7 08       		.byte	0x8
 575 00a8 04       		.byte	0x4
 576 00a9 85010000 		.4byte	.LASF15
 577 00ad 06       		.uleb128 0x6
 578 00ae 41010000 		.4byte	.LASF16
 579 00b2 02       		.byte	0x2
 580 00b3 9102     		.2byte	0x291
 581 00b5 B9000000 		.4byte	0xb9
 582 00b9 07       		.uleb128 0x7
 583 00ba 87000000 		.4byte	0x87
 584 00be 06       		.uleb128 0x6
 585 00bf 10000000 		.4byte	.LASF17
 586 00c3 02       		.byte	0x2
 587 00c4 9302     		.2byte	0x293
 588 00c6 CA000000 		.4byte	0xca
 589 00ca 07       		.uleb128 0x7
 590 00cb 93000000 		.4byte	0x93
 591 00cf 06       		.uleb128 0x6
 592 00d0 0A020000 		.4byte	.LASF18
 593 00d4 02       		.byte	0x2
 594 00d5 A302     		.2byte	0x2a3
 595 00d7 80000000 		.4byte	0x80
 596 00db 08       		.uleb128 0x8
 597 00dc 8C010000 		.4byte	.LASF19
 598 00e0 01       		.byte	0x1
 599 00e1 A4       		.byte	0xa4
 600 00e2 00000000 		.4byte	.LFB4
 601 00e6 90000000 		.4byte	.LFE4-.LFB4
 602 00ea 01       		.uleb128 0x1
 603 00eb 9C       		.byte	0x9c
 604 00ec D1010000 		.4byte	0x1d1
 605 00f0 09       		.uleb128 0x9
 606 00f1 6100     		.ascii	"a\000"
 607 00f3 01       		.byte	0x1
 608 00f4 AC       		.byte	0xac
 609 00f5 D1010000 		.4byte	0x1d1
 610 00f9 0A       		.uleb128 0xa
 611 00fa 10000000 		.4byte	.LVL0
 612 00fe DE030000 		.4byte	0x3de
 613 0102 0B       		.uleb128 0xb
 614 0103 1A000000 		.4byte	.LVL1
 615 0107 E9030000 		.4byte	0x3e9
 616 010b 15010000 		.4byte	0x115
 617 010f 0C       		.uleb128 0xc
 618 0110 01       		.uleb128 0x1
 619 0111 50       		.byte	0x50
 620 0112 01       		.uleb128 0x1
 621 0113 39       		.byte	0x39
 622 0114 00       		.byte	0
 623 0115 0A       		.uleb128 0xa
 624 0116 20000000 		.4byte	.LVL2
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 20


 625 011a DE030000 		.4byte	0x3de
 626 011e 0B       		.uleb128 0xb
 627 011f 2A000000 		.4byte	.LVL3
 628 0123 E9030000 		.4byte	0x3e9
 629 0127 31010000 		.4byte	0x131
 630 012b 0C       		.uleb128 0xc
 631 012c 01       		.uleb128 0x1
 632 012d 50       		.byte	0x50
 633 012e 01       		.uleb128 0x1
 634 012f 35       		.byte	0x35
 635 0130 00       		.byte	0
 636 0131 0A       		.uleb128 0xa
 637 0132 30000000 		.4byte	.LVL4
 638 0136 DE030000 		.4byte	0x3de
 639 013a 0B       		.uleb128 0xb
 640 013b 3A000000 		.4byte	.LVL5
 641 013f E9030000 		.4byte	0x3e9
 642 0143 4D010000 		.4byte	0x14d
 643 0147 0C       		.uleb128 0xc
 644 0148 01       		.uleb128 0x1
 645 0149 50       		.byte	0x50
 646 014a 01       		.uleb128 0x1
 647 014b 36       		.byte	0x36
 648 014c 00       		.byte	0
 649 014d 0B       		.uleb128 0xb
 650 014e 42000000 		.4byte	.LVL6
 651 0152 E9030000 		.4byte	0x3e9
 652 0156 60010000 		.4byte	0x160
 653 015a 0C       		.uleb128 0xc
 654 015b 01       		.uleb128 0x1
 655 015c 50       		.byte	0x50
 656 015d 01       		.uleb128 0x1
 657 015e 3A       		.byte	0x3a
 658 015f 00       		.byte	0
 659 0160 0A       		.uleb128 0xa
 660 0161 52000000 		.4byte	.LVL7
 661 0165 DE030000 		.4byte	0x3de
 662 0169 0B       		.uleb128 0xb
 663 016a 5C000000 		.4byte	.LVL8
 664 016e E9030000 		.4byte	0x3e9
 665 0172 7C010000 		.4byte	0x17c
 666 0176 0C       		.uleb128 0xc
 667 0177 01       		.uleb128 0x1
 668 0178 50       		.byte	0x50
 669 0179 01       		.uleb128 0x1
 670 017a 36       		.byte	0x36
 671 017b 00       		.byte	0
 672 017c 0A       		.uleb128 0xa
 673 017d 62000000 		.4byte	.LVL9
 674 0181 DE030000 		.4byte	0x3de
 675 0185 0B       		.uleb128 0xb
 676 0186 6C000000 		.4byte	.LVL10
 677 018a E9030000 		.4byte	0x3e9
 678 018e 98010000 		.4byte	0x198
 679 0192 0C       		.uleb128 0xc
 680 0193 01       		.uleb128 0x1
 681 0194 50       		.byte	0x50
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 21


 682 0195 01       		.uleb128 0x1
 683 0196 35       		.byte	0x35
 684 0197 00       		.byte	0
 685 0198 0A       		.uleb128 0xa
 686 0199 72000000 		.4byte	.LVL11
 687 019d DE030000 		.4byte	0x3de
 688 01a1 0B       		.uleb128 0xb
 689 01a2 7C000000 		.4byte	.LVL12
 690 01a6 E9030000 		.4byte	0x3e9
 691 01aa B4010000 		.4byte	0x1b4
 692 01ae 0C       		.uleb128 0xc
 693 01af 01       		.uleb128 0x1
 694 01b0 50       		.byte	0x50
 695 01b1 01       		.uleb128 0x1
 696 01b2 39       		.byte	0x39
 697 01b3 00       		.byte	0
 698 01b4 0B       		.uleb128 0xb
 699 01b5 84000000 		.4byte	.LVL13
 700 01b9 E9030000 		.4byte	0x3e9
 701 01bd C7010000 		.4byte	0x1c7
 702 01c1 0C       		.uleb128 0xc
 703 01c2 01       		.uleb128 0x1
 704 01c3 50       		.byte	0x50
 705 01c4 01       		.uleb128 0x1
 706 01c5 3A       		.byte	0x3a
 707 01c6 00       		.byte	0
 708 01c7 0A       		.uleb128 0xa
 709 01c8 88000000 		.4byte	.LVL14
 710 01cc F4030000 		.4byte	0x3f4
 711 01d0 00       		.byte	0
 712 01d1 0D       		.uleb128 0xd
 713 01d2 79000000 		.4byte	0x79
 714 01d6 E1010000 		.4byte	0x1e1
 715 01da 0E       		.uleb128 0xe
 716 01db 72000000 		.4byte	0x72
 717 01df 00       		.byte	0
 718 01e0 00       		.byte	0
 719 01e1 08       		.uleb128 0x8
 720 01e2 16000000 		.4byte	.LASF20
 721 01e6 01       		.byte	0x1
 722 01e7 F3       		.byte	0xf3
 723 01e8 00000000 		.4byte	.LFB5
 724 01ec 10000000 		.4byte	.LFE5-.LFB5
 725 01f0 01       		.uleb128 0x1
 726 01f1 9C       		.byte	0x9c
 727 01f2 11020000 		.4byte	0x211
 728 01f6 0F       		.uleb128 0xf
 729 01f7 EB010000 		.4byte	.LASF23
 730 01fb 01       		.byte	0x1
 731 01fc F3       		.byte	0xf3
 732 01fd CF000000 		.4byte	0xcf
 733 0201 01       		.uleb128 0x1
 734 0202 50       		.byte	0x50
 735 0203 10       		.uleb128 0x10
 736 0204 44020000 		.4byte	.LASF21
 737 0208 01       		.byte	0x1
 738 0209 F5       		.byte	0xf5
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 22


 739 020a 11020000 		.4byte	0x211
 740 020e 01       		.uleb128 0x1
 741 020f 53       		.byte	0x53
 742 0210 00       		.byte	0
 743 0211 04       		.uleb128 0x4
 744 0212 04       		.byte	0x4
 745 0213 CF000000 		.4byte	0xcf
 746 0217 11       		.uleb128 0x11
 747 0218 C4010000 		.4byte	.LASF25
 748 021c 01       		.byte	0x1
 749 021d 0B01     		.2byte	0x10b
 750 021f CF000000 		.4byte	0xcf
 751 0223 00000000 		.4byte	.LFB6
 752 0227 10000000 		.4byte	.LFE6-.LFB6
 753 022b 01       		.uleb128 0x1
 754 022c 9C       		.byte	0x9c
 755 022d 40020000 		.4byte	0x240
 756 0231 12       		.uleb128 0x12
 757 0232 44020000 		.4byte	.LASF21
 758 0236 01       		.byte	0x1
 759 0237 0D01     		.2byte	0x10d
 760 0239 11020000 		.4byte	0x211
 761 023d 01       		.uleb128 0x1
 762 023e 53       		.byte	0x53
 763 023f 00       		.byte	0
 764 0240 13       		.uleb128 0x13
 765 0241 B4020000 		.4byte	.LASF22
 766 0245 01       		.byte	0x1
 767 0246 2D01     		.2byte	0x12d
 768 0248 00000000 		.4byte	.LFB7
 769 024c 10000000 		.4byte	.LFE7-.LFB7
 770 0250 01       		.uleb128 0x1
 771 0251 9C       		.byte	0x9c
 772 0252 67020000 		.4byte	0x267
 773 0256 14       		.uleb128 0x14
 774 0257 7C010000 		.4byte	.LASF24
 775 025b 01       		.byte	0x1
 776 025c 2D01     		.2byte	0x12d
 777 025e 87000000 		.4byte	0x87
 778 0262 00000000 		.4byte	.LLST0
 779 0266 00       		.byte	0
 780 0267 11       		.uleb128 0x11
 781 0268 69000000 		.4byte	.LASF26
 782 026c 01       		.byte	0x1
 783 026d 4301     		.2byte	0x143
 784 026f 87000000 		.4byte	0x87
 785 0273 00000000 		.4byte	.LFB8
 786 0277 0C000000 		.4byte	.LFE8-.LFB8
 787 027b 01       		.uleb128 0x1
 788 027c 9C       		.byte	0x9c
 789 027d 92020000 		.4byte	0x292
 790 0281 15       		.uleb128 0x15
 791 0282 7C010000 		.4byte	.LASF24
 792 0286 01       		.byte	0x1
 793 0287 4501     		.2byte	0x145
 794 0289 87000000 		.4byte	0x87
 795 028d 21000000 		.4byte	.LLST1
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 23


 796 0291 00       		.byte	0
 797 0292 16       		.uleb128 0x16
 798 0293 00000000 		.4byte	.LASF27
 799 0297 01       		.byte	0x1
 800 0298 5E01     		.2byte	0x15e
 801 029a 00000000 		.4byte	.LFB9
 802 029e 10000000 		.4byte	.LFE9-.LFB9
 803 02a2 01       		.uleb128 0x1
 804 02a3 9C       		.byte	0x9c
 805 02a4 17       		.uleb128 0x17
 806 02a5 84000000 		.4byte	.LASF40
 807 02a9 01       		.byte	0x1
 808 02aa 7301     		.2byte	0x173
 809 02ac 87000000 		.4byte	0x87
 810 02b0 00000000 		.4byte	.LFB10
 811 02b4 18000000 		.4byte	.LFE10-.LFB10
 812 02b8 01       		.uleb128 0x1
 813 02b9 9C       		.byte	0x9c
 814 02ba 16       		.uleb128 0x16
 815 02bb DD020000 		.4byte	.LASF28
 816 02bf 01       		.byte	0x1
 817 02c0 8801     		.2byte	0x188
 818 02c2 00000000 		.4byte	.LFB11
 819 02c6 10000000 		.4byte	.LFE11-.LFB11
 820 02ca 01       		.uleb128 0x1
 821 02cb 9C       		.byte	0x9c
 822 02cc 08       		.uleb128 0x8
 823 02cd 96000000 		.4byte	.LASF29
 824 02d1 01       		.byte	0x1
 825 02d2 41       		.byte	0x41
 826 02d3 00000000 		.4byte	.LFB1
 827 02d7 1C000000 		.4byte	.LFE1-.LFB1
 828 02db 01       		.uleb128 0x1
 829 02dc 9C       		.byte	0x9c
 830 02dd 1E030000 		.4byte	0x31e
 831 02e1 0A       		.uleb128 0xa
 832 02e2 06000000 		.4byte	.LVL22
 833 02e6 BA020000 		.4byte	0x2ba
 834 02ea 0B       		.uleb128 0xb
 835 02eb 0C000000 		.4byte	.LVL23
 836 02ef E1010000 		.4byte	0x1e1
 837 02f3 01030000 		.4byte	0x301
 838 02f7 0C       		.uleb128 0xc
 839 02f8 01       		.uleb128 0x1
 840 02f9 50       		.byte	0x50
 841 02fa 05       		.uleb128 0x5
 842 02fb 03       		.byte	0x3
 843 02fc 00000000 		.4byte	MotorISR_Interrupt
 844 0300 00       		.byte	0
 845 0301 0B       		.uleb128 0xb
 846 0302 12000000 		.4byte	.LVL24
 847 0306 40020000 		.4byte	0x240
 848 030a 14030000 		.4byte	0x314
 849 030e 0C       		.uleb128 0xc
 850 030f 01       		.uleb128 0x1
 851 0310 50       		.byte	0x50
 852 0311 01       		.uleb128 0x1
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 24


 853 0312 30       		.byte	0x30
 854 0313 00       		.byte	0
 855 0314 0A       		.uleb128 0xa
 856 0315 16000000 		.4byte	.LVL25
 857 0319 92020000 		.4byte	0x292
 858 031d 00       		.byte	0
 859 031e 08       		.uleb128 0x8
 860 031f 20020000 		.4byte	.LASF30
 861 0323 01       		.byte	0x1
 862 0324 6C       		.byte	0x6c
 863 0325 00000000 		.4byte	.LFB2
 864 0329 1A000000 		.4byte	.LFE2-.LFB2
 865 032d 01       		.uleb128 0x1
 866 032e 9C       		.byte	0x9c
 867 032f 7C030000 		.4byte	0x37c
 868 0333 18       		.uleb128 0x18
 869 0334 EB010000 		.4byte	.LASF23
 870 0338 01       		.byte	0x1
 871 0339 6C       		.byte	0x6c
 872 033a CF000000 		.4byte	0xcf
 873 033e 38000000 		.4byte	.LLST2
 874 0342 0A       		.uleb128 0xa
 875 0343 08000000 		.4byte	.LVL27
 876 0347 BA020000 		.4byte	0x2ba
 877 034b 0B       		.uleb128 0xb
 878 034c 0E000000 		.4byte	.LVL28
 879 0350 E1010000 		.4byte	0x1e1
 880 0354 5F030000 		.4byte	0x35f
 881 0358 0C       		.uleb128 0xc
 882 0359 01       		.uleb128 0x1
 883 035a 50       		.byte	0x50
 884 035b 02       		.uleb128 0x2
 885 035c 74       		.byte	0x74
 886 035d 00       		.sleb128 0
 887 035e 00       		.byte	0
 888 035f 0B       		.uleb128 0xb
 889 0360 14000000 		.4byte	.LVL29
 890 0364 40020000 		.4byte	0x240
 891 0368 72030000 		.4byte	0x372
 892 036c 0C       		.uleb128 0xc
 893 036d 01       		.uleb128 0x1
 894 036e 50       		.byte	0x50
 895 036f 01       		.uleb128 0x1
 896 0370 30       		.byte	0x30
 897 0371 00       		.byte	0
 898 0372 0A       		.uleb128 0xa
 899 0373 18000000 		.4byte	.LVL30
 900 0377 92020000 		.4byte	0x292
 901 037b 00       		.byte	0
 902 037c 08       		.uleb128 0x8
 903 037d 63020000 		.4byte	.LASF31
 904 0381 01       		.byte	0x1
 905 0382 8A       		.byte	0x8a
 906 0383 00000000 		.4byte	.LFB3
 907 0387 14000000 		.4byte	.LFE3-.LFB3
 908 038b 01       		.uleb128 0x1
 909 038c 9C       		.byte	0x9c
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 25


 910 038d A4030000 		.4byte	0x3a4
 911 0391 0A       		.uleb128 0xa
 912 0392 06000000 		.4byte	.LVL31
 913 0396 BA020000 		.4byte	0x2ba
 914 039a 0A       		.uleb128 0xa
 915 039b 0C000000 		.4byte	.LVL32
 916 039f E1010000 		.4byte	0x1e1
 917 03a3 00       		.byte	0
 918 03a4 16       		.uleb128 0x16
 919 03a5 C9020000 		.4byte	.LASF32
 920 03a9 01       		.byte	0x1
 921 03aa A301     		.2byte	0x1a3
 922 03ac 00000000 		.4byte	.LFB12
 923 03b0 10000000 		.4byte	.LFE12-.LFB12
 924 03b4 01       		.uleb128 0x1
 925 03b5 9C       		.byte	0x9c
 926 03b6 16       		.uleb128 0x16
 927 03b7 9E020000 		.4byte	.LASF33
 928 03bb 01       		.byte	0x1
 929 03bc BC01     		.2byte	0x1bc
 930 03be 00000000 		.4byte	.LFB13
 931 03c2 10000000 		.4byte	.LFE13-.LFB13
 932 03c6 01       		.uleb128 0x1
 933 03c7 9C       		.byte	0x9c
 934 03c8 19       		.uleb128 0x19
 935 03c9 53020000 		.4byte	.LASF41
 936 03cd 01       		.byte	0x1
 937 03ce 22       		.byte	0x22
 938 03cf D9030000 		.4byte	0x3d9
 939 03d3 05       		.uleb128 0x5
 940 03d4 03       		.byte	0x3
 941 03d5 00000000 		.4byte	mFlag
 942 03d9 07       		.uleb128 0x7
 943 03da 79000000 		.4byte	0x79
 944 03de 1A       		.uleb128 0x1a
 945 03df 5E000000 		.4byte	.LASF34
 946 03e3 5E000000 		.4byte	.LASF34
 947 03e7 03       		.byte	0x3
 948 03e8 29       		.byte	0x29
 949 03e9 1A       		.uleb128 0x1a
 950 03ea 7A020000 		.4byte	.LASF35
 951 03ee 7A020000 		.4byte	.LASF35
 952 03f2 03       		.byte	0x3
 953 03f3 26       		.byte	0x26
 954 03f4 1A       		.uleb128 0x1a
 955 03f5 5E010000 		.4byte	.LASF36
 956 03f9 5E010000 		.4byte	.LASF36
 957 03fd 04       		.byte	0x4
 958 03fe 5E       		.byte	0x5e
 959 03ff 00       		.byte	0
 960              		.section	.debug_abbrev,"",%progbits
 961              	.Ldebug_abbrev0:
 962 0000 01       		.uleb128 0x1
 963 0001 11       		.uleb128 0x11
 964 0002 01       		.byte	0x1
 965 0003 25       		.uleb128 0x25
 966 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 26


 967 0005 13       		.uleb128 0x13
 968 0006 0B       		.uleb128 0xb
 969 0007 03       		.uleb128 0x3
 970 0008 0E       		.uleb128 0xe
 971 0009 1B       		.uleb128 0x1b
 972 000a 0E       		.uleb128 0xe
 973 000b 55       		.uleb128 0x55
 974 000c 17       		.uleb128 0x17
 975 000d 11       		.uleb128 0x11
 976 000e 01       		.uleb128 0x1
 977 000f 10       		.uleb128 0x10
 978 0010 17       		.uleb128 0x17
 979 0011 00       		.byte	0
 980 0012 00       		.byte	0
 981 0013 02       		.uleb128 0x2
 982 0014 24       		.uleb128 0x24
 983 0015 00       		.byte	0
 984 0016 0B       		.uleb128 0xb
 985 0017 0B       		.uleb128 0xb
 986 0018 3E       		.uleb128 0x3e
 987 0019 0B       		.uleb128 0xb
 988 001a 03       		.uleb128 0x3
 989 001b 08       		.uleb128 0x8
 990 001c 00       		.byte	0
 991 001d 00       		.byte	0
 992 001e 03       		.uleb128 0x3
 993 001f 24       		.uleb128 0x24
 994 0020 00       		.byte	0
 995 0021 0B       		.uleb128 0xb
 996 0022 0B       		.uleb128 0xb
 997 0023 3E       		.uleb128 0x3e
 998 0024 0B       		.uleb128 0xb
 999 0025 03       		.uleb128 0x3
 1000 0026 0E       		.uleb128 0xe
 1001 0027 00       		.byte	0
 1002 0028 00       		.byte	0
 1003 0029 04       		.uleb128 0x4
 1004 002a 0F       		.uleb128 0xf
 1005 002b 00       		.byte	0
 1006 002c 0B       		.uleb128 0xb
 1007 002d 0B       		.uleb128 0xb
 1008 002e 49       		.uleb128 0x49
 1009 002f 13       		.uleb128 0x13
 1010 0030 00       		.byte	0
 1011 0031 00       		.byte	0
 1012 0032 05       		.uleb128 0x5
 1013 0033 15       		.uleb128 0x15
 1014 0034 00       		.byte	0
 1015 0035 27       		.uleb128 0x27
 1016 0036 19       		.uleb128 0x19
 1017 0037 00       		.byte	0
 1018 0038 00       		.byte	0
 1019 0039 06       		.uleb128 0x6
 1020 003a 16       		.uleb128 0x16
 1021 003b 00       		.byte	0
 1022 003c 03       		.uleb128 0x3
 1023 003d 0E       		.uleb128 0xe
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 27


 1024 003e 3A       		.uleb128 0x3a
 1025 003f 0B       		.uleb128 0xb
 1026 0040 3B       		.uleb128 0x3b
 1027 0041 05       		.uleb128 0x5
 1028 0042 49       		.uleb128 0x49
 1029 0043 13       		.uleb128 0x13
 1030 0044 00       		.byte	0
 1031 0045 00       		.byte	0
 1032 0046 07       		.uleb128 0x7
 1033 0047 35       		.uleb128 0x35
 1034 0048 00       		.byte	0
 1035 0049 49       		.uleb128 0x49
 1036 004a 13       		.uleb128 0x13
 1037 004b 00       		.byte	0
 1038 004c 00       		.byte	0
 1039 004d 08       		.uleb128 0x8
 1040 004e 2E       		.uleb128 0x2e
 1041 004f 01       		.byte	0x1
 1042 0050 3F       		.uleb128 0x3f
 1043 0051 19       		.uleb128 0x19
 1044 0052 03       		.uleb128 0x3
 1045 0053 0E       		.uleb128 0xe
 1046 0054 3A       		.uleb128 0x3a
 1047 0055 0B       		.uleb128 0xb
 1048 0056 3B       		.uleb128 0x3b
 1049 0057 0B       		.uleb128 0xb
 1050 0058 27       		.uleb128 0x27
 1051 0059 19       		.uleb128 0x19
 1052 005a 11       		.uleb128 0x11
 1053 005b 01       		.uleb128 0x1
 1054 005c 12       		.uleb128 0x12
 1055 005d 06       		.uleb128 0x6
 1056 005e 40       		.uleb128 0x40
 1057 005f 18       		.uleb128 0x18
 1058 0060 9742     		.uleb128 0x2117
 1059 0062 19       		.uleb128 0x19
 1060 0063 01       		.uleb128 0x1
 1061 0064 13       		.uleb128 0x13
 1062 0065 00       		.byte	0
 1063 0066 00       		.byte	0
 1064 0067 09       		.uleb128 0x9
 1065 0068 34       		.uleb128 0x34
 1066 0069 00       		.byte	0
 1067 006a 03       		.uleb128 0x3
 1068 006b 08       		.uleb128 0x8
 1069 006c 3A       		.uleb128 0x3a
 1070 006d 0B       		.uleb128 0xb
 1071 006e 3B       		.uleb128 0x3b
 1072 006f 0B       		.uleb128 0xb
 1073 0070 49       		.uleb128 0x49
 1074 0071 13       		.uleb128 0x13
 1075 0072 00       		.byte	0
 1076 0073 00       		.byte	0
 1077 0074 0A       		.uleb128 0xa
 1078 0075 898201   		.uleb128 0x4109
 1079 0078 00       		.byte	0
 1080 0079 11       		.uleb128 0x11
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 28


 1081 007a 01       		.uleb128 0x1
 1082 007b 31       		.uleb128 0x31
 1083 007c 13       		.uleb128 0x13
 1084 007d 00       		.byte	0
 1085 007e 00       		.byte	0
 1086 007f 0B       		.uleb128 0xb
 1087 0080 898201   		.uleb128 0x4109
 1088 0083 01       		.byte	0x1
 1089 0084 11       		.uleb128 0x11
 1090 0085 01       		.uleb128 0x1
 1091 0086 31       		.uleb128 0x31
 1092 0087 13       		.uleb128 0x13
 1093 0088 01       		.uleb128 0x1
 1094 0089 13       		.uleb128 0x13
 1095 008a 00       		.byte	0
 1096 008b 00       		.byte	0
 1097 008c 0C       		.uleb128 0xc
 1098 008d 8A8201   		.uleb128 0x410a
 1099 0090 00       		.byte	0
 1100 0091 02       		.uleb128 0x2
 1101 0092 18       		.uleb128 0x18
 1102 0093 9142     		.uleb128 0x2111
 1103 0095 18       		.uleb128 0x18
 1104 0096 00       		.byte	0
 1105 0097 00       		.byte	0
 1106 0098 0D       		.uleb128 0xd
 1107 0099 01       		.uleb128 0x1
 1108 009a 01       		.byte	0x1
 1109 009b 49       		.uleb128 0x49
 1110 009c 13       		.uleb128 0x13
 1111 009d 01       		.uleb128 0x1
 1112 009e 13       		.uleb128 0x13
 1113 009f 00       		.byte	0
 1114 00a0 00       		.byte	0
 1115 00a1 0E       		.uleb128 0xe
 1116 00a2 21       		.uleb128 0x21
 1117 00a3 00       		.byte	0
 1118 00a4 49       		.uleb128 0x49
 1119 00a5 13       		.uleb128 0x13
 1120 00a6 2F       		.uleb128 0x2f
 1121 00a7 0B       		.uleb128 0xb
 1122 00a8 00       		.byte	0
 1123 00a9 00       		.byte	0
 1124 00aa 0F       		.uleb128 0xf
 1125 00ab 05       		.uleb128 0x5
 1126 00ac 00       		.byte	0
 1127 00ad 03       		.uleb128 0x3
 1128 00ae 0E       		.uleb128 0xe
 1129 00af 3A       		.uleb128 0x3a
 1130 00b0 0B       		.uleb128 0xb
 1131 00b1 3B       		.uleb128 0x3b
 1132 00b2 0B       		.uleb128 0xb
 1133 00b3 49       		.uleb128 0x49
 1134 00b4 13       		.uleb128 0x13
 1135 00b5 02       		.uleb128 0x2
 1136 00b6 18       		.uleb128 0x18
 1137 00b7 00       		.byte	0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 29


 1138 00b8 00       		.byte	0
 1139 00b9 10       		.uleb128 0x10
 1140 00ba 34       		.uleb128 0x34
 1141 00bb 00       		.byte	0
 1142 00bc 03       		.uleb128 0x3
 1143 00bd 0E       		.uleb128 0xe
 1144 00be 3A       		.uleb128 0x3a
 1145 00bf 0B       		.uleb128 0xb
 1146 00c0 3B       		.uleb128 0x3b
 1147 00c1 0B       		.uleb128 0xb
 1148 00c2 49       		.uleb128 0x49
 1149 00c3 13       		.uleb128 0x13
 1150 00c4 02       		.uleb128 0x2
 1151 00c5 18       		.uleb128 0x18
 1152 00c6 00       		.byte	0
 1153 00c7 00       		.byte	0
 1154 00c8 11       		.uleb128 0x11
 1155 00c9 2E       		.uleb128 0x2e
 1156 00ca 01       		.byte	0x1
 1157 00cb 3F       		.uleb128 0x3f
 1158 00cc 19       		.uleb128 0x19
 1159 00cd 03       		.uleb128 0x3
 1160 00ce 0E       		.uleb128 0xe
 1161 00cf 3A       		.uleb128 0x3a
 1162 00d0 0B       		.uleb128 0xb
 1163 00d1 3B       		.uleb128 0x3b
 1164 00d2 05       		.uleb128 0x5
 1165 00d3 27       		.uleb128 0x27
 1166 00d4 19       		.uleb128 0x19
 1167 00d5 49       		.uleb128 0x49
 1168 00d6 13       		.uleb128 0x13
 1169 00d7 11       		.uleb128 0x11
 1170 00d8 01       		.uleb128 0x1
 1171 00d9 12       		.uleb128 0x12
 1172 00da 06       		.uleb128 0x6
 1173 00db 40       		.uleb128 0x40
 1174 00dc 18       		.uleb128 0x18
 1175 00dd 9742     		.uleb128 0x2117
 1176 00df 19       		.uleb128 0x19
 1177 00e0 01       		.uleb128 0x1
 1178 00e1 13       		.uleb128 0x13
 1179 00e2 00       		.byte	0
 1180 00e3 00       		.byte	0
 1181 00e4 12       		.uleb128 0x12
 1182 00e5 34       		.uleb128 0x34
 1183 00e6 00       		.byte	0
 1184 00e7 03       		.uleb128 0x3
 1185 00e8 0E       		.uleb128 0xe
 1186 00e9 3A       		.uleb128 0x3a
 1187 00ea 0B       		.uleb128 0xb
 1188 00eb 3B       		.uleb128 0x3b
 1189 00ec 05       		.uleb128 0x5
 1190 00ed 49       		.uleb128 0x49
 1191 00ee 13       		.uleb128 0x13
 1192 00ef 02       		.uleb128 0x2
 1193 00f0 18       		.uleb128 0x18
 1194 00f1 00       		.byte	0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 30


 1195 00f2 00       		.byte	0
 1196 00f3 13       		.uleb128 0x13
 1197 00f4 2E       		.uleb128 0x2e
 1198 00f5 01       		.byte	0x1
 1199 00f6 3F       		.uleb128 0x3f
 1200 00f7 19       		.uleb128 0x19
 1201 00f8 03       		.uleb128 0x3
 1202 00f9 0E       		.uleb128 0xe
 1203 00fa 3A       		.uleb128 0x3a
 1204 00fb 0B       		.uleb128 0xb
 1205 00fc 3B       		.uleb128 0x3b
 1206 00fd 05       		.uleb128 0x5
 1207 00fe 27       		.uleb128 0x27
 1208 00ff 19       		.uleb128 0x19
 1209 0100 11       		.uleb128 0x11
 1210 0101 01       		.uleb128 0x1
 1211 0102 12       		.uleb128 0x12
 1212 0103 06       		.uleb128 0x6
 1213 0104 40       		.uleb128 0x40
 1214 0105 18       		.uleb128 0x18
 1215 0106 9742     		.uleb128 0x2117
 1216 0108 19       		.uleb128 0x19
 1217 0109 01       		.uleb128 0x1
 1218 010a 13       		.uleb128 0x13
 1219 010b 00       		.byte	0
 1220 010c 00       		.byte	0
 1221 010d 14       		.uleb128 0x14
 1222 010e 05       		.uleb128 0x5
 1223 010f 00       		.byte	0
 1224 0110 03       		.uleb128 0x3
 1225 0111 0E       		.uleb128 0xe
 1226 0112 3A       		.uleb128 0x3a
 1227 0113 0B       		.uleb128 0xb
 1228 0114 3B       		.uleb128 0x3b
 1229 0115 05       		.uleb128 0x5
 1230 0116 49       		.uleb128 0x49
 1231 0117 13       		.uleb128 0x13
 1232 0118 02       		.uleb128 0x2
 1233 0119 17       		.uleb128 0x17
 1234 011a 00       		.byte	0
 1235 011b 00       		.byte	0
 1236 011c 15       		.uleb128 0x15
 1237 011d 34       		.uleb128 0x34
 1238 011e 00       		.byte	0
 1239 011f 03       		.uleb128 0x3
 1240 0120 0E       		.uleb128 0xe
 1241 0121 3A       		.uleb128 0x3a
 1242 0122 0B       		.uleb128 0xb
 1243 0123 3B       		.uleb128 0x3b
 1244 0124 05       		.uleb128 0x5
 1245 0125 49       		.uleb128 0x49
 1246 0126 13       		.uleb128 0x13
 1247 0127 02       		.uleb128 0x2
 1248 0128 17       		.uleb128 0x17
 1249 0129 00       		.byte	0
 1250 012a 00       		.byte	0
 1251 012b 16       		.uleb128 0x16
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 31


 1252 012c 2E       		.uleb128 0x2e
 1253 012d 00       		.byte	0
 1254 012e 3F       		.uleb128 0x3f
 1255 012f 19       		.uleb128 0x19
 1256 0130 03       		.uleb128 0x3
 1257 0131 0E       		.uleb128 0xe
 1258 0132 3A       		.uleb128 0x3a
 1259 0133 0B       		.uleb128 0xb
 1260 0134 3B       		.uleb128 0x3b
 1261 0135 05       		.uleb128 0x5
 1262 0136 27       		.uleb128 0x27
 1263 0137 19       		.uleb128 0x19
 1264 0138 11       		.uleb128 0x11
 1265 0139 01       		.uleb128 0x1
 1266 013a 12       		.uleb128 0x12
 1267 013b 06       		.uleb128 0x6
 1268 013c 40       		.uleb128 0x40
 1269 013d 18       		.uleb128 0x18
 1270 013e 9742     		.uleb128 0x2117
 1271 0140 19       		.uleb128 0x19
 1272 0141 00       		.byte	0
 1273 0142 00       		.byte	0
 1274 0143 17       		.uleb128 0x17
 1275 0144 2E       		.uleb128 0x2e
 1276 0145 00       		.byte	0
 1277 0146 3F       		.uleb128 0x3f
 1278 0147 19       		.uleb128 0x19
 1279 0148 03       		.uleb128 0x3
 1280 0149 0E       		.uleb128 0xe
 1281 014a 3A       		.uleb128 0x3a
 1282 014b 0B       		.uleb128 0xb
 1283 014c 3B       		.uleb128 0x3b
 1284 014d 05       		.uleb128 0x5
 1285 014e 27       		.uleb128 0x27
 1286 014f 19       		.uleb128 0x19
 1287 0150 49       		.uleb128 0x49
 1288 0151 13       		.uleb128 0x13
 1289 0152 11       		.uleb128 0x11
 1290 0153 01       		.uleb128 0x1
 1291 0154 12       		.uleb128 0x12
 1292 0155 06       		.uleb128 0x6
 1293 0156 40       		.uleb128 0x40
 1294 0157 18       		.uleb128 0x18
 1295 0158 9742     		.uleb128 0x2117
 1296 015a 19       		.uleb128 0x19
 1297 015b 00       		.byte	0
 1298 015c 00       		.byte	0
 1299 015d 18       		.uleb128 0x18
 1300 015e 05       		.uleb128 0x5
 1301 015f 00       		.byte	0
 1302 0160 03       		.uleb128 0x3
 1303 0161 0E       		.uleb128 0xe
 1304 0162 3A       		.uleb128 0x3a
 1305 0163 0B       		.uleb128 0xb
 1306 0164 3B       		.uleb128 0x3b
 1307 0165 0B       		.uleb128 0xb
 1308 0166 49       		.uleb128 0x49
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 32


 1309 0167 13       		.uleb128 0x13
 1310 0168 02       		.uleb128 0x2
 1311 0169 17       		.uleb128 0x17
 1312 016a 00       		.byte	0
 1313 016b 00       		.byte	0
 1314 016c 19       		.uleb128 0x19
 1315 016d 34       		.uleb128 0x34
 1316 016e 00       		.byte	0
 1317 016f 03       		.uleb128 0x3
 1318 0170 0E       		.uleb128 0xe
 1319 0171 3A       		.uleb128 0x3a
 1320 0172 0B       		.uleb128 0xb
 1321 0173 3B       		.uleb128 0x3b
 1322 0174 0B       		.uleb128 0xb
 1323 0175 49       		.uleb128 0x49
 1324 0176 13       		.uleb128 0x13
 1325 0177 3F       		.uleb128 0x3f
 1326 0178 19       		.uleb128 0x19
 1327 0179 02       		.uleb128 0x2
 1328 017a 18       		.uleb128 0x18
 1329 017b 00       		.byte	0
 1330 017c 00       		.byte	0
 1331 017d 1A       		.uleb128 0x1a
 1332 017e 2E       		.uleb128 0x2e
 1333 017f 00       		.byte	0
 1334 0180 3F       		.uleb128 0x3f
 1335 0181 19       		.uleb128 0x19
 1336 0182 3C       		.uleb128 0x3c
 1337 0183 19       		.uleb128 0x19
 1338 0184 6E       		.uleb128 0x6e
 1339 0185 0E       		.uleb128 0xe
 1340 0186 03       		.uleb128 0x3
 1341 0187 0E       		.uleb128 0xe
 1342 0188 3A       		.uleb128 0x3a
 1343 0189 0B       		.uleb128 0xb
 1344 018a 3B       		.uleb128 0x3b
 1345 018b 0B       		.uleb128 0xb
 1346 018c 00       		.byte	0
 1347 018d 00       		.byte	0
 1348 018e 00       		.byte	0
 1349              		.section	.debug_loc,"",%progbits
 1350              	.Ldebug_loc0:
 1351              	.LLST0:
 1352 0000 00000000 		.4byte	.LVL18
 1353 0004 02000000 		.4byte	.LVL19
 1354 0008 0100     		.2byte	0x1
 1355 000a 50       		.byte	0x50
 1356 000b 02000000 		.4byte	.LVL19
 1357 000f 10000000 		.4byte	.LFE7
 1358 0013 0400     		.2byte	0x4
 1359 0015 F3       		.byte	0xf3
 1360 0016 01       		.uleb128 0x1
 1361 0017 50       		.byte	0x50
 1362 0018 9F       		.byte	0x9f
 1363 0019 00000000 		.4byte	0
 1364 001d 00000000 		.4byte	0
 1365              	.LLST1:
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 33


 1366 0021 04000000 		.4byte	.LVL20
 1367 0025 06000000 		.4byte	.LVL21
 1368 0029 0500     		.2byte	0x5
 1369 002b 70       		.byte	0x70
 1370 002c 00       		.sleb128 0
 1371 002d 35       		.byte	0x35
 1372 002e 25       		.byte	0x25
 1373 002f 9F       		.byte	0x9f
 1374 0030 00000000 		.4byte	0
 1375 0034 00000000 		.4byte	0
 1376              	.LLST2:
 1377 0038 00000000 		.4byte	.LVL26
 1378 003c 07000000 		.4byte	.LVL27-1
 1379 0040 0100     		.2byte	0x1
 1380 0042 50       		.byte	0x50
 1381 0043 07000000 		.4byte	.LVL27-1
 1382 0047 1A000000 		.4byte	.LFE2
 1383 004b 0100     		.2byte	0x1
 1384 004d 54       		.byte	0x54
 1385 004e 00000000 		.4byte	0
 1386 0052 00000000 		.4byte	0
 1387              		.section	.debug_aranges,"",%progbits
 1388 0000 7C000000 		.4byte	0x7c
 1389 0004 0200     		.2byte	0x2
 1390 0006 00000000 		.4byte	.Ldebug_info0
 1391 000a 04       		.byte	0x4
 1392 000b 00       		.byte	0
 1393 000c 0000     		.2byte	0
 1394 000e 0000     		.2byte	0
 1395 0010 00000000 		.4byte	.LFB4
 1396 0014 90000000 		.4byte	.LFE4-.LFB4
 1397 0018 00000000 		.4byte	.LFB5
 1398 001c 10000000 		.4byte	.LFE5-.LFB5
 1399 0020 00000000 		.4byte	.LFB6
 1400 0024 10000000 		.4byte	.LFE6-.LFB6
 1401 0028 00000000 		.4byte	.LFB7
 1402 002c 10000000 		.4byte	.LFE7-.LFB7
 1403 0030 00000000 		.4byte	.LFB8
 1404 0034 0C000000 		.4byte	.LFE8-.LFB8
 1405 0038 00000000 		.4byte	.LFB9
 1406 003c 10000000 		.4byte	.LFE9-.LFB9
 1407 0040 00000000 		.4byte	.LFB10
 1408 0044 18000000 		.4byte	.LFE10-.LFB10
 1409 0048 00000000 		.4byte	.LFB11
 1410 004c 10000000 		.4byte	.LFE11-.LFB11
 1411 0050 00000000 		.4byte	.LFB1
 1412 0054 1C000000 		.4byte	.LFE1-.LFB1
 1413 0058 00000000 		.4byte	.LFB2
 1414 005c 1A000000 		.4byte	.LFE2-.LFB2
 1415 0060 00000000 		.4byte	.LFB3
 1416 0064 14000000 		.4byte	.LFE3-.LFB3
 1417 0068 00000000 		.4byte	.LFB12
 1418 006c 10000000 		.4byte	.LFE12-.LFB12
 1419 0070 00000000 		.4byte	.LFB13
 1420 0074 10000000 		.4byte	.LFE13-.LFB13
 1421 0078 00000000 		.4byte	0
 1422 007c 00000000 		.4byte	0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 34


 1423              		.section	.debug_ranges,"",%progbits
 1424              	.Ldebug_ranges0:
 1425 0000 00000000 		.4byte	.LFB4
 1426 0004 90000000 		.4byte	.LFE4
 1427 0008 00000000 		.4byte	.LFB5
 1428 000c 10000000 		.4byte	.LFE5
 1429 0010 00000000 		.4byte	.LFB6
 1430 0014 10000000 		.4byte	.LFE6
 1431 0018 00000000 		.4byte	.LFB7
 1432 001c 10000000 		.4byte	.LFE7
 1433 0020 00000000 		.4byte	.LFB8
 1434 0024 0C000000 		.4byte	.LFE8
 1435 0028 00000000 		.4byte	.LFB9
 1436 002c 10000000 		.4byte	.LFE9
 1437 0030 00000000 		.4byte	.LFB10
 1438 0034 18000000 		.4byte	.LFE10
 1439 0038 00000000 		.4byte	.LFB11
 1440 003c 10000000 		.4byte	.LFE11
 1441 0040 00000000 		.4byte	.LFB1
 1442 0044 1C000000 		.4byte	.LFE1
 1443 0048 00000000 		.4byte	.LFB2
 1444 004c 1A000000 		.4byte	.LFE2
 1445 0050 00000000 		.4byte	.LFB3
 1446 0054 14000000 		.4byte	.LFE3
 1447 0058 00000000 		.4byte	.LFB12
 1448 005c 10000000 		.4byte	.LFE12
 1449 0060 00000000 		.4byte	.LFB13
 1450 0064 10000000 		.4byte	.LFE13
 1451 0068 00000000 		.4byte	0
 1452 006c 00000000 		.4byte	0
 1453              		.section	.debug_line,"",%progbits
 1454              	.Ldebug_line0:
 1455 0000 5E010000 		.section	.debug_str,"MS",%progbits,1
 1455      02006000 
 1455      00000201 
 1455      FB0E0D00 
 1455      01010101 
 1456              	.LASF27:
 1457 0000 4D6F746F 		.ascii	"MotorISR_Enable\000"
 1457      72495352 
 1457      5F456E61 
 1457      626C6500 
 1458              	.LASF17:
 1459 0010 72656733 		.ascii	"reg32\000"
 1459      3200
 1460              	.LASF20:
 1461 0016 4D6F746F 		.ascii	"MotorISR_SetVector\000"
 1461      72495352 
 1461      5F536574 
 1461      56656374 
 1461      6F7200
 1462              	.LASF38:
 1463 0029 47656E65 		.ascii	"Generated_Source\\PSoC5\\MotorISR.c\000"
 1463      72617465 
 1463      645F536F 
 1463      75726365 
 1463      5C50536F 
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 35


 1464              	.LASF6:
 1465 004b 73686F72 		.ascii	"short unsigned int\000"
 1465      7420756E 
 1465      7369676E 
 1465      65642069 
 1465      6E7400
 1466              	.LASF34:
 1467 005e 4D6F746F 		.ascii	"Motor_Read\000"
 1467      725F5265 
 1467      616400
 1468              	.LASF26:
 1469 0069 4D6F746F 		.ascii	"MotorISR_GetPriority\000"
 1469      72495352 
 1469      5F476574 
 1469      5072696F 
 1469      72697479 
 1470              	.LASF14:
 1471 007e 666C6F61 		.ascii	"float\000"
 1471      7400
 1472              	.LASF40:
 1473 0084 4D6F746F 		.ascii	"MotorISR_GetState\000"
 1473      72495352 
 1473      5F476574 
 1473      53746174 
 1473      6500
 1474              	.LASF29:
 1475 0096 4D6F746F 		.ascii	"MotorISR_Start\000"
 1475      72495352 
 1475      5F537461 
 1475      727400
 1476              	.LASF4:
 1477 00a5 756E7369 		.ascii	"unsigned char\000"
 1477      676E6564 
 1477      20636861 
 1477      7200
 1478              	.LASF37:
 1479 00b3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1479      43313120 
 1479      352E342E 
 1479      31203230 
 1479      31363036 
 1480 00e6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1480      20726576 
 1480      6973696F 
 1480      6E203233 
 1480      37373135 
 1481 0119 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1481      66756E63 
 1481      74696F6E 
 1481      2D736563 
 1481      74696F6E 
 1482              	.LASF16:
 1483 0141 72656738 		.ascii	"reg8\000"
 1483      00
 1484              	.LASF8:
 1485 0146 6C6F6E67 		.ascii	"long unsigned int\000"
 1485      20756E73 
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 36


 1485      69676E65 
 1485      6420696E 
 1485      7400
 1486              	.LASF12:
 1487 0158 75696E74 		.ascii	"uint8\000"
 1487      3800
 1488              	.LASF36:
 1489 015e 4D6F746F 		.ascii	"MotorTimer_ReadStatusRegister\000"
 1489      7254696D 
 1489      65725F52 
 1489      65616453 
 1489      74617475 
 1490              	.LASF24:
 1491 017c 7072696F 		.ascii	"priority\000"
 1491      72697479 
 1491      00
 1492              	.LASF15:
 1493 0185 646F7562 		.ascii	"double\000"
 1493      6C6500
 1494              	.LASF19:
 1495 018c 4D6F746F 		.ascii	"MotorISR_Interrupt\000"
 1495      72495352 
 1495      5F496E74 
 1495      65727275 
 1495      707400
 1496              	.LASF39:
 1497 019f 453A5C53 		.ascii	"E:\\SP21\\ECE405\\BioLock\\BioLock.cydsn\000"
 1497      5032315C 
 1497      45434534 
 1497      30355C42 
 1497      696F4C6F 
 1498              	.LASF25:
 1499 01c4 4D6F746F 		.ascii	"MotorISR_GetVector\000"
 1499      72495352 
 1499      5F476574 
 1499      56656374 
 1499      6F7200
 1500              	.LASF13:
 1501 01d7 75696E74 		.ascii	"uint32\000"
 1501      333200
 1502              	.LASF0:
 1503 01de 756E7369 		.ascii	"unsigned int\000"
 1503      676E6564 
 1503      20696E74 
 1503      00
 1504              	.LASF23:
 1505 01eb 61646472 		.ascii	"address\000"
 1505      65737300 
 1506              	.LASF9:
 1507 01f3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1507      206C6F6E 
 1507      6720756E 
 1507      7369676E 
 1507      65642069 
 1508              	.LASF18:
 1509 020a 63796973 		.ascii	"cyisraddress\000"
 1509      72616464 
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 37


 1509      72657373 
 1509      00
 1510              	.LASF10:
 1511 0217 73697A65 		.ascii	"sizetype\000"
 1511      74797065 
 1511      00
 1512              	.LASF30:
 1513 0220 4D6F746F 		.ascii	"MotorISR_StartEx\000"
 1513      72495352 
 1513      5F537461 
 1513      72744578 
 1513      00
 1514              	.LASF1:
 1515 0231 6C6F6E67 		.ascii	"long long int\000"
 1515      206C6F6E 
 1515      6720696E 
 1515      7400
 1516              	.LASF11:
 1517 023f 63686172 		.ascii	"char\000"
 1517      00
 1518              	.LASF21:
 1519 0244 72616D56 		.ascii	"ramVectorTable\000"
 1519      6563746F 
 1519      72546162 
 1519      6C6500
 1520              	.LASF41:
 1521 0253 6D466C61 		.ascii	"mFlag\000"
 1521      6700
 1522              	.LASF5:
 1523 0259 73686F72 		.ascii	"short int\000"
 1523      7420696E 
 1523      7400
 1524              	.LASF31:
 1525 0263 4D6F746F 		.ascii	"MotorISR_Stop\000"
 1525      72495352 
 1525      5F53746F 
 1525      7000
 1526              	.LASF7:
 1527 0271 6C6F6E67 		.ascii	"long int\000"
 1527      20696E74 
 1527      00
 1528              	.LASF35:
 1529 027a 4D6F746F 		.ascii	"Motor_Write\000"
 1529      725F5772 
 1529      69746500 
 1530              	.LASF2:
 1531 0286 6C6F6E67 		.ascii	"long double\000"
 1531      20646F75 
 1531      626C6500 
 1532              	.LASF3:
 1533 0292 7369676E 		.ascii	"signed char\000"
 1533      65642063 
 1533      68617200 
 1534              	.LASF33:
 1535 029e 4D6F746F 		.ascii	"MotorISR_ClearPending\000"
 1535      72495352 
 1535      5F436C65 
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccRPAAFb.s 			page 38


 1535      61725065 
 1535      6E64696E 
 1536              	.LASF22:
 1537 02b4 4D6F746F 		.ascii	"MotorISR_SetPriority\000"
 1537      72495352 
 1537      5F536574 
 1537      5072696F 
 1537      72697479 
 1538              	.LASF32:
 1539 02c9 4D6F746F 		.ascii	"MotorISR_SetPending\000"
 1539      72495352 
 1539      5F536574 
 1539      50656E64 
 1539      696E6700 
 1540              	.LASF28:
 1541 02dd 4D6F746F 		.ascii	"MotorISR_Disable\000"
 1541      72495352 
 1541      5F446973 
 1541      61626C65 
 1541      00
 1542              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
