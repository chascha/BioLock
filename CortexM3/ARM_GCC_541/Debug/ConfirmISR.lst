ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ConfirmISR.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ConfirmISR_Interrupt,"ax",%progbits
  20              		.align	2
  21              		.global	ConfirmISR_Interrupt
  22              		.thumb
  23              		.thumb_func
  24              		.type	ConfirmISR_Interrupt, %function
  25              	ConfirmISR_Interrupt:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC5\\ConfirmISR.c"
   1:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ConfirmISR.c **** * File Name: ConfirmISR.c  
   3:Generated_Source\PSoC5/ConfirmISR.c **** * Version 1.71
   4:Generated_Source\PSoC5/ConfirmISR.c **** *
   5:Generated_Source\PSoC5/ConfirmISR.c **** *  Description:
   6:Generated_Source\PSoC5/ConfirmISR.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/ConfirmISR.c **** *
   8:Generated_Source\PSoC5/ConfirmISR.c **** *
   9:Generated_Source\PSoC5/ConfirmISR.c **** *  Note:
  10:Generated_Source\PSoC5/ConfirmISR.c **** *
  11:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ConfirmISR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ConfirmISR.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/ConfirmISR.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/ConfirmISR.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ConfirmISR.c **** 
  18:Generated_Source\PSoC5/ConfirmISR.c **** 
  19:Generated_Source\PSoC5/ConfirmISR.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/ConfirmISR.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/ConfirmISR.c **** #include <ConfirmISR.h>
  22:Generated_Source\PSoC5/ConfirmISR.c **** #include "cyapicallbacks.h"
  23:Generated_Source\PSoC5/ConfirmISR.c **** 
  24:Generated_Source\PSoC5/ConfirmISR.c **** #if !defined(ConfirmISR__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/ConfirmISR.c **** 
  26:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/ConfirmISR.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/ConfirmISR.c **** /* `#START ConfirmISR_intc` */
  30:Generated_Source\PSoC5/ConfirmISR.c ****     #include "I2C.h"
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 2


  31:Generated_Source\PSoC5/ConfirmISR.c ****     #include "MotorISR.h"
  32:Generated_Source\PSoC5/ConfirmISR.c ****     #include "Solenoid.h"
  33:Generated_Source\PSoC5/ConfirmISR.c ****         #include "LCD_I2C_FUNCS.h"
  34:Generated_Source\PSoC5/ConfirmISR.c ****     #include "stdio.h"
  35:Generated_Source\PSoC5/ConfirmISR.c **** volatile uint8 buttonID;
  36:Generated_Source\PSoC5/ConfirmISR.c ****     #include "UART.h"
  37:Generated_Source\PSoC5/ConfirmISR.c ****     volatile uint8 FPSID;
  38:Generated_Source\PSoC5/ConfirmISR.c ****     volatile uint8 FPSmPos;
  39:Generated_Source\PSoC5/ConfirmISR.c ****     volatile unsigned int mPos;
  40:Generated_Source\PSoC5/ConfirmISR.c ****     volatile char mFlag;
  41:Generated_Source\PSoC5/ConfirmISR.c ****     uint8 addr = 0x00;
  42:Generated_Source\PSoC5/ConfirmISR.c ****     uint8 readPos;
  43:Generated_Source\PSoC5/ConfirmISR.c ****     
  44:Generated_Source\PSoC5/ConfirmISR.c **** /* `#END` */
  45:Generated_Source\PSoC5/ConfirmISR.c **** 
  46:Generated_Source\PSoC5/ConfirmISR.c **** #ifndef CYINT_IRQ_BASE
  47:Generated_Source\PSoC5/ConfirmISR.c **** #define CYINT_IRQ_BASE      16
  48:Generated_Source\PSoC5/ConfirmISR.c **** #endif /* CYINT_IRQ_BASE */
  49:Generated_Source\PSoC5/ConfirmISR.c **** #ifndef CYINT_VECT_TABLE
  50:Generated_Source\PSoC5/ConfirmISR.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  51:Generated_Source\PSoC5/ConfirmISR.c **** #endif /* CYINT_VECT_TABLE */
  52:Generated_Source\PSoC5/ConfirmISR.c **** 
  53:Generated_Source\PSoC5/ConfirmISR.c **** /* Declared in startup, used to set unused interrupts to. */
  54:Generated_Source\PSoC5/ConfirmISR.c **** CY_ISR_PROTO(IntDefaultHandler);
  55:Generated_Source\PSoC5/ConfirmISR.c **** 
  56:Generated_Source\PSoC5/ConfirmISR.c **** 
  57:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
  58:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_Start
  59:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
  60:Generated_Source\PSoC5/ConfirmISR.c **** *
  61:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
  62:Generated_Source\PSoC5/ConfirmISR.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  63:Generated_Source\PSoC5/ConfirmISR.c **** *  sets the default interrupt vector, sets the priority from the value in the
  64:Generated_Source\PSoC5/ConfirmISR.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  65:Generated_Source\PSoC5/ConfirmISR.c **** *  interrupt controller.
  66:Generated_Source\PSoC5/ConfirmISR.c **** *
  67:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:  
  68:Generated_Source\PSoC5/ConfirmISR.c **** *   None
  69:Generated_Source\PSoC5/ConfirmISR.c **** *
  70:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
  71:Generated_Source\PSoC5/ConfirmISR.c **** *   None
  72:Generated_Source\PSoC5/ConfirmISR.c **** *
  73:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ConfirmISR.c **** void ConfirmISR_Start(void)
  75:Generated_Source\PSoC5/ConfirmISR.c **** {
  76:Generated_Source\PSoC5/ConfirmISR.c ****     /* For all we know the interrupt is active. */
  77:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_Disable();
  78:Generated_Source\PSoC5/ConfirmISR.c **** 
  79:Generated_Source\PSoC5/ConfirmISR.c ****     /* Set the ISR to point to the ConfirmISR Interrupt. */
  80:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_SetVector(&ConfirmISR_Interrupt);
  81:Generated_Source\PSoC5/ConfirmISR.c **** 
  82:Generated_Source\PSoC5/ConfirmISR.c ****     /* Set the priority. */
  83:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_SetPriority((uint8)ConfirmISR_INTC_PRIOR_NUMBER);
  84:Generated_Source\PSoC5/ConfirmISR.c **** 
  85:Generated_Source\PSoC5/ConfirmISR.c ****     /* Enable it. */
  86:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_Enable();
  87:Generated_Source\PSoC5/ConfirmISR.c **** }
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 3


  88:Generated_Source\PSoC5/ConfirmISR.c **** 
  89:Generated_Source\PSoC5/ConfirmISR.c **** 
  90:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
  91:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_StartEx
  92:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
  93:Generated_Source\PSoC5/ConfirmISR.c **** *
  94:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
  95:Generated_Source\PSoC5/ConfirmISR.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  96:Generated_Source\PSoC5/ConfirmISR.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  97:Generated_Source\PSoC5/ConfirmISR.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  98:Generated_Source\PSoC5/ConfirmISR.c **** *  the interrupt to the interrupt controller.
  99:Generated_Source\PSoC5/ConfirmISR.c **** *  
 100:Generated_Source\PSoC5/ConfirmISR.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 101:Generated_Source\PSoC5/ConfirmISR.c **** *  used to provide consistent definition across compilers:
 102:Generated_Source\PSoC5/ConfirmISR.c **** *  
 103:Generated_Source\PSoC5/ConfirmISR.c **** *  Function definition example:
 104:Generated_Source\PSoC5/ConfirmISR.c **** *   CY_ISR(MyISR)
 105:Generated_Source\PSoC5/ConfirmISR.c **** *   {
 106:Generated_Source\PSoC5/ConfirmISR.c **** *   }
 107:Generated_Source\PSoC5/ConfirmISR.c **** *   Function prototype example:
 108:Generated_Source\PSoC5/ConfirmISR.c **** *   CY_ISR_PROTO(MyISR);
 109:Generated_Source\PSoC5/ConfirmISR.c **** *
 110:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:  
 111:Generated_Source\PSoC5/ConfirmISR.c **** *   address: Address of the ISR to set in the interrupt vector table.
 112:Generated_Source\PSoC5/ConfirmISR.c **** *
 113:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 114:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 115:Generated_Source\PSoC5/ConfirmISR.c **** *
 116:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 117:Generated_Source\PSoC5/ConfirmISR.c **** void ConfirmISR_StartEx(cyisraddress address)
 118:Generated_Source\PSoC5/ConfirmISR.c **** {
 119:Generated_Source\PSoC5/ConfirmISR.c ****     /* For all we know the interrupt is active. */
 120:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_Disable();
 121:Generated_Source\PSoC5/ConfirmISR.c **** 
 122:Generated_Source\PSoC5/ConfirmISR.c ****     /* Set the ISR to point to the ConfirmISR Interrupt. */
 123:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_SetVector(address);
 124:Generated_Source\PSoC5/ConfirmISR.c **** 
 125:Generated_Source\PSoC5/ConfirmISR.c ****     /* Set the priority. */
 126:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_SetPriority((uint8)ConfirmISR_INTC_PRIOR_NUMBER);
 127:Generated_Source\PSoC5/ConfirmISR.c **** 
 128:Generated_Source\PSoC5/ConfirmISR.c ****     /* Enable it. */
 129:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_Enable();
 130:Generated_Source\PSoC5/ConfirmISR.c **** }
 131:Generated_Source\PSoC5/ConfirmISR.c **** 
 132:Generated_Source\PSoC5/ConfirmISR.c **** 
 133:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_Stop
 135:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 136:Generated_Source\PSoC5/ConfirmISR.c **** *
 137:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 138:Generated_Source\PSoC5/ConfirmISR.c **** *   Disables and removes the interrupt.
 139:Generated_Source\PSoC5/ConfirmISR.c **** *
 140:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:  
 141:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 142:Generated_Source\PSoC5/ConfirmISR.c **** *
 143:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 144:Generated_Source\PSoC5/ConfirmISR.c **** *   None
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 4


 145:Generated_Source\PSoC5/ConfirmISR.c **** *
 146:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 147:Generated_Source\PSoC5/ConfirmISR.c **** void ConfirmISR_Stop(void)
 148:Generated_Source\PSoC5/ConfirmISR.c **** {
 149:Generated_Source\PSoC5/ConfirmISR.c ****     /* Disable this interrupt. */
 150:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_Disable();
 151:Generated_Source\PSoC5/ConfirmISR.c **** 
 152:Generated_Source\PSoC5/ConfirmISR.c ****     /* Set the ISR to point to the passive one. */
 153:Generated_Source\PSoC5/ConfirmISR.c ****     ConfirmISR_SetVector(&IntDefaultHandler);
 154:Generated_Source\PSoC5/ConfirmISR.c **** }
 155:Generated_Source\PSoC5/ConfirmISR.c **** 
 156:Generated_Source\PSoC5/ConfirmISR.c **** 
 157:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 158:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_Interrupt
 159:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 160:Generated_Source\PSoC5/ConfirmISR.c **** *
 161:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 162:Generated_Source\PSoC5/ConfirmISR.c **** *   The default Interrupt Service Routine for ConfirmISR.
 163:Generated_Source\PSoC5/ConfirmISR.c **** *
 164:Generated_Source\PSoC5/ConfirmISR.c **** *   Add custom code between the coments to keep the next version of this file
 165:Generated_Source\PSoC5/ConfirmISR.c **** *   from over writting your code.
 166:Generated_Source\PSoC5/ConfirmISR.c **** *
 167:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:  
 168:Generated_Source\PSoC5/ConfirmISR.c **** *
 169:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 170:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 171:Generated_Source\PSoC5/ConfirmISR.c **** *
 172:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 173:Generated_Source\PSoC5/ConfirmISR.c **** CY_ISR(ConfirmISR_Interrupt)
 174:Generated_Source\PSoC5/ConfirmISR.c **** {
  28              		.loc 1 174 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
 175:Generated_Source\PSoC5/ConfirmISR.c ****     #ifdef ConfirmISR_INTERRUPT_INTERRUPT_CALLBACK
 176:Generated_Source\PSoC5/ConfirmISR.c ****         ConfirmISR_Interrupt_InterruptCallback();
 177:Generated_Source\PSoC5/ConfirmISR.c ****     #endif /* ConfirmISR_INTERRUPT_INTERRUPT_CALLBACK */ 
 178:Generated_Source\PSoC5/ConfirmISR.c **** 
 179:Generated_Source\PSoC5/ConfirmISR.c ****     /*  Place your Interrupt code here. */
 180:Generated_Source\PSoC5/ConfirmISR.c ****     /* `#START ConfirmISR_Interrupt` */
 181:Generated_Source\PSoC5/ConfirmISR.c ****     char arr[1];
 182:Generated_Source\PSoC5/ConfirmISR.c ****     if(buttonID == FPSID)
  37              		.loc 1 182 0
  38 0004 264B     		ldr	r3, .L8
  39 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  40 0008 D2B2     		uxtb	r2, r2
  41 000a 264B     		ldr	r3, .L8+4
  42 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  43 000e DBB2     		uxtb	r3, r3
  44 0010 9A42     		cmp	r2, r3
  45 0012 31D1     		bne	.L2
 183:Generated_Source\PSoC5/ConfirmISR.c ****     {
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 5


 184:Generated_Source\PSoC5/ConfirmISR.c ****         Solenoid_Write(1);
  46              		.loc 1 184 0
  47 0014 0120     		movs	r0, #1
  48 0016 FFF7FEFF 		bl	Solenoid_Write
  49              	.LVL0:
 185:Generated_Source\PSoC5/ConfirmISR.c ****         
 186:Generated_Source\PSoC5/ConfirmISR.c ****         while(FPSmPos > mPos)
  50              		.loc 1 186 0
  51 001a 0DE0     		b	.L3
  52              	.L4:
 187:Generated_Source\PSoC5/ConfirmISR.c ****         {
 188:Generated_Source\PSoC5/ConfirmISR.c ****             mPos++;
  53              		.loc 1 188 0
  54 001c 224A     		ldr	r2, .L8+8
  55 001e 1368     		ldr	r3, [r2]
  56 0020 0133     		adds	r3, r3, #1
  57 0022 1360     		str	r3, [r2]
 189:Generated_Source\PSoC5/ConfirmISR.c ****             mFlag = 'f';
  58              		.loc 1 189 0
  59 0024 6622     		movs	r2, #102
  60 0026 214B     		ldr	r3, .L8+12
  61 0028 1A70     		strb	r2, [r3]
 190:Generated_Source\PSoC5/ConfirmISR.c ****             MotorISR_Enable();
  62              		.loc 1 190 0
  63 002a FFF7FEFF 		bl	MotorISR_Enable
  64              	.LVL1:
 191:Generated_Source\PSoC5/ConfirmISR.c ****             CyDelay(235);
  65              		.loc 1 191 0
  66 002e EB20     		movs	r0, #235
  67 0030 FFF7FEFF 		bl	CyDelay
  68              	.LVL2:
 192:Generated_Source\PSoC5/ConfirmISR.c ****             MotorISR_Disable();
  69              		.loc 1 192 0
  70 0034 FFF7FEFF 		bl	MotorISR_Disable
  71              	.LVL3:
  72              	.L3:
 186:Generated_Source\PSoC5/ConfirmISR.c ****         {
  73              		.loc 1 186 0
  74 0038 1D4B     		ldr	r3, .L8+16
  75 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  76 003c DBB2     		uxtb	r3, r3
  77 003e 1A4A     		ldr	r2, .L8+8
  78 0040 1268     		ldr	r2, [r2]
  79 0042 9342     		cmp	r3, r2
  80 0044 EAD8     		bhi	.L4
  81 0046 0DE0     		b	.L5
  82              	.L6:
 193:Generated_Source\PSoC5/ConfirmISR.c ****         }
 194:Generated_Source\PSoC5/ConfirmISR.c ****         while( FPSmPos < mPos)
 195:Generated_Source\PSoC5/ConfirmISR.c ****         {
 196:Generated_Source\PSoC5/ConfirmISR.c ****             mPos--;
  83              		.loc 1 196 0
  84 0048 174A     		ldr	r2, .L8+8
  85 004a 1368     		ldr	r3, [r2]
  86 004c 013B     		subs	r3, r3, #1
  87 004e 1360     		str	r3, [r2]
 197:Generated_Source\PSoC5/ConfirmISR.c ****             mFlag = 'b';
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 6


  88              		.loc 1 197 0
  89 0050 6222     		movs	r2, #98
  90 0052 164B     		ldr	r3, .L8+12
  91 0054 1A70     		strb	r2, [r3]
 198:Generated_Source\PSoC5/ConfirmISR.c ****             MotorISR_Enable();
  92              		.loc 1 198 0
  93 0056 FFF7FEFF 		bl	MotorISR_Enable
  94              	.LVL4:
 199:Generated_Source\PSoC5/ConfirmISR.c ****             CyDelay(235);
  95              		.loc 1 199 0
  96 005a EB20     		movs	r0, #235
  97 005c FFF7FEFF 		bl	CyDelay
  98              	.LVL5:
 200:Generated_Source\PSoC5/ConfirmISR.c ****             MotorISR_Disable();
  99              		.loc 1 200 0
 100 0060 FFF7FEFF 		bl	MotorISR_Disable
 101              	.LVL6:
 102              	.L5:
 194:Generated_Source\PSoC5/ConfirmISR.c ****         {
 103              		.loc 1 194 0
 104 0064 124B     		ldr	r3, .L8+16
 105 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 106 0068 DBB2     		uxtb	r3, r3
 107 006a 0F4A     		ldr	r2, .L8+8
 108 006c 1268     		ldr	r2, [r2]
 109 006e 9342     		cmp	r3, r2
 110 0070 EAD3     		bcc	.L6
 201:Generated_Source\PSoC5/ConfirmISR.c ****         }
 202:Generated_Source\PSoC5/ConfirmISR.c ****         Solenoid_Write(0);
 111              		.loc 1 202 0
 112 0072 0020     		movs	r0, #0
 113 0074 FFF7FEFF 		bl	Solenoid_Write
 114              	.LVL7:
 115              	.L2:
 203:Generated_Source\PSoC5/ConfirmISR.c ****     }
 204:Generated_Source\PSoC5/ConfirmISR.c ****         
 205:Generated_Source\PSoC5/ConfirmISR.c ****         sprintf(arr, "%d", mPos);
 116              		.loc 1 205 0
 117 0078 0B4B     		ldr	r3, .L8+8
 118 007a 1A68     		ldr	r2, [r3]
 119 007c 0D49     		ldr	r1, .L8+20
 120 007e 01A8     		add	r0, sp, #4
 121 0080 FFF7FEFF 		bl	sprintf
 122              	.LVL8:
 206:Generated_Source\PSoC5/ConfirmISR.c ****         LCD_I2C_setCursor(0,1);
 123              		.loc 1 206 0
 124 0084 0121     		movs	r1, #1
 125 0086 0020     		movs	r0, #0
 126 0088 FFF7FEFF 		bl	LCD_I2C_setCursor
 127              	.LVL9:
 207:Generated_Source\PSoC5/ConfirmISR.c ****         LCD_I2C_print("cPos:");
 128              		.loc 1 207 0
 129 008c 0A48     		ldr	r0, .L8+24
 130 008e FFF7FEFF 		bl	LCD_I2C_print
 131              	.LVL10:
 208:Generated_Source\PSoC5/ConfirmISR.c ****         LCD_I2C_print(arr);    
 132              		.loc 1 208 0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 7


 133 0092 01A8     		add	r0, sp, #4
 134 0094 FFF7FEFF 		bl	LCD_I2C_print
 135              	.LVL11:
 209:Generated_Source\PSoC5/ConfirmISR.c ****     /* `#END` */
 210:Generated_Source\PSoC5/ConfirmISR.c **** }
 136              		.loc 1 210 0
 137 0098 03B0     		add	sp, sp, #12
 138              		.cfi_def_cfa_offset 4
 139              		@ sp needed
 140 009a 5DF804FB 		ldr	pc, [sp], #4
 141              	.L9:
 142 009e 00BF     		.align	2
 143              	.L8:
 144 00a0 00000000 		.word	buttonID
 145 00a4 00000000 		.word	FPSID
 146 00a8 00000000 		.word	mPos
 147 00ac 00000000 		.word	mFlag
 148 00b0 00000000 		.word	FPSmPos
 149 00b4 00000000 		.word	.LC0
 150 00b8 04000000 		.word	.LC1
 151              		.cfi_endproc
 152              	.LFE4:
 153              		.size	ConfirmISR_Interrupt, .-ConfirmISR_Interrupt
 154              		.section	.text.ConfirmISR_SetVector,"ax",%progbits
 155              		.align	2
 156              		.global	ConfirmISR_SetVector
 157              		.thumb
 158              		.thumb_func
 159              		.type	ConfirmISR_SetVector, %function
 160              	ConfirmISR_SetVector:
 161              	.LFB5:
 211:Generated_Source\PSoC5/ConfirmISR.c **** 
 212:Generated_Source\PSoC5/ConfirmISR.c **** 
 213:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 214:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_SetVector
 215:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 216:Generated_Source\PSoC5/ConfirmISR.c **** *
 217:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 218:Generated_Source\PSoC5/ConfirmISR.c **** *   Change the ISR vector for the Interrupt. Note calling ConfirmISR_Start
 219:Generated_Source\PSoC5/ConfirmISR.c **** *   will override any effect this method would have had. To set the vector 
 220:Generated_Source\PSoC5/ConfirmISR.c **** *   before the component has been started use ConfirmISR_StartEx instead.
 221:Generated_Source\PSoC5/ConfirmISR.c **** * 
 222:Generated_Source\PSoC5/ConfirmISR.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 223:Generated_Source\PSoC5/ConfirmISR.c **** *   used to provide consistent definition across compilers:
 224:Generated_Source\PSoC5/ConfirmISR.c **** *
 225:Generated_Source\PSoC5/ConfirmISR.c **** *   Function definition example:
 226:Generated_Source\PSoC5/ConfirmISR.c **** *   CY_ISR(MyISR)
 227:Generated_Source\PSoC5/ConfirmISR.c **** *   {
 228:Generated_Source\PSoC5/ConfirmISR.c **** *   }
 229:Generated_Source\PSoC5/ConfirmISR.c **** *
 230:Generated_Source\PSoC5/ConfirmISR.c **** *   Function prototype example:
 231:Generated_Source\PSoC5/ConfirmISR.c **** *     CY_ISR_PROTO(MyISR);
 232:Generated_Source\PSoC5/ConfirmISR.c **** *
 233:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:
 234:Generated_Source\PSoC5/ConfirmISR.c **** *   address: Address of the ISR to set in the interrupt vector table.
 235:Generated_Source\PSoC5/ConfirmISR.c **** *
 236:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 8


 237:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 238:Generated_Source\PSoC5/ConfirmISR.c **** *
 239:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/ConfirmISR.c **** void ConfirmISR_SetVector(cyisraddress address)
 241:Generated_Source\PSoC5/ConfirmISR.c **** {
 162              		.loc 1 241 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL12:
 242:Generated_Source\PSoC5/ConfirmISR.c ****     cyisraddress * ramVectorTable;
 243:Generated_Source\PSoC5/ConfirmISR.c **** 
 244:Generated_Source\PSoC5/ConfirmISR.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 168              		.loc 1 244 0
 169 0000 014B     		ldr	r3, .L11
 170 0002 1B68     		ldr	r3, [r3]
 171              	.LVL13:
 245:Generated_Source\PSoC5/ConfirmISR.c **** 
 246:Generated_Source\PSoC5/ConfirmISR.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)ConfirmISR__INTC_NUMBER] = address;
 172              		.loc 1 246 0
 173 0004 5864     		str	r0, [r3, #68]
 174 0006 7047     		bx	lr
 175              	.L12:
 176              		.align	2
 177              	.L11:
 178 0008 08ED00E0 		.word	-536810232
 179              		.cfi_endproc
 180              	.LFE5:
 181              		.size	ConfirmISR_SetVector, .-ConfirmISR_SetVector
 182              		.section	.text.ConfirmISR_GetVector,"ax",%progbits
 183              		.align	2
 184              		.global	ConfirmISR_GetVector
 185              		.thumb
 186              		.thumb_func
 187              		.type	ConfirmISR_GetVector, %function
 188              	ConfirmISR_GetVector:
 189              	.LFB6:
 247:Generated_Source\PSoC5/ConfirmISR.c **** }
 248:Generated_Source\PSoC5/ConfirmISR.c **** 
 249:Generated_Source\PSoC5/ConfirmISR.c **** 
 250:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 251:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_GetVector
 252:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 253:Generated_Source\PSoC5/ConfirmISR.c **** *
 254:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 255:Generated_Source\PSoC5/ConfirmISR.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 256:Generated_Source\PSoC5/ConfirmISR.c **** *
 257:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:
 258:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 259:Generated_Source\PSoC5/ConfirmISR.c **** *
 260:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 261:Generated_Source\PSoC5/ConfirmISR.c **** *   Address of the ISR in the interrupt vector table.
 262:Generated_Source\PSoC5/ConfirmISR.c **** *
 263:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 264:Generated_Source\PSoC5/ConfirmISR.c **** cyisraddress ConfirmISR_GetVector(void)
 265:Generated_Source\PSoC5/ConfirmISR.c **** {
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 9


 190              		.loc 1 265 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 266:Generated_Source\PSoC5/ConfirmISR.c ****     cyisraddress * ramVectorTable;
 267:Generated_Source\PSoC5/ConfirmISR.c **** 
 268:Generated_Source\PSoC5/ConfirmISR.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 195              		.loc 1 268 0
 196 0000 014B     		ldr	r3, .L14
 197 0002 1B68     		ldr	r3, [r3]
 198              	.LVL14:
 269:Generated_Source\PSoC5/ConfirmISR.c **** 
 270:Generated_Source\PSoC5/ConfirmISR.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)ConfirmISR__INTC_NUMBER];
 271:Generated_Source\PSoC5/ConfirmISR.c **** }
 199              		.loc 1 271 0
 200 0004 586C     		ldr	r0, [r3, #68]
 201 0006 7047     		bx	lr
 202              	.L15:
 203              		.align	2
 204              	.L14:
 205 0008 08ED00E0 		.word	-536810232
 206              		.cfi_endproc
 207              	.LFE6:
 208              		.size	ConfirmISR_GetVector, .-ConfirmISR_GetVector
 209              		.section	.text.ConfirmISR_SetPriority,"ax",%progbits
 210              		.align	2
 211              		.global	ConfirmISR_SetPriority
 212              		.thumb
 213              		.thumb_func
 214              		.type	ConfirmISR_SetPriority, %function
 215              	ConfirmISR_SetPriority:
 216              	.LFB7:
 272:Generated_Source\PSoC5/ConfirmISR.c **** 
 273:Generated_Source\PSoC5/ConfirmISR.c **** 
 274:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 275:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_SetPriority
 276:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 277:Generated_Source\PSoC5/ConfirmISR.c **** *
 278:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 279:Generated_Source\PSoC5/ConfirmISR.c **** *   Sets the Priority of the Interrupt. 
 280:Generated_Source\PSoC5/ConfirmISR.c **** *
 281:Generated_Source\PSoC5/ConfirmISR.c **** *   Note calling ConfirmISR_Start or ConfirmISR_StartEx will 
 282:Generated_Source\PSoC5/ConfirmISR.c **** *   override any effect this API would have had. This API should only be called
 283:Generated_Source\PSoC5/ConfirmISR.c **** *   after ConfirmISR_Start or ConfirmISR_StartEx has been called. 
 284:Generated_Source\PSoC5/ConfirmISR.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 285:Generated_Source\PSoC5/ConfirmISR.c **** *   Interrupt Editor.
 286:Generated_Source\PSoC5/ConfirmISR.c **** *
 287:Generated_Source\PSoC5/ConfirmISR.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 288:Generated_Source\PSoC5/ConfirmISR.c **** *
 289:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:
 290:Generated_Source\PSoC5/ConfirmISR.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 291:Generated_Source\PSoC5/ConfirmISR.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 292:Generated_Source\PSoC5/ConfirmISR.c **** *             PSoC 4: Priority is from 0 to 3.
 293:Generated_Source\PSoC5/ConfirmISR.c **** *
 294:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 295:Generated_Source\PSoC5/ConfirmISR.c **** *   None
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 10


 296:Generated_Source\PSoC5/ConfirmISR.c **** *
 297:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 298:Generated_Source\PSoC5/ConfirmISR.c **** void ConfirmISR_SetPriority(uint8 priority)
 299:Generated_Source\PSoC5/ConfirmISR.c **** {
 217              		.loc 1 299 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222              	.LVL15:
 300:Generated_Source\PSoC5/ConfirmISR.c ****     *ConfirmISR_INTC_PRIOR = priority << 5;
 223              		.loc 1 300 0
 224 0000 4001     		lsls	r0, r0, #5
 225              	.LVL16:
 226 0002 C0B2     		uxtb	r0, r0
 227 0004 014B     		ldr	r3, .L17
 228 0006 1870     		strb	r0, [r3]
 229 0008 7047     		bx	lr
 230              	.L18:
 231 000a 00BF     		.align	2
 232              	.L17:
 233 000c 01E400E0 		.word	-536812543
 234              		.cfi_endproc
 235              	.LFE7:
 236              		.size	ConfirmISR_SetPriority, .-ConfirmISR_SetPriority
 237              		.section	.text.ConfirmISR_GetPriority,"ax",%progbits
 238              		.align	2
 239              		.global	ConfirmISR_GetPriority
 240              		.thumb
 241              		.thumb_func
 242              		.type	ConfirmISR_GetPriority, %function
 243              	ConfirmISR_GetPriority:
 244              	.LFB8:
 301:Generated_Source\PSoC5/ConfirmISR.c **** }
 302:Generated_Source\PSoC5/ConfirmISR.c **** 
 303:Generated_Source\PSoC5/ConfirmISR.c **** 
 304:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_GetPriority
 306:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ConfirmISR.c **** *
 308:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 309:Generated_Source\PSoC5/ConfirmISR.c **** *   Gets the Priority of the Interrupt.
 310:Generated_Source\PSoC5/ConfirmISR.c **** *
 311:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:
 312:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 313:Generated_Source\PSoC5/ConfirmISR.c **** *
 314:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 315:Generated_Source\PSoC5/ConfirmISR.c **** *   Priority of the interrupt, 0 being the highest priority
 316:Generated_Source\PSoC5/ConfirmISR.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 317:Generated_Source\PSoC5/ConfirmISR.c **** *    PSoC 4: Priority is from 0 to 3.
 318:Generated_Source\PSoC5/ConfirmISR.c **** *
 319:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 320:Generated_Source\PSoC5/ConfirmISR.c **** uint8 ConfirmISR_GetPriority(void)
 321:Generated_Source\PSoC5/ConfirmISR.c **** {
 245              		.loc 1 321 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 11


 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 322:Generated_Source\PSoC5/ConfirmISR.c ****     uint8 priority;
 323:Generated_Source\PSoC5/ConfirmISR.c **** 
 324:Generated_Source\PSoC5/ConfirmISR.c **** 
 325:Generated_Source\PSoC5/ConfirmISR.c ****     priority = *ConfirmISR_INTC_PRIOR >> 5;
 250              		.loc 1 325 0
 251 0000 014B     		ldr	r3, .L20
 252 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 253              	.LVL17:
 326:Generated_Source\PSoC5/ConfirmISR.c **** 
 327:Generated_Source\PSoC5/ConfirmISR.c ****     return priority;
 328:Generated_Source\PSoC5/ConfirmISR.c **** }
 254              		.loc 1 328 0
 255 0004 4009     		lsrs	r0, r0, #5
 256              	.LVL18:
 257 0006 7047     		bx	lr
 258              	.L21:
 259              		.align	2
 260              	.L20:
 261 0008 01E400E0 		.word	-536812543
 262              		.cfi_endproc
 263              	.LFE8:
 264              		.size	ConfirmISR_GetPriority, .-ConfirmISR_GetPriority
 265              		.section	.text.ConfirmISR_Enable,"ax",%progbits
 266              		.align	2
 267              		.global	ConfirmISR_Enable
 268              		.thumb
 269              		.thumb_func
 270              		.type	ConfirmISR_Enable, %function
 271              	ConfirmISR_Enable:
 272              	.LFB9:
 329:Generated_Source\PSoC5/ConfirmISR.c **** 
 330:Generated_Source\PSoC5/ConfirmISR.c **** 
 331:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 332:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_Enable
 333:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 334:Generated_Source\PSoC5/ConfirmISR.c **** *
 335:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 336:Generated_Source\PSoC5/ConfirmISR.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 337:Generated_Source\PSoC5/ConfirmISR.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 338:Generated_Source\PSoC5/ConfirmISR.c **** *   function, which sets the vector and the priority, has been called.
 339:Generated_Source\PSoC5/ConfirmISR.c **** *
 340:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:
 341:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 342:Generated_Source\PSoC5/ConfirmISR.c **** *
 343:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 344:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 345:Generated_Source\PSoC5/ConfirmISR.c **** *
 346:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 347:Generated_Source\PSoC5/ConfirmISR.c **** void ConfirmISR_Enable(void)
 348:Generated_Source\PSoC5/ConfirmISR.c **** {
 273              		.loc 1 348 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 12


 349:Generated_Source\PSoC5/ConfirmISR.c ****     /* Enable the general interrupt. */
 350:Generated_Source\PSoC5/ConfirmISR.c ****     *ConfirmISR_INTC_SET_EN = ConfirmISR__INTC_MASK;
 278              		.loc 1 350 0
 279 0000 0222     		movs	r2, #2
 280 0002 014B     		ldr	r3, .L23
 281 0004 1A60     		str	r2, [r3]
 282 0006 7047     		bx	lr
 283              	.L24:
 284              		.align	2
 285              	.L23:
 286 0008 00E100E0 		.word	-536813312
 287              		.cfi_endproc
 288              	.LFE9:
 289              		.size	ConfirmISR_Enable, .-ConfirmISR_Enable
 290              		.section	.text.ConfirmISR_GetState,"ax",%progbits
 291              		.align	2
 292              		.global	ConfirmISR_GetState
 293              		.thumb
 294              		.thumb_func
 295              		.type	ConfirmISR_GetState, %function
 296              	ConfirmISR_GetState:
 297              	.LFB10:
 351:Generated_Source\PSoC5/ConfirmISR.c **** }
 352:Generated_Source\PSoC5/ConfirmISR.c **** 
 353:Generated_Source\PSoC5/ConfirmISR.c **** 
 354:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 355:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_GetState
 356:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 357:Generated_Source\PSoC5/ConfirmISR.c **** *
 358:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 359:Generated_Source\PSoC5/ConfirmISR.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 360:Generated_Source\PSoC5/ConfirmISR.c **** *
 361:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:
 362:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 363:Generated_Source\PSoC5/ConfirmISR.c **** *
 364:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 365:Generated_Source\PSoC5/ConfirmISR.c **** *   1 if enabled, 0 if disabled.
 366:Generated_Source\PSoC5/ConfirmISR.c **** *
 367:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 368:Generated_Source\PSoC5/ConfirmISR.c **** uint8 ConfirmISR_GetState(void)
 369:Generated_Source\PSoC5/ConfirmISR.c **** {
 298              		.loc 1 369 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 370:Generated_Source\PSoC5/ConfirmISR.c ****     /* Get the state of the general interrupt. */
 371:Generated_Source\PSoC5/ConfirmISR.c ****     return ((*ConfirmISR_INTC_SET_EN & (uint32)ConfirmISR__INTC_MASK) != 0u) ? 1u:0u;
 303              		.loc 1 371 0
 304 0000 044B     		ldr	r3, .L28
 305 0002 1B68     		ldr	r3, [r3]
 306 0004 13F0020F 		tst	r3, #2
 307 0008 01D0     		beq	.L27
 308 000a 0120     		movs	r0, #1
 309 000c 7047     		bx	lr
 310              	.L27:
 311 000e 0020     		movs	r0, #0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 13


 372:Generated_Source\PSoC5/ConfirmISR.c **** }
 312              		.loc 1 372 0
 313 0010 7047     		bx	lr
 314              	.L29:
 315 0012 00BF     		.align	2
 316              	.L28:
 317 0014 00E100E0 		.word	-536813312
 318              		.cfi_endproc
 319              	.LFE10:
 320              		.size	ConfirmISR_GetState, .-ConfirmISR_GetState
 321              		.section	.text.ConfirmISR_Disable,"ax",%progbits
 322              		.align	2
 323              		.global	ConfirmISR_Disable
 324              		.thumb
 325              		.thumb_func
 326              		.type	ConfirmISR_Disable, %function
 327              	ConfirmISR_Disable:
 328              	.LFB11:
 373:Generated_Source\PSoC5/ConfirmISR.c **** 
 374:Generated_Source\PSoC5/ConfirmISR.c **** 
 375:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 376:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_Disable
 377:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 378:Generated_Source\PSoC5/ConfirmISR.c **** *
 379:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 380:Generated_Source\PSoC5/ConfirmISR.c **** *   Disables the Interrupt in the interrupt controller.
 381:Generated_Source\PSoC5/ConfirmISR.c **** *
 382:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:
 383:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 384:Generated_Source\PSoC5/ConfirmISR.c **** *
 385:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 386:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 387:Generated_Source\PSoC5/ConfirmISR.c **** *
 388:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 389:Generated_Source\PSoC5/ConfirmISR.c **** void ConfirmISR_Disable(void)
 390:Generated_Source\PSoC5/ConfirmISR.c **** {
 329              		.loc 1 390 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 391:Generated_Source\PSoC5/ConfirmISR.c ****     /* Disable the general interrupt. */
 392:Generated_Source\PSoC5/ConfirmISR.c ****     *ConfirmISR_INTC_CLR_EN = ConfirmISR__INTC_MASK;
 334              		.loc 1 392 0
 335 0000 0222     		movs	r2, #2
 336 0002 014B     		ldr	r3, .L31
 337 0004 1A60     		str	r2, [r3]
 338 0006 7047     		bx	lr
 339              	.L32:
 340              		.align	2
 341              	.L31:
 342 0008 80E100E0 		.word	-536813184
 343              		.cfi_endproc
 344              	.LFE11:
 345              		.size	ConfirmISR_Disable, .-ConfirmISR_Disable
 346              		.section	.text.ConfirmISR_Start,"ax",%progbits
 347              		.align	2
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 14


 348              		.global	ConfirmISR_Start
 349              		.thumb
 350              		.thumb_func
 351              		.type	ConfirmISR_Start, %function
 352              	ConfirmISR_Start:
 353              	.LFB1:
  75:Generated_Source\PSoC5/ConfirmISR.c ****     /* For all we know the interrupt is active. */
 354              		.loc 1 75 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 08B5     		push	{r3, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 3, -8
 361              		.cfi_offset 14, -4
  77:Generated_Source\PSoC5/ConfirmISR.c **** 
 362              		.loc 1 77 0
 363 0002 FFF7FEFF 		bl	ConfirmISR_Disable
 364              	.LVL19:
  80:Generated_Source\PSoC5/ConfirmISR.c **** 
 365              		.loc 1 80 0
 366 0006 0448     		ldr	r0, .L35
 367 0008 FFF7FEFF 		bl	ConfirmISR_SetVector
 368              	.LVL20:
  83:Generated_Source\PSoC5/ConfirmISR.c **** 
 369              		.loc 1 83 0
 370 000c 0720     		movs	r0, #7
 371 000e FFF7FEFF 		bl	ConfirmISR_SetPriority
 372              	.LVL21:
  86:Generated_Source\PSoC5/ConfirmISR.c **** }
 373              		.loc 1 86 0
 374 0012 FFF7FEFF 		bl	ConfirmISR_Enable
 375              	.LVL22:
 376 0016 08BD     		pop	{r3, pc}
 377              	.L36:
 378              		.align	2
 379              	.L35:
 380 0018 00000000 		.word	ConfirmISR_Interrupt
 381              		.cfi_endproc
 382              	.LFE1:
 383              		.size	ConfirmISR_Start, .-ConfirmISR_Start
 384              		.section	.text.ConfirmISR_StartEx,"ax",%progbits
 385              		.align	2
 386              		.global	ConfirmISR_StartEx
 387              		.thumb
 388              		.thumb_func
 389              		.type	ConfirmISR_StartEx, %function
 390              	ConfirmISR_StartEx:
 391              	.LFB2:
 118:Generated_Source\PSoC5/ConfirmISR.c ****     /* For all we know the interrupt is active. */
 392              		.loc 1 118 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL23:
 397 0000 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 15


 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 401 0002 0446     		mov	r4, r0
 120:Generated_Source\PSoC5/ConfirmISR.c **** 
 402              		.loc 1 120 0
 403 0004 FFF7FEFF 		bl	ConfirmISR_Disable
 404              	.LVL24:
 123:Generated_Source\PSoC5/ConfirmISR.c **** 
 405              		.loc 1 123 0
 406 0008 2046     		mov	r0, r4
 407 000a FFF7FEFF 		bl	ConfirmISR_SetVector
 408              	.LVL25:
 126:Generated_Source\PSoC5/ConfirmISR.c **** 
 409              		.loc 1 126 0
 410 000e 0720     		movs	r0, #7
 411 0010 FFF7FEFF 		bl	ConfirmISR_SetPriority
 412              	.LVL26:
 129:Generated_Source\PSoC5/ConfirmISR.c **** }
 413              		.loc 1 129 0
 414 0014 FFF7FEFF 		bl	ConfirmISR_Enable
 415              	.LVL27:
 416 0018 10BD     		pop	{r4, pc}
 417              		.cfi_endproc
 418              	.LFE2:
 419              		.size	ConfirmISR_StartEx, .-ConfirmISR_StartEx
 420 001a 00BF     		.section	.text.ConfirmISR_Stop,"ax",%progbits
 421              		.align	2
 422              		.global	ConfirmISR_Stop
 423              		.thumb
 424              		.thumb_func
 425              		.type	ConfirmISR_Stop, %function
 426              	ConfirmISR_Stop:
 427              	.LFB3:
 148:Generated_Source\PSoC5/ConfirmISR.c ****     /* Disable this interrupt. */
 428              		.loc 1 148 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 08B5     		push	{r3, lr}
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 3, -8
 435              		.cfi_offset 14, -4
 150:Generated_Source\PSoC5/ConfirmISR.c **** 
 436              		.loc 1 150 0
 437 0002 FFF7FEFF 		bl	ConfirmISR_Disable
 438              	.LVL28:
 153:Generated_Source\PSoC5/ConfirmISR.c **** }
 439              		.loc 1 153 0
 440 0006 0248     		ldr	r0, .L41
 441 0008 FFF7FEFF 		bl	ConfirmISR_SetVector
 442              	.LVL29:
 443 000c 08BD     		pop	{r3, pc}
 444              	.L42:
 445 000e 00BF     		.align	2
 446              	.L41:
 447 0010 00000000 		.word	IntDefaultHandler
 448              		.cfi_endproc
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 16


 449              	.LFE3:
 450              		.size	ConfirmISR_Stop, .-ConfirmISR_Stop
 451              		.section	.text.ConfirmISR_SetPending,"ax",%progbits
 452              		.align	2
 453              		.global	ConfirmISR_SetPending
 454              		.thumb
 455              		.thumb_func
 456              		.type	ConfirmISR_SetPending, %function
 457              	ConfirmISR_SetPending:
 458              	.LFB12:
 393:Generated_Source\PSoC5/ConfirmISR.c **** }
 394:Generated_Source\PSoC5/ConfirmISR.c **** 
 395:Generated_Source\PSoC5/ConfirmISR.c **** 
 396:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 397:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_SetPending
 398:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 399:Generated_Source\PSoC5/ConfirmISR.c **** *
 400:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 401:Generated_Source\PSoC5/ConfirmISR.c **** *   Causes the Interrupt to enter the pending state, a software method of
 402:Generated_Source\PSoC5/ConfirmISR.c **** *   generating the interrupt.
 403:Generated_Source\PSoC5/ConfirmISR.c **** *
 404:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:
 405:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 406:Generated_Source\PSoC5/ConfirmISR.c **** *
 407:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 408:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 409:Generated_Source\PSoC5/ConfirmISR.c **** *
 410:Generated_Source\PSoC5/ConfirmISR.c **** * Side Effects:
 411:Generated_Source\PSoC5/ConfirmISR.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 412:Generated_Source\PSoC5/ConfirmISR.c **** *   entered (depending on the priority of this interrupt and other pending 
 413:Generated_Source\PSoC5/ConfirmISR.c **** *   interrupts).
 414:Generated_Source\PSoC5/ConfirmISR.c **** *
 415:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 416:Generated_Source\PSoC5/ConfirmISR.c **** void ConfirmISR_SetPending(void)
 417:Generated_Source\PSoC5/ConfirmISR.c **** {
 459              		.loc 1 417 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 418:Generated_Source\PSoC5/ConfirmISR.c ****     *ConfirmISR_INTC_SET_PD = ConfirmISR__INTC_MASK;
 464              		.loc 1 418 0
 465 0000 0222     		movs	r2, #2
 466 0002 014B     		ldr	r3, .L44
 467 0004 1A60     		str	r2, [r3]
 468 0006 7047     		bx	lr
 469              	.L45:
 470              		.align	2
 471              	.L44:
 472 0008 00E200E0 		.word	-536813056
 473              		.cfi_endproc
 474              	.LFE12:
 475              		.size	ConfirmISR_SetPending, .-ConfirmISR_SetPending
 476              		.section	.text.ConfirmISR_ClearPending,"ax",%progbits
 477              		.align	2
 478              		.global	ConfirmISR_ClearPending
 479              		.thumb
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 17


 480              		.thumb_func
 481              		.type	ConfirmISR_ClearPending, %function
 482              	ConfirmISR_ClearPending:
 483              	.LFB13:
 419:Generated_Source\PSoC5/ConfirmISR.c **** }
 420:Generated_Source\PSoC5/ConfirmISR.c **** 
 421:Generated_Source\PSoC5/ConfirmISR.c **** 
 422:Generated_Source\PSoC5/ConfirmISR.c **** /*******************************************************************************
 423:Generated_Source\PSoC5/ConfirmISR.c **** * Function Name: ConfirmISR_ClearPending
 424:Generated_Source\PSoC5/ConfirmISR.c **** ********************************************************************************
 425:Generated_Source\PSoC5/ConfirmISR.c **** *
 426:Generated_Source\PSoC5/ConfirmISR.c **** * Summary:
 427:Generated_Source\PSoC5/ConfirmISR.c **** *   Clears a pending interrupt in the interrupt controller.
 428:Generated_Source\PSoC5/ConfirmISR.c **** *
 429:Generated_Source\PSoC5/ConfirmISR.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 430:Generated_Source\PSoC5/ConfirmISR.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 431:Generated_Source\PSoC5/ConfirmISR.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 432:Generated_Source\PSoC5/ConfirmISR.c **** *   pending state even though the interrupt itself is cleared using this API.
 433:Generated_Source\PSoC5/ConfirmISR.c **** *
 434:Generated_Source\PSoC5/ConfirmISR.c **** * Parameters:
 435:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 436:Generated_Source\PSoC5/ConfirmISR.c **** *
 437:Generated_Source\PSoC5/ConfirmISR.c **** * Return:
 438:Generated_Source\PSoC5/ConfirmISR.c **** *   None
 439:Generated_Source\PSoC5/ConfirmISR.c **** *
 440:Generated_Source\PSoC5/ConfirmISR.c **** *******************************************************************************/
 441:Generated_Source\PSoC5/ConfirmISR.c **** void ConfirmISR_ClearPending(void)
 442:Generated_Source\PSoC5/ConfirmISR.c **** {
 484              		.loc 1 442 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 443:Generated_Source\PSoC5/ConfirmISR.c ****     *ConfirmISR_INTC_CLR_PD = ConfirmISR__INTC_MASK;
 489              		.loc 1 443 0
 490 0000 0222     		movs	r2, #2
 491 0002 014B     		ldr	r3, .L47
 492 0004 1A60     		str	r2, [r3]
 493 0006 7047     		bx	lr
 494              	.L48:
 495              		.align	2
 496              	.L47:
 497 0008 80E200E0 		.word	-536812928
 498              		.cfi_endproc
 499              	.LFE13:
 500              		.size	ConfirmISR_ClearPending, .-ConfirmISR_ClearPending
 501              		.comm	readPos,1,1
 502              		.global	addr
 503              		.comm	mFlag,1,1
 504              		.comm	mPos,4,4
 505              		.comm	FPSmPos,1,1
 506              		.comm	FPSID,1,1
 507              		.comm	buttonID,1,1
 508              		.section	.rodata.str1.4,"aMS",%progbits,1
 509              		.align	2
 510              	.LC0:
 511 0000 256400   		.ascii	"%d\000"
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 18


 512 0003 00       		.space	1
 513              	.LC1:
 514 0004 63506F73 		.ascii	"cPos:\000"
 514      3A00
 515              		.bss
 516              		.type	addr, %object
 517              		.size	addr, 1
 518              	addr:
 519 0000 00       		.space	1
 520              		.text
 521              	.Letext0:
 522              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 523              		.file 3 "Generated_Source\\PSoC5\\Solenoid.h"
 524              		.file 4 "Generated_Source\\PSoC5\\MotorISR.h"
 525              		.file 5 "Generated_Source\\PSoC5/CyLib.h"
 526              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 527              		.file 7 "Generated_Source\\PSoC5\\LCD_I2C_FUNCS.h"
 528              		.section	.debug_info,"",%progbits
 529              	.Ldebug_info0:
 530 0000 8F040000 		.4byte	0x48f
 531 0004 0400     		.2byte	0x4
 532 0006 00000000 		.4byte	.Ldebug_abbrev0
 533 000a 04       		.byte	0x4
 534 000b 01       		.uleb128 0x1
 535 000c DE000000 		.4byte	.LASF48
 536 0010 0C       		.byte	0xc
 537 0011 B7010000 		.4byte	.LASF49
 538 0015 F9010000 		.4byte	.LASF50
 539 0019 00000000 		.4byte	.Ldebug_ranges0+0
 540 001d 00000000 		.4byte	0
 541 0021 00000000 		.4byte	.Ldebug_line0
 542 0025 02       		.uleb128 0x2
 543 0026 04       		.byte	0x4
 544 0027 05       		.byte	0x5
 545 0028 696E7400 		.ascii	"int\000"
 546 002c 03       		.uleb128 0x3
 547 002d 04       		.byte	0x4
 548 002e 07       		.byte	0x7
 549 002f 4D020000 		.4byte	.LASF0
 550 0033 03       		.uleb128 0x3
 551 0034 08       		.byte	0x8
 552 0035 05       		.byte	0x5
 553 0036 B7020000 		.4byte	.LASF1
 554 003a 03       		.uleb128 0x3
 555 003b 08       		.byte	0x8
 556 003c 04       		.byte	0x4
 557 003d 1E030000 		.4byte	.LASF2
 558 0041 03       		.uleb128 0x3
 559 0042 01       		.byte	0x1
 560 0043 06       		.byte	0x6
 561 0044 2A030000 		.4byte	.LASF3
 562 0048 03       		.uleb128 0x3
 563 0049 01       		.byte	0x1
 564 004a 08       		.byte	0x8
 565 004b D0000000 		.4byte	.LASF4
 566 004f 03       		.uleb128 0x3
 567 0050 02       		.byte	0x2
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 19


 568 0051 05       		.byte	0x5
 569 0052 F2020000 		.4byte	.LASF5
 570 0056 03       		.uleb128 0x3
 571 0057 02       		.byte	0x2
 572 0058 07       		.byte	0x7
 573 0059 5F000000 		.4byte	.LASF6
 574 005d 03       		.uleb128 0x3
 575 005e 04       		.byte	0x4
 576 005f 05       		.byte	0x5
 577 0060 10030000 		.4byte	.LASF7
 578 0064 03       		.uleb128 0x3
 579 0065 04       		.byte	0x4
 580 0066 07       		.byte	0x7
 581 0067 71010000 		.4byte	.LASF8
 582 006b 03       		.uleb128 0x3
 583 006c 08       		.byte	0x8
 584 006d 07       		.byte	0x7
 585 006e 62020000 		.4byte	.LASF9
 586 0072 03       		.uleb128 0x3
 587 0073 04       		.byte	0x4
 588 0074 07       		.byte	0x7
 589 0075 AE020000 		.4byte	.LASF10
 590 0079 03       		.uleb128 0x3
 591 007a 01       		.byte	0x1
 592 007b 08       		.byte	0x8
 593 007c 19030000 		.4byte	.LASF11
 594 0080 04       		.uleb128 0x4
 595 0081 04       		.byte	0x4
 596 0082 86000000 		.4byte	0x86
 597 0086 05       		.uleb128 0x5
 598 0087 06       		.uleb128 0x6
 599 0088 8B010000 		.4byte	.LASF12
 600 008c 02       		.byte	0x2
 601 008d E701     		.2byte	0x1e7
 602 008f 48000000 		.4byte	0x48
 603 0093 06       		.uleb128 0x6
 604 0094 31020000 		.4byte	.LASF13
 605 0098 02       		.byte	0x2
 606 0099 E901     		.2byte	0x1e9
 607 009b 64000000 		.4byte	0x64
 608 009f 03       		.uleb128 0x3
 609 00a0 04       		.byte	0x4
 610 00a1 04       		.byte	0x4
 611 00a2 A5000000 		.4byte	.LASF14
 612 00a6 03       		.uleb128 0x3
 613 00a7 08       		.byte	0x8
 614 00a8 04       		.byte	0x4
 615 00a9 DB010000 		.4byte	.LASF15
 616 00ad 06       		.uleb128 0x6
 617 00ae 6C010000 		.4byte	.LASF16
 618 00b2 02       		.byte	0x2
 619 00b3 9102     		.2byte	0x291
 620 00b5 B9000000 		.4byte	0xb9
 621 00b9 07       		.uleb128 0x7
 622 00ba 87000000 		.4byte	0x87
 623 00be 06       		.uleb128 0x6
 624 00bf 10000000 		.4byte	.LASF17
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 20


 625 00c3 02       		.byte	0x2
 626 00c4 9302     		.2byte	0x293
 627 00c6 CA000000 		.4byte	0xca
 628 00ca 07       		.uleb128 0x7
 629 00cb 93000000 		.4byte	0x93
 630 00cf 06       		.uleb128 0x6
 631 00d0 8E020000 		.4byte	.LASF18
 632 00d4 02       		.byte	0x2
 633 00d5 A302     		.2byte	0x2a3
 634 00d7 80000000 		.4byte	0x80
 635 00db 08       		.uleb128 0x8
 636 00dc 38020000 		.4byte	.LASF19
 637 00e0 01       		.byte	0x1
 638 00e1 AD       		.byte	0xad
 639 00e2 00000000 		.4byte	.LFB4
 640 00e6 BC000000 		.4byte	.LFE4-.LFB4
 641 00ea 01       		.uleb128 0x1
 642 00eb 9C       		.byte	0x9c
 643 00ec CD010000 		.4byte	0x1cd
 644 00f0 09       		.uleb128 0x9
 645 00f1 61727200 		.ascii	"arr\000"
 646 00f5 01       		.byte	0x1
 647 00f6 B5       		.byte	0xb5
 648 00f7 CD010000 		.4byte	0x1cd
 649 00fb 02       		.uleb128 0x2
 650 00fc 91       		.byte	0x91
 651 00fd 74       		.sleb128 -12
 652 00fe 0A       		.uleb128 0xa
 653 00ff 1A000000 		.4byte	.LVL0
 654 0103 45040000 		.4byte	0x445
 655 0107 11010000 		.4byte	0x111
 656 010b 0B       		.uleb128 0xb
 657 010c 01       		.uleb128 0x1
 658 010d 50       		.byte	0x50
 659 010e 01       		.uleb128 0x1
 660 010f 31       		.byte	0x31
 661 0110 00       		.byte	0
 662 0111 0C       		.uleb128 0xc
 663 0112 2E000000 		.4byte	.LVL1
 664 0116 50040000 		.4byte	0x450
 665 011a 0A       		.uleb128 0xa
 666 011b 34000000 		.4byte	.LVL2
 667 011f 5B040000 		.4byte	0x45b
 668 0123 2E010000 		.4byte	0x12e
 669 0127 0B       		.uleb128 0xb
 670 0128 01       		.uleb128 0x1
 671 0129 50       		.byte	0x50
 672 012a 02       		.uleb128 0x2
 673 012b 08       		.byte	0x8
 674 012c EB       		.byte	0xeb
 675 012d 00       		.byte	0
 676 012e 0C       		.uleb128 0xc
 677 012f 38000000 		.4byte	.LVL3
 678 0133 66040000 		.4byte	0x466
 679 0137 0C       		.uleb128 0xc
 680 0138 5A000000 		.4byte	.LVL4
 681 013c 50040000 		.4byte	0x450
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 21


 682 0140 0A       		.uleb128 0xa
 683 0141 60000000 		.4byte	.LVL5
 684 0145 5B040000 		.4byte	0x45b
 685 0149 54010000 		.4byte	0x154
 686 014d 0B       		.uleb128 0xb
 687 014e 01       		.uleb128 0x1
 688 014f 50       		.byte	0x50
 689 0150 02       		.uleb128 0x2
 690 0151 08       		.byte	0x8
 691 0152 EB       		.byte	0xeb
 692 0153 00       		.byte	0
 693 0154 0C       		.uleb128 0xc
 694 0155 64000000 		.4byte	.LVL6
 695 0159 66040000 		.4byte	0x466
 696 015d 0A       		.uleb128 0xa
 697 015e 78000000 		.4byte	.LVL7
 698 0162 45040000 		.4byte	0x445
 699 0166 70010000 		.4byte	0x170
 700 016a 0B       		.uleb128 0xb
 701 016b 01       		.uleb128 0x1
 702 016c 50       		.byte	0x50
 703 016d 01       		.uleb128 0x1
 704 016e 30       		.byte	0x30
 705 016f 00       		.byte	0
 706 0170 0A       		.uleb128 0xa
 707 0171 84000000 		.4byte	.LVL8
 708 0175 71040000 		.4byte	0x471
 709 0179 8D010000 		.4byte	0x18d
 710 017d 0B       		.uleb128 0xb
 711 017e 01       		.uleb128 0x1
 712 017f 50       		.byte	0x50
 713 0180 02       		.uleb128 0x2
 714 0181 91       		.byte	0x91
 715 0182 74       		.sleb128 -12
 716 0183 0B       		.uleb128 0xb
 717 0184 01       		.uleb128 0x1
 718 0185 51       		.byte	0x51
 719 0186 05       		.uleb128 0x5
 720 0187 03       		.byte	0x3
 721 0188 00000000 		.4byte	.LC0
 722 018c 00       		.byte	0
 723 018d 0A       		.uleb128 0xa
 724 018e 8C000000 		.4byte	.LVL9
 725 0192 7C040000 		.4byte	0x47c
 726 0196 A5010000 		.4byte	0x1a5
 727 019a 0B       		.uleb128 0xb
 728 019b 01       		.uleb128 0x1
 729 019c 50       		.byte	0x50
 730 019d 01       		.uleb128 0x1
 731 019e 30       		.byte	0x30
 732 019f 0B       		.uleb128 0xb
 733 01a0 01       		.uleb128 0x1
 734 01a1 51       		.byte	0x51
 735 01a2 01       		.uleb128 0x1
 736 01a3 31       		.byte	0x31
 737 01a4 00       		.byte	0
 738 01a5 0A       		.uleb128 0xa
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 22


 739 01a6 92000000 		.4byte	.LVL10
 740 01aa 87040000 		.4byte	0x487
 741 01ae BC010000 		.4byte	0x1bc
 742 01b2 0B       		.uleb128 0xb
 743 01b3 01       		.uleb128 0x1
 744 01b4 50       		.byte	0x50
 745 01b5 05       		.uleb128 0x5
 746 01b6 03       		.byte	0x3
 747 01b7 04000000 		.4byte	.LC1
 748 01bb 00       		.byte	0
 749 01bc 0D       		.uleb128 0xd
 750 01bd 98000000 		.4byte	.LVL11
 751 01c1 87040000 		.4byte	0x487
 752 01c5 0B       		.uleb128 0xb
 753 01c6 01       		.uleb128 0x1
 754 01c7 50       		.byte	0x50
 755 01c8 02       		.uleb128 0x2
 756 01c9 91       		.byte	0x91
 757 01ca 74       		.sleb128 -12
 758 01cb 00       		.byte	0
 759 01cc 00       		.byte	0
 760 01cd 0E       		.uleb128 0xe
 761 01ce 79000000 		.4byte	0x79
 762 01d2 DD010000 		.4byte	0x1dd
 763 01d6 0F       		.uleb128 0xf
 764 01d7 72000000 		.4byte	0x72
 765 01db 00       		.byte	0
 766 01dc 00       		.byte	0
 767 01dd 08       		.uleb128 0x8
 768 01de 79020000 		.4byte	.LASF20
 769 01e2 01       		.byte	0x1
 770 01e3 F0       		.byte	0xf0
 771 01e4 00000000 		.4byte	.LFB5
 772 01e8 0C000000 		.4byte	.LFE5-.LFB5
 773 01ec 01       		.uleb128 0x1
 774 01ed 9C       		.byte	0x9c
 775 01ee 0D020000 		.4byte	0x20d
 776 01f2 10       		.uleb128 0x10
 777 01f3 5A020000 		.4byte	.LASF23
 778 01f7 01       		.byte	0x1
 779 01f8 F0       		.byte	0xf0
 780 01f9 CF000000 		.4byte	0xcf
 781 01fd 01       		.uleb128 0x1
 782 01fe 50       		.byte	0x50
 783 01ff 11       		.uleb128 0x11
 784 0200 D7020000 		.4byte	.LASF21
 785 0204 01       		.byte	0x1
 786 0205 F2       		.byte	0xf2
 787 0206 0D020000 		.4byte	0x20d
 788 020a 01       		.uleb128 0x1
 789 020b 53       		.byte	0x53
 790 020c 00       		.byte	0
 791 020d 04       		.uleb128 0x4
 792 020e 04       		.byte	0x4
 793 020f CF000000 		.4byte	0xcf
 794 0213 12       		.uleb128 0x12
 795 0214 72000000 		.4byte	.LASF25
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 23


 796 0218 01       		.byte	0x1
 797 0219 0801     		.2byte	0x108
 798 021b CF000000 		.4byte	0xcf
 799 021f 00000000 		.4byte	.LFB6
 800 0223 0C000000 		.4byte	.LFE6-.LFB6
 801 0227 01       		.uleb128 0x1
 802 0228 9C       		.byte	0x9c
 803 0229 3C020000 		.4byte	0x23c
 804 022d 13       		.uleb128 0x13
 805 022e D7020000 		.4byte	.LASF21
 806 0232 01       		.byte	0x1
 807 0233 0A01     		.2byte	0x10a
 808 0235 0D020000 		.4byte	0x20d
 809 0239 01       		.uleb128 0x1
 810 023a 53       		.byte	0x53
 811 023b 00       		.byte	0
 812 023c 14       		.uleb128 0x14
 813 023d B9000000 		.4byte	.LASF22
 814 0241 01       		.byte	0x1
 815 0242 2A01     		.2byte	0x12a
 816 0244 00000000 		.4byte	.LFB7
 817 0248 10000000 		.4byte	.LFE7-.LFB7
 818 024c 01       		.uleb128 0x1
 819 024d 9C       		.byte	0x9c
 820 024e 63020000 		.4byte	0x263
 821 0252 15       		.uleb128 0x15
 822 0253 AE010000 		.4byte	.LASF24
 823 0257 01       		.byte	0x1
 824 0258 2A01     		.2byte	0x12a
 825 025a 87000000 		.4byte	0x87
 826 025e 00000000 		.4byte	.LLST0
 827 0262 00       		.byte	0
 828 0263 12       		.uleb128 0x12
 829 0264 E2010000 		.4byte	.LASF26
 830 0268 01       		.byte	0x1
 831 0269 4001     		.2byte	0x140
 832 026b 87000000 		.4byte	0x87
 833 026f 00000000 		.4byte	.LFB8
 834 0273 0C000000 		.4byte	.LFE8-.LFB8
 835 0277 01       		.uleb128 0x1
 836 0278 9C       		.byte	0x9c
 837 0279 8E020000 		.4byte	0x28e
 838 027d 16       		.uleb128 0x16
 839 027e AE010000 		.4byte	.LASF24
 840 0282 01       		.byte	0x1
 841 0283 4201     		.2byte	0x142
 842 0285 87000000 		.4byte	0x87
 843 0289 21000000 		.4byte	.LLST1
 844 028d 00       		.byte	0
 845 028e 17       		.uleb128 0x17
 846 028f C5020000 		.4byte	.LASF27
 847 0293 01       		.byte	0x1
 848 0294 5B01     		.2byte	0x15b
 849 0296 00000000 		.4byte	.LFB9
 850 029a 0C000000 		.4byte	.LFE9-.LFB9
 851 029e 01       		.uleb128 0x1
 852 029f 9C       		.byte	0x9c
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 24


 853 02a0 18       		.uleb128 0x18
 854 02a1 FC020000 		.4byte	.LASF51
 855 02a5 01       		.byte	0x1
 856 02a6 7001     		.2byte	0x170
 857 02a8 87000000 		.4byte	0x87
 858 02ac 00000000 		.4byte	.LFB10
 859 02b0 18000000 		.4byte	.LFE10-.LFB10
 860 02b4 01       		.uleb128 0x1
 861 02b5 9C       		.byte	0x9c
 862 02b6 17       		.uleb128 0x17
 863 02b7 9B020000 		.4byte	.LASF28
 864 02bb 01       		.byte	0x1
 865 02bc 8501     		.2byte	0x185
 866 02be 00000000 		.4byte	.LFB11
 867 02c2 0C000000 		.4byte	.LFE11-.LFB11
 868 02c6 01       		.uleb128 0x1
 869 02c7 9C       		.byte	0x9c
 870 02c8 08       		.uleb128 0x8
 871 02c9 87000000 		.4byte	.LASF29
 872 02cd 01       		.byte	0x1
 873 02ce 4A       		.byte	0x4a
 874 02cf 00000000 		.4byte	.LFB1
 875 02d3 1C000000 		.4byte	.LFE1-.LFB1
 876 02d7 01       		.uleb128 0x1
 877 02d8 9C       		.byte	0x9c
 878 02d9 1A030000 		.4byte	0x31a
 879 02dd 0C       		.uleb128 0xc
 880 02de 06000000 		.4byte	.LVL19
 881 02e2 B6020000 		.4byte	0x2b6
 882 02e6 0A       		.uleb128 0xa
 883 02e7 0C000000 		.4byte	.LVL20
 884 02eb DD010000 		.4byte	0x1dd
 885 02ef FD020000 		.4byte	0x2fd
 886 02f3 0B       		.uleb128 0xb
 887 02f4 01       		.uleb128 0x1
 888 02f5 50       		.byte	0x50
 889 02f6 05       		.uleb128 0x5
 890 02f7 03       		.byte	0x3
 891 02f8 00000000 		.4byte	ConfirmISR_Interrupt
 892 02fc 00       		.byte	0
 893 02fd 0A       		.uleb128 0xa
 894 02fe 12000000 		.4byte	.LVL21
 895 0302 3C020000 		.4byte	0x23c
 896 0306 10030000 		.4byte	0x310
 897 030a 0B       		.uleb128 0xb
 898 030b 01       		.uleb128 0x1
 899 030c 50       		.byte	0x50
 900 030d 01       		.uleb128 0x1
 901 030e 37       		.byte	0x37
 902 030f 00       		.byte	0
 903 0310 0C       		.uleb128 0xc
 904 0311 16000000 		.4byte	.LVL22
 905 0315 8E020000 		.4byte	0x28e
 906 0319 00       		.byte	0
 907 031a 08       		.uleb128 0x8
 908 031b 1E020000 		.4byte	.LASF30
 909 031f 01       		.byte	0x1
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 25


 910 0320 75       		.byte	0x75
 911 0321 00000000 		.4byte	.LFB2
 912 0325 1A000000 		.4byte	.LFE2-.LFB2
 913 0329 01       		.uleb128 0x1
 914 032a 9C       		.byte	0x9c
 915 032b 78030000 		.4byte	0x378
 916 032f 19       		.uleb128 0x19
 917 0330 5A020000 		.4byte	.LASF23
 918 0334 01       		.byte	0x1
 919 0335 75       		.byte	0x75
 920 0336 CF000000 		.4byte	0xcf
 921 033a 38000000 		.4byte	.LLST2
 922 033e 0C       		.uleb128 0xc
 923 033f 08000000 		.4byte	.LVL24
 924 0343 B6020000 		.4byte	0x2b6
 925 0347 0A       		.uleb128 0xa
 926 0348 0E000000 		.4byte	.LVL25
 927 034c DD010000 		.4byte	0x1dd
 928 0350 5B030000 		.4byte	0x35b
 929 0354 0B       		.uleb128 0xb
 930 0355 01       		.uleb128 0x1
 931 0356 50       		.byte	0x50
 932 0357 02       		.uleb128 0x2
 933 0358 74       		.byte	0x74
 934 0359 00       		.sleb128 0
 935 035a 00       		.byte	0
 936 035b 0A       		.uleb128 0xa
 937 035c 14000000 		.4byte	.LVL26
 938 0360 3C020000 		.4byte	0x23c
 939 0364 6E030000 		.4byte	0x36e
 940 0368 0B       		.uleb128 0xb
 941 0369 01       		.uleb128 0x1
 942 036a 50       		.byte	0x50
 943 036b 01       		.uleb128 0x1
 944 036c 37       		.byte	0x37
 945 036d 00       		.byte	0
 946 036e 0C       		.uleb128 0xc
 947 036f 18000000 		.4byte	.LVL27
 948 0373 8E020000 		.4byte	0x28e
 949 0377 00       		.byte	0
 950 0378 08       		.uleb128 0x8
 951 0379 27000000 		.4byte	.LASF31
 952 037d 01       		.byte	0x1
 953 037e 93       		.byte	0x93
 954 037f 00000000 		.4byte	.LFB3
 955 0383 14000000 		.4byte	.LFE3-.LFB3
 956 0387 01       		.uleb128 0x1
 957 0388 9C       		.byte	0x9c
 958 0389 A0030000 		.4byte	0x3a0
 959 038d 0C       		.uleb128 0xc
 960 038e 06000000 		.4byte	.LVL28
 961 0392 B6020000 		.4byte	0x2b6
 962 0396 0C       		.uleb128 0xc
 963 0397 0C000000 		.4byte	.LVL29
 964 039b DD010000 		.4byte	0x1dd
 965 039f 00       		.byte	0
 966 03a0 17       		.uleb128 0x17
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 26


 967 03a1 37000000 		.4byte	.LASF32
 968 03a5 01       		.byte	0x1
 969 03a6 A001     		.2byte	0x1a0
 970 03a8 00000000 		.4byte	.LFB12
 971 03ac 0C000000 		.4byte	.LFE12-.LFB12
 972 03b0 01       		.uleb128 0x1
 973 03b1 9C       		.byte	0x9c
 974 03b2 17       		.uleb128 0x17
 975 03b3 96010000 		.4byte	.LASF33
 976 03b7 01       		.byte	0x1
 977 03b8 B901     		.2byte	0x1b9
 978 03ba 00000000 		.4byte	.LFB13
 979 03be 0C000000 		.4byte	.LFE13-.LFB13
 980 03c2 01       		.uleb128 0x1
 981 03c3 9C       		.byte	0x9c
 982 03c4 1A       		.uleb128 0x1a
 983 03c5 46030000 		.4byte	.LASF34
 984 03c9 01       		.byte	0x1
 985 03ca 23       		.byte	0x23
 986 03cb B9000000 		.4byte	0xb9
 987 03cf 05       		.uleb128 0x5
 988 03d0 03       		.byte	0x3
 989 03d1 00000000 		.4byte	buttonID
 990 03d5 1A       		.uleb128 0x1a
 991 03d6 EC020000 		.4byte	.LASF35
 992 03da 01       		.byte	0x1
 993 03db 25       		.byte	0x25
 994 03dc B9000000 		.4byte	0xb9
 995 03e0 05       		.uleb128 0x5
 996 03e1 03       		.byte	0x3
 997 03e2 00000000 		.4byte	FPSID
 998 03e6 1A       		.uleb128 0x1a
 999 03e7 83010000 		.4byte	.LASF36
 1000 03eb 01       		.byte	0x1
 1001 03ec 26       		.byte	0x26
 1002 03ed B9000000 		.4byte	0xb9
 1003 03f1 05       		.uleb128 0x5
 1004 03f2 03       		.byte	0x3
 1005 03f3 00000000 		.4byte	FPSmPos
 1006 03f7 1A       		.uleb128 0x1a
 1007 03f8 91010000 		.4byte	.LASF37
 1008 03fc 01       		.byte	0x1
 1009 03fd 27       		.byte	0x27
 1010 03fe 08040000 		.4byte	0x408
 1011 0402 05       		.uleb128 0x5
 1012 0403 03       		.byte	0x3
 1013 0404 00000000 		.4byte	mPos
 1014 0408 07       		.uleb128 0x7
 1015 0409 2C000000 		.4byte	0x2c
 1016 040d 1A       		.uleb128 0x1a
 1017 040e E6020000 		.4byte	.LASF38
 1018 0412 01       		.byte	0x1
 1019 0413 28       		.byte	0x28
 1020 0414 1E040000 		.4byte	0x41e
 1021 0418 05       		.uleb128 0x5
 1022 0419 03       		.byte	0x3
 1023 041a 00000000 		.4byte	mFlag
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 27


 1024 041e 07       		.uleb128 0x7
 1025 041f 79000000 		.4byte	0x79
 1026 0423 1A       		.uleb128 0x1a
 1027 0424 A0000000 		.4byte	.LASF39
 1028 0428 01       		.byte	0x1
 1029 0429 29       		.byte	0x29
 1030 042a 87000000 		.4byte	0x87
 1031 042e 05       		.uleb128 0x5
 1032 042f 03       		.byte	0x3
 1033 0430 00000000 		.4byte	addr
 1034 0434 1A       		.uleb128 0x1a
 1035 0435 98000000 		.4byte	.LASF40
 1036 0439 01       		.byte	0x1
 1037 043a 2A       		.byte	0x2a
 1038 043b 87000000 		.4byte	0x87
 1039 043f 05       		.uleb128 0x5
 1040 0440 03       		.byte	0x3
 1041 0441 00000000 		.4byte	readPos
 1042 0445 1B       		.uleb128 0x1b
 1043 0446 4F030000 		.4byte	.LASF41
 1044 044a 4F030000 		.4byte	.LASF41
 1045 044e 03       		.byte	0x3
 1046 044f 26       		.byte	0x26
 1047 0450 1B       		.uleb128 0x1b
 1048 0451 00000000 		.4byte	.LASF42
 1049 0455 00000000 		.4byte	.LASF42
 1050 0459 04       		.byte	0x4
 1051 045a 23       		.byte	0x23
 1052 045b 1B       		.uleb128 0x1b
 1053 045c 3E030000 		.4byte	.LASF43
 1054 0460 3E030000 		.4byte	.LASF43
 1055 0464 05       		.byte	0x5
 1056 0465 76       		.byte	0x76
 1057 0466 1B       		.uleb128 0x1b
 1058 0467 16000000 		.4byte	.LASF44
 1059 046b 16000000 		.4byte	.LASF44
 1060 046f 04       		.byte	0x4
 1061 0470 25       		.byte	0x25
 1062 0471 1B       		.uleb128 0x1b
 1063 0472 36030000 		.4byte	.LASF45
 1064 0476 36030000 		.4byte	.LASF45
 1065 047a 06       		.byte	0x6
 1066 047b E7       		.byte	0xe7
 1067 047c 1B       		.uleb128 0x1b
 1068 047d 4D000000 		.4byte	.LASF46
 1069 0481 4D000000 		.4byte	.LASF46
 1070 0485 07       		.byte	0x7
 1071 0486 70       		.byte	0x70
 1072 0487 1B       		.uleb128 0x1b
 1073 0488 AB000000 		.4byte	.LASF47
 1074 048c AB000000 		.4byte	.LASF47
 1075 0490 07       		.byte	0x7
 1076 0491 74       		.byte	0x74
 1077 0492 00       		.byte	0
 1078              		.section	.debug_abbrev,"",%progbits
 1079              	.Ldebug_abbrev0:
 1080 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 28


 1081 0001 11       		.uleb128 0x11
 1082 0002 01       		.byte	0x1
 1083 0003 25       		.uleb128 0x25
 1084 0004 0E       		.uleb128 0xe
 1085 0005 13       		.uleb128 0x13
 1086 0006 0B       		.uleb128 0xb
 1087 0007 03       		.uleb128 0x3
 1088 0008 0E       		.uleb128 0xe
 1089 0009 1B       		.uleb128 0x1b
 1090 000a 0E       		.uleb128 0xe
 1091 000b 55       		.uleb128 0x55
 1092 000c 17       		.uleb128 0x17
 1093 000d 11       		.uleb128 0x11
 1094 000e 01       		.uleb128 0x1
 1095 000f 10       		.uleb128 0x10
 1096 0010 17       		.uleb128 0x17
 1097 0011 00       		.byte	0
 1098 0012 00       		.byte	0
 1099 0013 02       		.uleb128 0x2
 1100 0014 24       		.uleb128 0x24
 1101 0015 00       		.byte	0
 1102 0016 0B       		.uleb128 0xb
 1103 0017 0B       		.uleb128 0xb
 1104 0018 3E       		.uleb128 0x3e
 1105 0019 0B       		.uleb128 0xb
 1106 001a 03       		.uleb128 0x3
 1107 001b 08       		.uleb128 0x8
 1108 001c 00       		.byte	0
 1109 001d 00       		.byte	0
 1110 001e 03       		.uleb128 0x3
 1111 001f 24       		.uleb128 0x24
 1112 0020 00       		.byte	0
 1113 0021 0B       		.uleb128 0xb
 1114 0022 0B       		.uleb128 0xb
 1115 0023 3E       		.uleb128 0x3e
 1116 0024 0B       		.uleb128 0xb
 1117 0025 03       		.uleb128 0x3
 1118 0026 0E       		.uleb128 0xe
 1119 0027 00       		.byte	0
 1120 0028 00       		.byte	0
 1121 0029 04       		.uleb128 0x4
 1122 002a 0F       		.uleb128 0xf
 1123 002b 00       		.byte	0
 1124 002c 0B       		.uleb128 0xb
 1125 002d 0B       		.uleb128 0xb
 1126 002e 49       		.uleb128 0x49
 1127 002f 13       		.uleb128 0x13
 1128 0030 00       		.byte	0
 1129 0031 00       		.byte	0
 1130 0032 05       		.uleb128 0x5
 1131 0033 15       		.uleb128 0x15
 1132 0034 00       		.byte	0
 1133 0035 27       		.uleb128 0x27
 1134 0036 19       		.uleb128 0x19
 1135 0037 00       		.byte	0
 1136 0038 00       		.byte	0
 1137 0039 06       		.uleb128 0x6
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 29


 1138 003a 16       		.uleb128 0x16
 1139 003b 00       		.byte	0
 1140 003c 03       		.uleb128 0x3
 1141 003d 0E       		.uleb128 0xe
 1142 003e 3A       		.uleb128 0x3a
 1143 003f 0B       		.uleb128 0xb
 1144 0040 3B       		.uleb128 0x3b
 1145 0041 05       		.uleb128 0x5
 1146 0042 49       		.uleb128 0x49
 1147 0043 13       		.uleb128 0x13
 1148 0044 00       		.byte	0
 1149 0045 00       		.byte	0
 1150 0046 07       		.uleb128 0x7
 1151 0047 35       		.uleb128 0x35
 1152 0048 00       		.byte	0
 1153 0049 49       		.uleb128 0x49
 1154 004a 13       		.uleb128 0x13
 1155 004b 00       		.byte	0
 1156 004c 00       		.byte	0
 1157 004d 08       		.uleb128 0x8
 1158 004e 2E       		.uleb128 0x2e
 1159 004f 01       		.byte	0x1
 1160 0050 3F       		.uleb128 0x3f
 1161 0051 19       		.uleb128 0x19
 1162 0052 03       		.uleb128 0x3
 1163 0053 0E       		.uleb128 0xe
 1164 0054 3A       		.uleb128 0x3a
 1165 0055 0B       		.uleb128 0xb
 1166 0056 3B       		.uleb128 0x3b
 1167 0057 0B       		.uleb128 0xb
 1168 0058 27       		.uleb128 0x27
 1169 0059 19       		.uleb128 0x19
 1170 005a 11       		.uleb128 0x11
 1171 005b 01       		.uleb128 0x1
 1172 005c 12       		.uleb128 0x12
 1173 005d 06       		.uleb128 0x6
 1174 005e 40       		.uleb128 0x40
 1175 005f 18       		.uleb128 0x18
 1176 0060 9742     		.uleb128 0x2117
 1177 0062 19       		.uleb128 0x19
 1178 0063 01       		.uleb128 0x1
 1179 0064 13       		.uleb128 0x13
 1180 0065 00       		.byte	0
 1181 0066 00       		.byte	0
 1182 0067 09       		.uleb128 0x9
 1183 0068 34       		.uleb128 0x34
 1184 0069 00       		.byte	0
 1185 006a 03       		.uleb128 0x3
 1186 006b 08       		.uleb128 0x8
 1187 006c 3A       		.uleb128 0x3a
 1188 006d 0B       		.uleb128 0xb
 1189 006e 3B       		.uleb128 0x3b
 1190 006f 0B       		.uleb128 0xb
 1191 0070 49       		.uleb128 0x49
 1192 0071 13       		.uleb128 0x13
 1193 0072 02       		.uleb128 0x2
 1194 0073 18       		.uleb128 0x18
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 30


 1195 0074 00       		.byte	0
 1196 0075 00       		.byte	0
 1197 0076 0A       		.uleb128 0xa
 1198 0077 898201   		.uleb128 0x4109
 1199 007a 01       		.byte	0x1
 1200 007b 11       		.uleb128 0x11
 1201 007c 01       		.uleb128 0x1
 1202 007d 31       		.uleb128 0x31
 1203 007e 13       		.uleb128 0x13
 1204 007f 01       		.uleb128 0x1
 1205 0080 13       		.uleb128 0x13
 1206 0081 00       		.byte	0
 1207 0082 00       		.byte	0
 1208 0083 0B       		.uleb128 0xb
 1209 0084 8A8201   		.uleb128 0x410a
 1210 0087 00       		.byte	0
 1211 0088 02       		.uleb128 0x2
 1212 0089 18       		.uleb128 0x18
 1213 008a 9142     		.uleb128 0x2111
 1214 008c 18       		.uleb128 0x18
 1215 008d 00       		.byte	0
 1216 008e 00       		.byte	0
 1217 008f 0C       		.uleb128 0xc
 1218 0090 898201   		.uleb128 0x4109
 1219 0093 00       		.byte	0
 1220 0094 11       		.uleb128 0x11
 1221 0095 01       		.uleb128 0x1
 1222 0096 31       		.uleb128 0x31
 1223 0097 13       		.uleb128 0x13
 1224 0098 00       		.byte	0
 1225 0099 00       		.byte	0
 1226 009a 0D       		.uleb128 0xd
 1227 009b 898201   		.uleb128 0x4109
 1228 009e 01       		.byte	0x1
 1229 009f 11       		.uleb128 0x11
 1230 00a0 01       		.uleb128 0x1
 1231 00a1 31       		.uleb128 0x31
 1232 00a2 13       		.uleb128 0x13
 1233 00a3 00       		.byte	0
 1234 00a4 00       		.byte	0
 1235 00a5 0E       		.uleb128 0xe
 1236 00a6 01       		.uleb128 0x1
 1237 00a7 01       		.byte	0x1
 1238 00a8 49       		.uleb128 0x49
 1239 00a9 13       		.uleb128 0x13
 1240 00aa 01       		.uleb128 0x1
 1241 00ab 13       		.uleb128 0x13
 1242 00ac 00       		.byte	0
 1243 00ad 00       		.byte	0
 1244 00ae 0F       		.uleb128 0xf
 1245 00af 21       		.uleb128 0x21
 1246 00b0 00       		.byte	0
 1247 00b1 49       		.uleb128 0x49
 1248 00b2 13       		.uleb128 0x13
 1249 00b3 2F       		.uleb128 0x2f
 1250 00b4 0B       		.uleb128 0xb
 1251 00b5 00       		.byte	0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 31


 1252 00b6 00       		.byte	0
 1253 00b7 10       		.uleb128 0x10
 1254 00b8 05       		.uleb128 0x5
 1255 00b9 00       		.byte	0
 1256 00ba 03       		.uleb128 0x3
 1257 00bb 0E       		.uleb128 0xe
 1258 00bc 3A       		.uleb128 0x3a
 1259 00bd 0B       		.uleb128 0xb
 1260 00be 3B       		.uleb128 0x3b
 1261 00bf 0B       		.uleb128 0xb
 1262 00c0 49       		.uleb128 0x49
 1263 00c1 13       		.uleb128 0x13
 1264 00c2 02       		.uleb128 0x2
 1265 00c3 18       		.uleb128 0x18
 1266 00c4 00       		.byte	0
 1267 00c5 00       		.byte	0
 1268 00c6 11       		.uleb128 0x11
 1269 00c7 34       		.uleb128 0x34
 1270 00c8 00       		.byte	0
 1271 00c9 03       		.uleb128 0x3
 1272 00ca 0E       		.uleb128 0xe
 1273 00cb 3A       		.uleb128 0x3a
 1274 00cc 0B       		.uleb128 0xb
 1275 00cd 3B       		.uleb128 0x3b
 1276 00ce 0B       		.uleb128 0xb
 1277 00cf 49       		.uleb128 0x49
 1278 00d0 13       		.uleb128 0x13
 1279 00d1 02       		.uleb128 0x2
 1280 00d2 18       		.uleb128 0x18
 1281 00d3 00       		.byte	0
 1282 00d4 00       		.byte	0
 1283 00d5 12       		.uleb128 0x12
 1284 00d6 2E       		.uleb128 0x2e
 1285 00d7 01       		.byte	0x1
 1286 00d8 3F       		.uleb128 0x3f
 1287 00d9 19       		.uleb128 0x19
 1288 00da 03       		.uleb128 0x3
 1289 00db 0E       		.uleb128 0xe
 1290 00dc 3A       		.uleb128 0x3a
 1291 00dd 0B       		.uleb128 0xb
 1292 00de 3B       		.uleb128 0x3b
 1293 00df 05       		.uleb128 0x5
 1294 00e0 27       		.uleb128 0x27
 1295 00e1 19       		.uleb128 0x19
 1296 00e2 49       		.uleb128 0x49
 1297 00e3 13       		.uleb128 0x13
 1298 00e4 11       		.uleb128 0x11
 1299 00e5 01       		.uleb128 0x1
 1300 00e6 12       		.uleb128 0x12
 1301 00e7 06       		.uleb128 0x6
 1302 00e8 40       		.uleb128 0x40
 1303 00e9 18       		.uleb128 0x18
 1304 00ea 9742     		.uleb128 0x2117
 1305 00ec 19       		.uleb128 0x19
 1306 00ed 01       		.uleb128 0x1
 1307 00ee 13       		.uleb128 0x13
 1308 00ef 00       		.byte	0
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 32


 1309 00f0 00       		.byte	0
 1310 00f1 13       		.uleb128 0x13
 1311 00f2 34       		.uleb128 0x34
 1312 00f3 00       		.byte	0
 1313 00f4 03       		.uleb128 0x3
 1314 00f5 0E       		.uleb128 0xe
 1315 00f6 3A       		.uleb128 0x3a
 1316 00f7 0B       		.uleb128 0xb
 1317 00f8 3B       		.uleb128 0x3b
 1318 00f9 05       		.uleb128 0x5
 1319 00fa 49       		.uleb128 0x49
 1320 00fb 13       		.uleb128 0x13
 1321 00fc 02       		.uleb128 0x2
 1322 00fd 18       		.uleb128 0x18
 1323 00fe 00       		.byte	0
 1324 00ff 00       		.byte	0
 1325 0100 14       		.uleb128 0x14
 1326 0101 2E       		.uleb128 0x2e
 1327 0102 01       		.byte	0x1
 1328 0103 3F       		.uleb128 0x3f
 1329 0104 19       		.uleb128 0x19
 1330 0105 03       		.uleb128 0x3
 1331 0106 0E       		.uleb128 0xe
 1332 0107 3A       		.uleb128 0x3a
 1333 0108 0B       		.uleb128 0xb
 1334 0109 3B       		.uleb128 0x3b
 1335 010a 05       		.uleb128 0x5
 1336 010b 27       		.uleb128 0x27
 1337 010c 19       		.uleb128 0x19
 1338 010d 11       		.uleb128 0x11
 1339 010e 01       		.uleb128 0x1
 1340 010f 12       		.uleb128 0x12
 1341 0110 06       		.uleb128 0x6
 1342 0111 40       		.uleb128 0x40
 1343 0112 18       		.uleb128 0x18
 1344 0113 9742     		.uleb128 0x2117
 1345 0115 19       		.uleb128 0x19
 1346 0116 01       		.uleb128 0x1
 1347 0117 13       		.uleb128 0x13
 1348 0118 00       		.byte	0
 1349 0119 00       		.byte	0
 1350 011a 15       		.uleb128 0x15
 1351 011b 05       		.uleb128 0x5
 1352 011c 00       		.byte	0
 1353 011d 03       		.uleb128 0x3
 1354 011e 0E       		.uleb128 0xe
 1355 011f 3A       		.uleb128 0x3a
 1356 0120 0B       		.uleb128 0xb
 1357 0121 3B       		.uleb128 0x3b
 1358 0122 05       		.uleb128 0x5
 1359 0123 49       		.uleb128 0x49
 1360 0124 13       		.uleb128 0x13
 1361 0125 02       		.uleb128 0x2
 1362 0126 17       		.uleb128 0x17
 1363 0127 00       		.byte	0
 1364 0128 00       		.byte	0
 1365 0129 16       		.uleb128 0x16
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 33


 1366 012a 34       		.uleb128 0x34
 1367 012b 00       		.byte	0
 1368 012c 03       		.uleb128 0x3
 1369 012d 0E       		.uleb128 0xe
 1370 012e 3A       		.uleb128 0x3a
 1371 012f 0B       		.uleb128 0xb
 1372 0130 3B       		.uleb128 0x3b
 1373 0131 05       		.uleb128 0x5
 1374 0132 49       		.uleb128 0x49
 1375 0133 13       		.uleb128 0x13
 1376 0134 02       		.uleb128 0x2
 1377 0135 17       		.uleb128 0x17
 1378 0136 00       		.byte	0
 1379 0137 00       		.byte	0
 1380 0138 17       		.uleb128 0x17
 1381 0139 2E       		.uleb128 0x2e
 1382 013a 00       		.byte	0
 1383 013b 3F       		.uleb128 0x3f
 1384 013c 19       		.uleb128 0x19
 1385 013d 03       		.uleb128 0x3
 1386 013e 0E       		.uleb128 0xe
 1387 013f 3A       		.uleb128 0x3a
 1388 0140 0B       		.uleb128 0xb
 1389 0141 3B       		.uleb128 0x3b
 1390 0142 05       		.uleb128 0x5
 1391 0143 27       		.uleb128 0x27
 1392 0144 19       		.uleb128 0x19
 1393 0145 11       		.uleb128 0x11
 1394 0146 01       		.uleb128 0x1
 1395 0147 12       		.uleb128 0x12
 1396 0148 06       		.uleb128 0x6
 1397 0149 40       		.uleb128 0x40
 1398 014a 18       		.uleb128 0x18
 1399 014b 9742     		.uleb128 0x2117
 1400 014d 19       		.uleb128 0x19
 1401 014e 00       		.byte	0
 1402 014f 00       		.byte	0
 1403 0150 18       		.uleb128 0x18
 1404 0151 2E       		.uleb128 0x2e
 1405 0152 00       		.byte	0
 1406 0153 3F       		.uleb128 0x3f
 1407 0154 19       		.uleb128 0x19
 1408 0155 03       		.uleb128 0x3
 1409 0156 0E       		.uleb128 0xe
 1410 0157 3A       		.uleb128 0x3a
 1411 0158 0B       		.uleb128 0xb
 1412 0159 3B       		.uleb128 0x3b
 1413 015a 05       		.uleb128 0x5
 1414 015b 27       		.uleb128 0x27
 1415 015c 19       		.uleb128 0x19
 1416 015d 49       		.uleb128 0x49
 1417 015e 13       		.uleb128 0x13
 1418 015f 11       		.uleb128 0x11
 1419 0160 01       		.uleb128 0x1
 1420 0161 12       		.uleb128 0x12
 1421 0162 06       		.uleb128 0x6
 1422 0163 40       		.uleb128 0x40
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 34


 1423 0164 18       		.uleb128 0x18
 1424 0165 9742     		.uleb128 0x2117
 1425 0167 19       		.uleb128 0x19
 1426 0168 00       		.byte	0
 1427 0169 00       		.byte	0
 1428 016a 19       		.uleb128 0x19
 1429 016b 05       		.uleb128 0x5
 1430 016c 00       		.byte	0
 1431 016d 03       		.uleb128 0x3
 1432 016e 0E       		.uleb128 0xe
 1433 016f 3A       		.uleb128 0x3a
 1434 0170 0B       		.uleb128 0xb
 1435 0171 3B       		.uleb128 0x3b
 1436 0172 0B       		.uleb128 0xb
 1437 0173 49       		.uleb128 0x49
 1438 0174 13       		.uleb128 0x13
 1439 0175 02       		.uleb128 0x2
 1440 0176 17       		.uleb128 0x17
 1441 0177 00       		.byte	0
 1442 0178 00       		.byte	0
 1443 0179 1A       		.uleb128 0x1a
 1444 017a 34       		.uleb128 0x34
 1445 017b 00       		.byte	0
 1446 017c 03       		.uleb128 0x3
 1447 017d 0E       		.uleb128 0xe
 1448 017e 3A       		.uleb128 0x3a
 1449 017f 0B       		.uleb128 0xb
 1450 0180 3B       		.uleb128 0x3b
 1451 0181 0B       		.uleb128 0xb
 1452 0182 49       		.uleb128 0x49
 1453 0183 13       		.uleb128 0x13
 1454 0184 3F       		.uleb128 0x3f
 1455 0185 19       		.uleb128 0x19
 1456 0186 02       		.uleb128 0x2
 1457 0187 18       		.uleb128 0x18
 1458 0188 00       		.byte	0
 1459 0189 00       		.byte	0
 1460 018a 1B       		.uleb128 0x1b
 1461 018b 2E       		.uleb128 0x2e
 1462 018c 00       		.byte	0
 1463 018d 3F       		.uleb128 0x3f
 1464 018e 19       		.uleb128 0x19
 1465 018f 3C       		.uleb128 0x3c
 1466 0190 19       		.uleb128 0x19
 1467 0191 6E       		.uleb128 0x6e
 1468 0192 0E       		.uleb128 0xe
 1469 0193 03       		.uleb128 0x3
 1470 0194 0E       		.uleb128 0xe
 1471 0195 3A       		.uleb128 0x3a
 1472 0196 0B       		.uleb128 0xb
 1473 0197 3B       		.uleb128 0x3b
 1474 0198 0B       		.uleb128 0xb
 1475 0199 00       		.byte	0
 1476 019a 00       		.byte	0
 1477 019b 00       		.byte	0
 1478              		.section	.debug_loc,"",%progbits
 1479              	.Ldebug_loc0:
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 35


 1480              	.LLST0:
 1481 0000 00000000 		.4byte	.LVL15
 1482 0004 02000000 		.4byte	.LVL16
 1483 0008 0100     		.2byte	0x1
 1484 000a 50       		.byte	0x50
 1485 000b 02000000 		.4byte	.LVL16
 1486 000f 10000000 		.4byte	.LFE7
 1487 0013 0400     		.2byte	0x4
 1488 0015 F3       		.byte	0xf3
 1489 0016 01       		.uleb128 0x1
 1490 0017 50       		.byte	0x50
 1491 0018 9F       		.byte	0x9f
 1492 0019 00000000 		.4byte	0
 1493 001d 00000000 		.4byte	0
 1494              	.LLST1:
 1495 0021 04000000 		.4byte	.LVL17
 1496 0025 06000000 		.4byte	.LVL18
 1497 0029 0500     		.2byte	0x5
 1498 002b 70       		.byte	0x70
 1499 002c 00       		.sleb128 0
 1500 002d 35       		.byte	0x35
 1501 002e 25       		.byte	0x25
 1502 002f 9F       		.byte	0x9f
 1503 0030 00000000 		.4byte	0
 1504 0034 00000000 		.4byte	0
 1505              	.LLST2:
 1506 0038 00000000 		.4byte	.LVL23
 1507 003c 07000000 		.4byte	.LVL24-1
 1508 0040 0100     		.2byte	0x1
 1509 0042 50       		.byte	0x50
 1510 0043 07000000 		.4byte	.LVL24-1
 1511 0047 1A000000 		.4byte	.LFE2
 1512 004b 0100     		.2byte	0x1
 1513 004d 54       		.byte	0x54
 1514 004e 00000000 		.4byte	0
 1515 0052 00000000 		.4byte	0
 1516              		.section	.debug_aranges,"",%progbits
 1517 0000 7C000000 		.4byte	0x7c
 1518 0004 0200     		.2byte	0x2
 1519 0006 00000000 		.4byte	.Ldebug_info0
 1520 000a 04       		.byte	0x4
 1521 000b 00       		.byte	0
 1522 000c 0000     		.2byte	0
 1523 000e 0000     		.2byte	0
 1524 0010 00000000 		.4byte	.LFB4
 1525 0014 BC000000 		.4byte	.LFE4-.LFB4
 1526 0018 00000000 		.4byte	.LFB5
 1527 001c 0C000000 		.4byte	.LFE5-.LFB5
 1528 0020 00000000 		.4byte	.LFB6
 1529 0024 0C000000 		.4byte	.LFE6-.LFB6
 1530 0028 00000000 		.4byte	.LFB7
 1531 002c 10000000 		.4byte	.LFE7-.LFB7
 1532 0030 00000000 		.4byte	.LFB8
 1533 0034 0C000000 		.4byte	.LFE8-.LFB8
 1534 0038 00000000 		.4byte	.LFB9
 1535 003c 0C000000 		.4byte	.LFE9-.LFB9
 1536 0040 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 36


 1537 0044 18000000 		.4byte	.LFE10-.LFB10
 1538 0048 00000000 		.4byte	.LFB11
 1539 004c 0C000000 		.4byte	.LFE11-.LFB11
 1540 0050 00000000 		.4byte	.LFB1
 1541 0054 1C000000 		.4byte	.LFE1-.LFB1
 1542 0058 00000000 		.4byte	.LFB2
 1543 005c 1A000000 		.4byte	.LFE2-.LFB2
 1544 0060 00000000 		.4byte	.LFB3
 1545 0064 14000000 		.4byte	.LFE3-.LFB3
 1546 0068 00000000 		.4byte	.LFB12
 1547 006c 0C000000 		.4byte	.LFE12-.LFB12
 1548 0070 00000000 		.4byte	.LFB13
 1549 0074 0C000000 		.4byte	.LFE13-.LFB13
 1550 0078 00000000 		.4byte	0
 1551 007c 00000000 		.4byte	0
 1552              		.section	.debug_ranges,"",%progbits
 1553              	.Ldebug_ranges0:
 1554 0000 00000000 		.4byte	.LFB4
 1555 0004 BC000000 		.4byte	.LFE4
 1556 0008 00000000 		.4byte	.LFB5
 1557 000c 0C000000 		.4byte	.LFE5
 1558 0010 00000000 		.4byte	.LFB6
 1559 0014 0C000000 		.4byte	.LFE6
 1560 0018 00000000 		.4byte	.LFB7
 1561 001c 10000000 		.4byte	.LFE7
 1562 0020 00000000 		.4byte	.LFB8
 1563 0024 0C000000 		.4byte	.LFE8
 1564 0028 00000000 		.4byte	.LFB9
 1565 002c 0C000000 		.4byte	.LFE9
 1566 0030 00000000 		.4byte	.LFB10
 1567 0034 18000000 		.4byte	.LFE10
 1568 0038 00000000 		.4byte	.LFB11
 1569 003c 0C000000 		.4byte	.LFE11
 1570 0040 00000000 		.4byte	.LFB1
 1571 0044 1C000000 		.4byte	.LFE1
 1572 0048 00000000 		.4byte	.LFB2
 1573 004c 1A000000 		.4byte	.LFE2
 1574 0050 00000000 		.4byte	.LFB3
 1575 0054 14000000 		.4byte	.LFE3
 1576 0058 00000000 		.4byte	.LFB12
 1577 005c 0C000000 		.4byte	.LFE12
 1578 0060 00000000 		.4byte	.LFB13
 1579 0064 0C000000 		.4byte	.LFE13
 1580 0068 00000000 		.4byte	0
 1581 006c 00000000 		.4byte	0
 1582              		.section	.debug_line,"",%progbits
 1583              	.Ldebug_line0:
 1584 0000 FC010000 		.section	.debug_str,"MS",%progbits,1
 1584      0200F400 
 1584      00000201 
 1584      FB0E0D00 
 1584      01010101 
 1585              	.LASF42:
 1586 0000 4D6F746F 		.ascii	"MotorISR_Enable\000"
 1586      72495352 
 1586      5F456E61 
 1586      626C6500 
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 37


 1587              	.LASF17:
 1588 0010 72656733 		.ascii	"reg32\000"
 1588      3200
 1589              	.LASF44:
 1590 0016 4D6F746F 		.ascii	"MotorISR_Disable\000"
 1590      72495352 
 1590      5F446973 
 1590      61626C65 
 1590      00
 1591              	.LASF31:
 1592 0027 436F6E66 		.ascii	"ConfirmISR_Stop\000"
 1592      69726D49 
 1592      53525F53 
 1592      746F7000 
 1593              	.LASF32:
 1594 0037 436F6E66 		.ascii	"ConfirmISR_SetPending\000"
 1594      69726D49 
 1594      53525F53 
 1594      65745065 
 1594      6E64696E 
 1595              	.LASF46:
 1596 004d 4C43445F 		.ascii	"LCD_I2C_setCursor\000"
 1596      4932435F 
 1596      73657443 
 1596      7572736F 
 1596      7200
 1597              	.LASF6:
 1598 005f 73686F72 		.ascii	"short unsigned int\000"
 1598      7420756E 
 1598      7369676E 
 1598      65642069 
 1598      6E7400
 1599              	.LASF25:
 1600 0072 436F6E66 		.ascii	"ConfirmISR_GetVector\000"
 1600      69726D49 
 1600      53525F47 
 1600      65745665 
 1600      63746F72 
 1601              	.LASF29:
 1602 0087 436F6E66 		.ascii	"ConfirmISR_Start\000"
 1602      69726D49 
 1602      53525F53 
 1602      74617274 
 1602      00
 1603              	.LASF40:
 1604 0098 72656164 		.ascii	"readPos\000"
 1604      506F7300 
 1605              	.LASF39:
 1606 00a0 61646472 		.ascii	"addr\000"
 1606      00
 1607              	.LASF14:
 1608 00a5 666C6F61 		.ascii	"float\000"
 1608      7400
 1609              	.LASF47:
 1610 00ab 4C43445F 		.ascii	"LCD_I2C_print\000"
 1610      4932435F 
 1610      7072696E 
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 38


 1610      7400
 1611              	.LASF22:
 1612 00b9 436F6E66 		.ascii	"ConfirmISR_SetPriority\000"
 1612      69726D49 
 1612      53525F53 
 1612      65745072 
 1612      696F7269 
 1613              	.LASF4:
 1614 00d0 756E7369 		.ascii	"unsigned char\000"
 1614      676E6564 
 1614      20636861 
 1614      7200
 1615              	.LASF48:
 1616 00de 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1616      43313120 
 1616      352E342E 
 1616      31203230 
 1616      31363036 
 1617 0111 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1617      20726576 
 1617      6973696F 
 1617      6E203233 
 1617      37373135 
 1618 0144 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1618      66756E63 
 1618      74696F6E 
 1618      2D736563 
 1618      74696F6E 
 1619              	.LASF16:
 1620 016c 72656738 		.ascii	"reg8\000"
 1620      00
 1621              	.LASF8:
 1622 0171 6C6F6E67 		.ascii	"long unsigned int\000"
 1622      20756E73 
 1622      69676E65 
 1622      6420696E 
 1622      7400
 1623              	.LASF36:
 1624 0183 4650536D 		.ascii	"FPSmPos\000"
 1624      506F7300 
 1625              	.LASF12:
 1626 018b 75696E74 		.ascii	"uint8\000"
 1626      3800
 1627              	.LASF37:
 1628 0191 6D506F73 		.ascii	"mPos\000"
 1628      00
 1629              	.LASF33:
 1630 0196 436F6E66 		.ascii	"ConfirmISR_ClearPending\000"
 1630      69726D49 
 1630      53525F43 
 1630      6C656172 
 1630      50656E64 
 1631              	.LASF24:
 1632 01ae 7072696F 		.ascii	"priority\000"
 1632      72697479 
 1632      00
 1633              	.LASF49:
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 39


 1634 01b7 47656E65 		.ascii	"Generated_Source\\PSoC5\\ConfirmISR.c\000"
 1634      72617465 
 1634      645F536F 
 1634      75726365 
 1634      5C50536F 
 1635              	.LASF15:
 1636 01db 646F7562 		.ascii	"double\000"
 1636      6C6500
 1637              	.LASF26:
 1638 01e2 436F6E66 		.ascii	"ConfirmISR_GetPriority\000"
 1638      69726D49 
 1638      53525F47 
 1638      65745072 
 1638      696F7269 
 1639              	.LASF50:
 1640 01f9 453A5C53 		.ascii	"E:\\SP21\\ECE405\\BioLock\\BioLock.cydsn\000"
 1640      5032315C 
 1640      45434534 
 1640      30355C42 
 1640      696F4C6F 
 1641              	.LASF30:
 1642 021e 436F6E66 		.ascii	"ConfirmISR_StartEx\000"
 1642      69726D49 
 1642      53525F53 
 1642      74617274 
 1642      457800
 1643              	.LASF13:
 1644 0231 75696E74 		.ascii	"uint32\000"
 1644      333200
 1645              	.LASF19:
 1646 0238 436F6E66 		.ascii	"ConfirmISR_Interrupt\000"
 1646      69726D49 
 1646      53525F49 
 1646      6E746572 
 1646      72757074 
 1647              	.LASF0:
 1648 024d 756E7369 		.ascii	"unsigned int\000"
 1648      676E6564 
 1648      20696E74 
 1648      00
 1649              	.LASF23:
 1650 025a 61646472 		.ascii	"address\000"
 1650      65737300 
 1651              	.LASF9:
 1652 0262 6C6F6E67 		.ascii	"long long unsigned int\000"
 1652      206C6F6E 
 1652      6720756E 
 1652      7369676E 
 1652      65642069 
 1653              	.LASF20:
 1654 0279 436F6E66 		.ascii	"ConfirmISR_SetVector\000"
 1654      69726D49 
 1654      53525F53 
 1654      65745665 
 1654      63746F72 
 1655              	.LASF18:
 1656 028e 63796973 		.ascii	"cyisraddress\000"
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 40


 1656      72616464 
 1656      72657373 
 1656      00
 1657              	.LASF28:
 1658 029b 436F6E66 		.ascii	"ConfirmISR_Disable\000"
 1658      69726D49 
 1658      53525F44 
 1658      69736162 
 1658      6C6500
 1659              	.LASF10:
 1660 02ae 73697A65 		.ascii	"sizetype\000"
 1660      74797065 
 1660      00
 1661              	.LASF1:
 1662 02b7 6C6F6E67 		.ascii	"long long int\000"
 1662      206C6F6E 
 1662      6720696E 
 1662      7400
 1663              	.LASF27:
 1664 02c5 436F6E66 		.ascii	"ConfirmISR_Enable\000"
 1664      69726D49 
 1664      53525F45 
 1664      6E61626C 
 1664      6500
 1665              	.LASF21:
 1666 02d7 72616D56 		.ascii	"ramVectorTable\000"
 1666      6563746F 
 1666      72546162 
 1666      6C6500
 1667              	.LASF38:
 1668 02e6 6D466C61 		.ascii	"mFlag\000"
 1668      6700
 1669              	.LASF35:
 1670 02ec 46505349 		.ascii	"FPSID\000"
 1670      4400
 1671              	.LASF5:
 1672 02f2 73686F72 		.ascii	"short int\000"
 1672      7420696E 
 1672      7400
 1673              	.LASF51:
 1674 02fc 436F6E66 		.ascii	"ConfirmISR_GetState\000"
 1674      69726D49 
 1674      53525F47 
 1674      65745374 
 1674      61746500 
 1675              	.LASF7:
 1676 0310 6C6F6E67 		.ascii	"long int\000"
 1676      20696E74 
 1676      00
 1677              	.LASF11:
 1678 0319 63686172 		.ascii	"char\000"
 1678      00
 1679              	.LASF2:
 1680 031e 6C6F6E67 		.ascii	"long double\000"
 1680      20646F75 
 1680      626C6500 
 1681              	.LASF3:
ARM GAS  C:\Users\chascha\AppData\Local\Temp\ccEm3OBp.s 			page 41


 1682 032a 7369676E 		.ascii	"signed char\000"
 1682      65642063 
 1682      68617200 
 1683              	.LASF45:
 1684 0336 73707269 		.ascii	"sprintf\000"
 1684      6E746600 
 1685              	.LASF43:
 1686 033e 43794465 		.ascii	"CyDelay\000"
 1686      6C617900 
 1687              	.LASF34:
 1688 0346 62757474 		.ascii	"buttonID\000"
 1688      6F6E4944 
 1688      00
 1689              	.LASF41:
 1690 034f 536F6C65 		.ascii	"Solenoid_Write\000"
 1690      6E6F6964 
 1690      5F577269 
 1690      746500
 1691              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
